<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Nag VBT Blog</title>
        <link>https://nagvbt.github.io/blog</link>
        <description>Nag VBT Blog</description>
        <lastBuildDate>Thu, 27 Apr 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Web Frontend Developer in 2023]]></title>
            <link>https://nagvbt.github.io/blog/2023/04/27/web-resources</link>
            <guid>https://nagvbt.github.io/blog/2023/04/27/web-resources</guid>
            <pubDate>Thu, 27 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[To become an Web Frontend Developer in 2023 you need to know the following skiils.]]></description>
            <content:encoded><![CDATA[<p>To become an Web Frontend Developer in 2023 you need to know the following skiils.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="basic-skills">Basic Skills<a href="#basic-skills" class="hash-link" aria-label="Direct link to Basic Skills" title="Direct link to Basic Skills">​</a></h3><p>If you decide to become an web developer. Then you should have understanding of the following technologies.</p><ol><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML" target="_blank" rel="noopener noreferrer">HTML: HyperText Markup Language | MDN</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS" target="_blank" rel="noopener noreferrer">CSS: Cascading Style Sheets | MDN</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" target="_blank" rel="noopener noreferrer">JavaScript | MDN</a>   </li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="advanced-skills">Advanced Skills<a href="#advanced-skills" class="hash-link" aria-label="Direct link to Advanced Skills" title="Direct link to Advanced Skills">​</a></h3><p>Specilaize any one of the UI Frameworks</p><ol><li><a href="https://react.dev/" target="_blank" rel="noopener noreferrer">React</a></li><li><a href="https://angular.io/" target="_blank" rel="noopener noreferrer">Angular</a></li><li><a href="https://vuejs.org/" target="_blank" rel="noopener noreferrer">Vue</a></li></ol><p>I prefer to go with React.</p>]]></content:encoded>
            <category>Web</category>
        </item>
        <item>
            <title><![CDATA[React Native minimal app component]]></title>
            <link>https://nagvbt.github.io/blog/2022/06/08/rn-minimal-app</link>
            <guid>https://nagvbt.github.io/blog/2022/06/08/rn-minimal-app</guid>
            <pubDate>Wed, 08 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Minimal code required to start a React-Native component is]]></description>
            <content:encoded><![CDATA[<p>Minimal code required to start a React-Native component is</p><p>a. An App Class which extends from React.Component</p><p>b. styles that are created from <code>StyleSheet.Create({})</code></p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">StyleSheet</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Text</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">View</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react-native"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">App</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">React</span><span class="token class-name punctuation" style="color:#393A34">.</span><span class="token class-name">Component</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">render</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">View</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">styles</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">container</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Text</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Hello World</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Text</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">View</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> styles </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">StyleSheet</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">container</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">flex</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">alignItems</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'center'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">justifyContent</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'center'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>React Native</category>
        </item>
        <item>
            <title><![CDATA[Using Flow in React Native project]]></title>
            <link>https://nagvbt.github.io/blog/2022/06/04/using-flow</link>
            <guid>https://nagvbt.github.io/blog/2022/06/04/using-flow</guid>
            <pubDate>Sat, 04 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Flow is used for static type checking in javascript. Flow works best when installed per-project with explicit versioning rather than globally.]]></description>
            <content:encoded><![CDATA[<p>Flow is used for static type checking in javascript. Flow works best when installed per-project with explicit versioning rather than globally.</p><p>Steps:</p><ul><li><strong><em>Add a devDependency on the&nbsp;<code>flow-bin</code>&nbsp;npm package:</em></strong></li></ul><p><code>yarn add –dev flow-bin</code></p><ul><li><strong><em>Run&nbsp;<code>yarn run flow init</code>&nbsp;before executing&nbsp;<code>yarn run flow</code>.</em></strong></li></ul><p><code>yarn run flow init</code>&nbsp;</p><ul><li><strong><em>To run Flow</em></strong></li></ul><p><code>yarn run flow</code></p><ul><li>Add ‘.flowconfig’ and add ./node<!-- -->_<!-- -->modules/.<!-- -->\<!-- -->*<!-- --> &nbsp;under <!-- -->[<!-- -->ignore<!-- -->]</li></ul>]]></content:encoded>
            <category>React</category>
        </item>
        <item>
            <title><![CDATA[Books For Personal Growth & Wealth]]></title>
            <link>https://nagvbt.github.io/blog/2021/07/06/books-for-personal-growth-wealth</link>
            <guid>https://nagvbt.github.io/blog/2021/07/06/books-for-personal-growth-wealth</guid>
            <pubDate>Tue, 06 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Recently I had completed the set of four books which are worlds greatest books on personal Growth and Wealth.]]></description>
            <content:encoded><![CDATA[<p>Recently I had completed the set of four books which are worlds greatest books on personal Growth and Wealth.
Lets have a look which books are contained in this set.</p><p><strong>Personal Growth:</strong></p><ol><li><a href="https://amzn.to/3hh4p0u" target="_blank" rel="noopener noreferrer">How to Win Friends and Influence People&nbsp;by Dale Carnegie</a></li></ol><p><strong>Wealth Creation</strong></p><ol><li><p><a href="https://amzn.to/3qOXWwM" target="_blank" rel="noopener noreferrer">The Richest Man in Babylon by George S. Clason</a></p></li><li><p><a href="https://amzn.to/3jS33uH" target="_blank" rel="noopener noreferrer">Think and Grow Rich by Napoleon Hill</a></p></li></ol><p>Wanted to buy the set of 4 books use below Links:</p><ul><li><p>Amazon Link for Paperback: <a href="https://amzn.to/3AwekXB" target="_blank" rel="noopener noreferrer">https://amzn.to/3AwekXB</a></p></li><li><p>Amazon Link for Harcover: <a href="https://amzn.to/2TJpgAp" target="_blank" rel="noopener noreferrer">https://amzn.to/2TJpgAp</a></p></li><li><p>Amazon Link for Kindle version: <a href="https://amzn.to/3hDwLAU" target="_blank" rel="noopener noreferrer">https://amzn.to/3hDwLAU</a></p></li></ul>]]></content:encoded>
            <category>Books</category>
        </item>
        <item>
            <title><![CDATA[React Native App using Expo]]></title>
            <link>https://nagvbt.github.io/blog/2021/06/06/react-native-app-using-expo</link>
            <guid>https://nagvbt.github.io/blog/2021/06/06/react-native-app-using-expo</guid>
            <pubDate>Sun, 06 Jun 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[React Native]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="react-native">React Native<a href="#react-native" class="hash-link" aria-label="Direct link to React Native" title="Direct link to React Native">​</a></h2><p>Create native apps for Android and iOS using React</p><p>React Native combines the best parts of native development with React, a best-in-class JavaScript library for building user interfaces.</p><p><a href="https://reactnative.dev/" target="_blank" rel="noopener noreferrer">Refer</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="expo">Expo:<a href="#expo" class="hash-link" aria-label="Direct link to Expo:" title="Direct link to Expo:">​</a></h2><p>Expo is a platform built around React Native and native platforms which enable you to develop, build, deploy, and quickly iterate on iOS, Android, and web apps from the same JavaScript/TypeScript codebase.</p><p><a href="https://docs.expo.io/" target="_blank" rel="noopener noreferrer">Refer</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="install-expo">Install Expo<a href="#install-expo" class="hash-link" aria-label="Direct link to Install Expo" title="Direct link to Install Expo">​</a></h3><p><code>npm install --global expo-cli</code></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="create-new-project">Create new project<a href="#create-new-project" class="hash-link" aria-label="Direct link to Create new project" title="Direct link to Create new project">​</a></h3><p><code>expo init nag-rn</code></p><p>Selection of Template</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;expo init nag-rn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Choose a template: » - Use arrow-keys. Return to submit.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ----- Managed workflow -----</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;   blank                 a minimal app as clean as an empty canvas</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    blank (TypeScript)    same as blank but with TypeScript configuration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    tabs (TypeScript)     several example screens and tabs using react-navigation and TypeScript</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ----- Bare workflow -----</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    minimal               bare and minimal, just the essentials to get you started</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    minimal (TypeScript)  same as minimal but with TypeScript configuration</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Selected the Tabs Template</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">√ Choose a template: » tabs (TypeScript)     several example screens and tabs using react-navigation and TypeScript</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">√ Downloaded and extracted project files.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">� Using Yarn to install packages. Pass --npm to use npm instead.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">√ Installed JavaScript dependencies.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&amp;#x2705; Your project is ready!</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">To run your project, navigate to the directory and run one of the following yarn commands.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- cd nag-rn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- yarn start # you can open iOS, Android, or web from here, or run them directly with the commands below.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- yarn android</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- yarn ios # requires an iOS device or macOS for access to an iOS s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- yarn web</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Change the directory and Start the app.</p><p><code>cd nag-rn</code> </p><p><code>yarn start</code></p>]]></content:encoded>
            <category>React Native</category>
        </item>
        <item>
            <title><![CDATA[Component Library With Ionic+Angular]]></title>
            <link>https://nagvbt.github.io/blog/2021/06/02/ionic-lib</link>
            <guid>https://nagvbt.github.io/blog/2021/06/02/ionic-lib</guid>
            <pubDate>Wed, 02 Jun 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[1\. Summary]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-summary">1<!-- -->.<!-- --> Summary<a href="#1-summary" class="hash-link" aria-label="Direct link to 1-summary" title="Direct link to 1-summary">​</a></h2><p>A component library is a collection of logically group components so that one can explore, select components and helps in maintaining consistent design across projects. nag-ionic-lib built using following components.</p><ol><li>Angular cli (ng generate library)</li><li>Ionic cli</li><li>Storybook</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-how-to-create-a-ionic-library-refer-code">2<!-- -->.<!-- --> How to Create a Ionic Library <a href="https://github.com/nagvbt/nag-ionic-lib/commit/773b8a681b655a705648fe43d4a887f6143cbf19" target="_blank" rel="noopener noreferrer">Refer Code:</a><a href="#2-how-to-create-a-ionic-library-refer-code" class="hash-link" aria-label="Direct link to 2-how-to-create-a-ionic-library-refer-code" title="Direct link to 2-how-to-create-a-ionic-library-refer-code">​</a></h2><ol><li>Generate library skeleton in a new workspace with the following commands.</li></ol><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    ng new nag-workspace --create-application=false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cd nag-workspace</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ng generate library nag-ionic-lib</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol><li><p>Add a custom component</p><p><code>ng g component customCard</code></p></li></ol><ol start="2"><li>Add symlink between your local node modules folder and this dist folder <a href="https://github.com/nagvbt/nag-ionic-lib/commit/4e2430e9812dd8e45d252e68ed294ed69524de51" target="_blank" rel="noopener noreferrer">Refer Code:</a></li></ol><p>You can now run <code>yarn link "nag-ionic-lib"</code> in the projects where you want to use this package and it will be used instead.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    ng build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cd dist</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">nag</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">ionic</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">lib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    yarn link</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">**</span><span class="token operator" style="color:#393A34">**</span><span class="token operator" style="color:#393A34">**</span><span class="token plain"> </span><span class="token maybe-class-name">Command</span><span class="token plain"> output </span><span class="token operator" style="color:#393A34">**</span><span class="token operator" style="color:#393A34">**</span><span class="token operator" style="color:#393A34">**</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    yarn link</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    yarn link v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token number" style="color:#36acaa">22.4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    warning </span><span class="token keyword" style="color:#00009f">package</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">json</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">No</span><span class="token plain"> license field</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    warning </span><span class="token keyword" style="color:#00009f">package</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">json</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">No</span><span class="token plain"> license field</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    success </span><span class="token maybe-class-name">Registered</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"nag-ionic-lib"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property-access">info</span><span class="token plain"> </span><span class="token maybe-class-name">You</span><span class="token plain"> can now run yarn link </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">span </span><span class="token keyword" style="color:#00009f">class</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"hljs-string"</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token string" style="color:#e3116c">"nag-ionic-lib"</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">span</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> the projects where you want to use </span><span class="token keyword" style="color:#00009f">this</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> and it will be used instead</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> </span><span class="token property-access maybe-class-name">Done</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">09s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="3"><li>Adding Ionic to your Library<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    cd projects/nag-ionic-lib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    yarn add --dev @ionic/angular</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><ol start="4"><li>And Modify the 'nag-ionic-lib.module.ts'</li></ol><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">NgModule</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">ModuleWithProviders</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">InjectionToken</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@angular/core'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">NagIonicLibComponent</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./nag-ionic-lib.component'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">CustomCardComponent</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./custom-card/custom-card.component'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">CommonModule</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@angular/common'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">IonicModule</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@ionic/angular'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">HttpClientModule</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@angular/common/http'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">NagIonicLibService</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'nag-ionic-lib'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">LibConfig</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">apiUrl</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token maybe-class-name">LibConfigService</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">InjectionToken</span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">LibConfig</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">('LibConfig');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    @NgModule(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">declarations</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">NagIonicLibComponent</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">CustomCardComponent</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">imports</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">CommonModule</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">HttpClientModule</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">IonicModule</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">exports</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">NagIonicLibComponent</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token maybe-class-name">CustomCardComponent</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    export class NagIonicLibModule </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">forRoot</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">config</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">LibConfig</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">ModuleWithProviders</span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">NagIonicLibModule</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">ngModule</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">NagIonicLibModule</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">providers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token maybe-class-name">NagIonicLibService</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token literal-property property" style="color:#36acaa">provide</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">LibConfigService</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token literal-property property" style="color:#36acaa">useValue</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">     }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/nagvbt/nag-ionic-lib/commit/5afea14b8bfd457cf7396a56d96fb361ee4f7850" target="_blank" rel="noopener noreferrer">Refer Code</a></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="modify-the-custom-card-refer-code">Modify the Custom-Card <a href="https://github.com/nagvbt/nag-ionic-lib/commit/ca6bdf5d2f1f6b4555095fa7e6d72a17de4167bc" target="_blank" rel="noopener noreferrer">Refer Code</a><a href="#modify-the-custom-card-refer-code" class="hash-link" aria-label="Direct link to modify-the-custom-card-refer-code" title="Direct link to modify-the-custom-card-refer-code">​</a></h4><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// custom-card.component.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Component</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">OnInit</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Input</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@angular/core'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @</span><span class="token function maybe-class-name" style="color:#d73a49">Component</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">selector</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'custom-card'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">templateUrl</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./custom-card.component.html'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">styleUrls</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'./custom-card.component.css'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">CustomCardComponent</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">implements</span><span class="token plain"> </span><span class="token class-name">OnInit</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      @</span><span class="token function maybe-class-name" style="color:#d73a49">Input</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> title</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      @</span><span class="token function maybe-class-name" style="color:#d73a49">Input</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">ngOnInit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">!</span><span class="token operator" style="color:#393A34">--</span><span class="token plain"> custom</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">card</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">component</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">html</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">ion-card</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">ion-card-header</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">ion-card-title</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> title </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">ion-card-title</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">ion-card-header</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">ion-card-content</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> content </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">ion-card-content</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">ion-card</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-publish-the-lib-to-npm">3<!-- -->.<!-- --> Publish the Lib to npm<a href="#3-publish-the-lib-to-npm" class="hash-link" aria-label="Direct link to 3-publish-the-lib-to-npm" title="Direct link to 3-publish-the-lib-to-npm">​</a></h2><p>Use the below commands</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    ng build --prod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cd dist/nag-ionic-lib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    npm publish</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>Ionic</category>
            <category>Angular</category>
        </item>
        <item>
            <title><![CDATA[Building A Component Library With React]]></title>
            <link>https://nagvbt.github.io/blog/2021/05/30/building-a-component-library-with-react</link>
            <guid>https://nagvbt.github.io/blog/2021/05/30/building-a-component-library-with-react</guid>
            <pubDate>Sun, 30 May 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus Plushie]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/nag-rlib-13a07a03b9aaaa3f0500d33635866171.png" width="941" height="303" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-summary">1<!-- -->.<!-- --> Summary<a href="#1-summary" class="hash-link" aria-label="Direct link to 1-summary" title="Direct link to 1-summary">​</a></h2><p>A component library is a collection of logically group components so that one can explore, select components and helps in maintaining consistent design across projects. nag-rlib built usng following components.</p><ol><li>create-react-library</li><li>Storybook</li><li>react-testing-library</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-how-to-create-a-react-library">2<!-- -->.<!-- --> How to Create a React Library<a href="#2-how-to-create-a-react-library" class="hash-link" aria-label="Direct link to 2-how-to-create-a-react-library" title="Direct link to 2-how-to-create-a-react-library">​</a></h2><p>You can create a React Library using the create-react-library (<a href="https://github.com/transitive-bullshit/create-react-library" target="_blank" rel="noopener noreferrer"></a><a href="https://github.com/transitive-bullshit/create-react-library" target="_blank" rel="noopener noreferrer">https://github.com/transitive-bullshit/create-react-library</a>) CLI which uses Rollup.js and create-react-app.</p><p><a href="https://rollupjs.org/guide/en/#overview" target="_blank" rel="noopener noreferrer">Rollup.js</a> is a module bundler for JavaScript which compiles small pieces of code into something larger and more complex, such as a library.</p><p><strong><em>Steps:</em></strong></p><p><strong>1.Install create-react-library globally</strong> </p><p>This package requires node &gt;= 10.</p><p><code>npm install -g create-react-library</code></p><p><strong>2.Create Library</strong></p><p>Fire up the command prompt and use the below commandcd</p><p><code>npx create-react-library</code></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Microsoft Windows [Version 10.0.19042.985]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(c) Microsoft Corporation. All rights reserved.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C:\Nag\myDrive\blog\React\NagLib&gt;npx create-react-library</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npx: installed 150 in 21.621s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Package Name nag-rlib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Package Description Nag React Library</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Author's GitHub Handle nagvbt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? GitHub Repo Path nagvbt/nag-rlib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? License NAG VBT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Package Manager yarn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Template default</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>3<!-- -->.<!-- --> Install RollupJs and configure</strong></p><p><strong>a. Install Babel Preset</strong></p><p><code>yarn add --dev @babel/preset-react</code></p><p><code>yarn add --dev @babel/preset-env</code></p><p>add <code>.babelrc</code> file with below contents</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "presets": ["@babel/env", "@babel/preset-react"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>b. Install Rollupjs</strong></p><p><code>yarn add --dev rollup</code></p><p><code>yarn add --dev rollup-plugin-delete</code></p><p><code>yarn add --dev rollup-plugin-peer-deps-external</code></p><p><strong>c. Install Rollupjs Plugins</strong></p><p><code>yarn add rollup-plugin-commonjs</code></p><p><code>yarn add rollup-plugin-node-resolve</code></p><p><code>yarn add @rollup/plugin-json</code></p><p><code>yarn add --dev @rollup/plugin-babel</code></p><p><code>yarn add --dev rollup-plugin-scss</code></p><p><strong>c. Add rollup.config.js</strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import babel from '@rollup/plugin-babel';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import external from 'rollup-plugin-peer-deps-external';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import del from 'rollup-plugin-delete';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import resolve from 'rollup-plugin-node-resolve';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import commonjs from 'rollup-plugin-commonjs';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import json from '@rollup/plugin-json';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import pkg from './package.json';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const extensions = ['.js', '.jsx'];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export default {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  input: pkg.source,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  output: [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { file: pkg.main, format: 'cjs' },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { file: pkg.module, format: 'esm' }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  plugins: [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resolve({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      extensions,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      modulesOnly: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    json({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      compact: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    commonjs(),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    external(),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    babel({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      exclude: 'node_modules/**'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    del({ targets: ['dist/*'] })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  external: Object.keys(pkg.peerDependencies || {})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">};</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>d. Update the commands</strong></p><p>Add below commands in scripts section of package.json</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">"build": "rollup -c",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"build:dev": "rollup -c -w",</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-build-and-launch-the-example-site">3<!-- -->.<!-- --> Build and Launch the example site<a href="#3-build-and-launch-the-example-site" class="hash-link" aria-label="Direct link to 3-build-and-launch-the-example-site" title="Direct link to 3-build-and-launch-the-example-site">​</a></h2><p>To get started, in one tab, run:</p><p><code>$ cd nag-rlib &amp;&amp; yarn build</code></p><p>And in another command window, run the create-react-app dev server:</p><p><code>$ cd nag-rlib\example &amp;&amp; yarn start</code></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-create-github-repo-and-push-the-code">4<!-- -->.<!-- --> Create Github Repo and push the code<a href="#4-create-github-repo-and-push-the-code" class="hash-link" aria-label="Direct link to 4-create-github-repo-and-push-the-code" title="Direct link to 4-create-github-repo-and-push-the-code">​</a></h2><p>Steps: Refer Code changes <a href="https://github.com/nagvbt/nag-rlib/commit/03e8a144f5afa4edf43b8e47f3dd1facf8d63a6b" target="_blank" rel="noopener noreferrer">here</a></p><p>a. Open command prompt and Fire up the command</p><p><code>cd nag-rlib</code></p><p>Use the below Git Commands to set the email and user name of the github</p><p>1.Update email and username using:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    a.git config user.email "[email&nbsp;protected]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    b.git config user.name "nagvbt"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2.Check if they are updated correctly:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    a.git config user.email</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    b.git config user.name</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>b. Create a new repository in Github with the same project name say nag-rlib</p><p>Create a new repository<br>
<!-- -->…or push an existing repository from the command line</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git remote add origin https://github.com/nagvbt/nag-rlib.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git branch -M main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git push -u origin main</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-upgrade-packages">5<!-- -->.<!-- --> Upgrade Packages<a href="#5-upgrade-packages" class="hash-link" aria-label="Direct link to 5-upgrade-packages" title="Direct link to 5-upgrade-packages">​</a></h2><p>To upgrade the Packages to latest by using the command <code>yarn upgrade --latest</code></p><p>Steps: Refer Code changes <a href="https://github.com/nagvbt/nag-rlib/commit/0243b0a59267e9798502abf72705f6d1b02f7768" target="_blank" rel="noopener noreferrer">here</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="6-export-multiple-components">6<!-- -->.<!-- --> Export Multiple Components<a href="#6-export-multiple-components" class="hash-link" aria-label="Direct link to 6-export-multiple-components" title="Direct link to 6-export-multiple-components">​</a></h2><p>Steps: Refer Code changes <a href="https://github.com/nagvbt/nag-rlib/commit/021a6cefe46e436333b0d7fdadb9b30573addf95" target="_blank" rel="noopener noreferrer">here</a></p><ol><li><p>Create Two componentsa. src<!-- -->\<!-- -->ExampleComponent1<!-- -->\<!-- -->ExampleComponent1.jsx</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import React from 'react';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import styles from '../../styles.module.css';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">function ExampleComponent1({ text }) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  return &lt;div className={styles.test}&gt;Example Component 1: {text}&lt;/div&gt;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export default ExampleComponent1;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>b. src<!-- -->\<!-- -->ExampleComponent2<!-- -->\<!-- -->ExampleComponent2.jsx</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import React from 'react';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import styles from '../../styles.module.css';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">function ExampleComponent2({ text }) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  return &lt;div className={styles.test}&gt;Example Component 2: {text}&lt;/div&gt;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export default ExampleComponent2;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Rename src<!-- -->\<!-- -->index.js to src<!-- -->\<!-- -->index.jsx</p></li><li><p>Change the extension of index.js to index.jsx in package.json<code>"source": "src/index.jsx",</code></p></li><li><p>Import the ExampleComponent1 and ExampleComponent2 in index.jsx and export them so that the example component can consume the two components</p><p>import ExampleComponent1 from './components/ExampleComponent1/ExampleComponent1';
import ExampleComponent2 from './components/ExampleComponent2/ExampleComponent2';</p><p>export { ExampleComponent1, ExampleComponent2 };</p></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="7-install-storybook">7<!-- -->.<!-- --> Install Storybook<a href="#7-install-storybook" class="hash-link" aria-label="Direct link to 7-install-storybook" title="Direct link to 7-install-storybook">​</a></h2><p>Storybook makes development faster and easier by isolating components with business logic. Install Storybook using below command.</p><p><code>npx sb init</code></p><p><strong><em>Addons</em></strong></p><p>Install Addons.</p><p>By Default you will get two Addons<br>
<!-- -->a. Essential addons <a href="https://storybook.js.org/docs/react/essentials/introduction" target="_blank" rel="noopener noreferrer">Refer</a><br>
<!-- -->b. addon-links</p><ol><li>Add Aditional addons <a href="https://github.com/nagvbt/nag-rlib/commit/076bb5062ef90720cf6741b2a257ad244865b883" target="_blank" rel="noopener noreferrer">Refer Code</a></li></ol><table><thead><tr><th>S#</th><th>Addon</th><th>Command</th><th>Description</th></tr></thead><tbody><tr><td>1</td><td><a href="https://github.com/storybookjs/storybook/tree/next/addons/a11y" target="_blank" rel="noopener noreferrer">a11y</a></td><td>yarn add @storybook/addon-a11y –dev</td><td>Test components for user accessibility in Storybook</td></tr><tr><td>2</td><td><a href="https://github.com/storybookjs/storybook/tree/next/addons/storysource" target="_blank" rel="noopener noreferrer">storysource</a></td><td>yarn add @storybook/addon-storysource –dev</td><td>View the code of your stories within the Storybook UI</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="8-unit-testing-and-code-coverage">8<!-- -->.<!-- --> Unit Testing and Code Coverage<a href="#8-unit-testing-and-code-coverage" class="hash-link" aria-label="Direct link to 8-unit-testing-and-code-coverage" title="Direct link to 8-unit-testing-and-code-coverage">​</a></h2><p><a href="https://github.com/nagvbt/nag-rlib/commit/5e2778980b9da0a02e43b5e3b69e753f4d35e238" target="_blank" rel="noopener noreferrer">Refer Code</a></p><p><strong>a. Add React Testing Library</strong> <a href="https://github.com/testing-library/react-testing-library" target="_blank" rel="noopener noreferrer">Refer</a></p><p>It is a very lightweight solution for testing React components. It provides light utility functions on top of react-dom and react-dom/test-utils, in a way that encourages better testing practices. To install react-testing-library use the below command.</p><p><code>yarn add --dev @testing-library/react</code></p><p><strong>b. Add DOM Testing Library</strong> <a href="https://github.com/testing-library/dom-testing-library#readme" target="_blank" rel="noopener noreferrer">Refer</a></p><p>The DOM Testing Library is a very light-weight solution for testing DOM nodes. To install DOM Testing Library use the below command.</p><p><code>yarn add --dev @testing-library/dom</code></p><p><strong>c. Add Jest-Dom</strong> <a href="https://github.com/testing-library/jest-dom#readme" target="_blank" rel="noopener noreferrer">Refer</a></p><p>The @testing-library/jest-dom library provides a set of custom jest matchers that you can use to extend jest. These will make your tests more declarative, clear to read and to maintain. To install Jest-Dom use the below command.</p><p><code>yarn add --dev @testing-library/jest-dom</code></p><p><strong>d. Add user-event</strong> <a href="https://github.com/testing-library/user-event" target="_blank" rel="noopener noreferrer">Refer</a></p><p>user-event tries to simulate the real events that would happen in the browser as the user interacts with it. For example userEvent.click(checkbox) would change the state of the checkbox. To install user-event use the below command.</p><p><code>yarn add --dev @testing-library/user-event</code></p><p><strong>e. Add below code in package.json under scripts section to run the tests and generate the code coverage.</strong></p><p><code>"test:dev": "react-scripts test --coverage --coverageDirectory='coverage' --env=jsdom --watchAll",</code></p><p><strong>f. Install jest-fail-on-console</strong> <a href="https://github.com/ricardo-ch/jest-fail-on-console" target="_blank" rel="noopener noreferrer">Refer</a></p><p>Utility to make jest tests fail when console.error() or console.warn() are used. To install user-event use the below command.</p><p><code>yarn add --dev jest-fail-on-console</code></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="9-eslint">9<!-- -->.<!-- --> Eslint<a href="#9-eslint" class="hash-link" aria-label="Direct link to 9-eslint" title="Direct link to 9-eslint">​</a></h2><p><a href="https://github.com/nagvbt/nag-rlib/commit/d3c74d49b9f346a6d15e7d5bfaf1379dee724959" target="_blank" rel="noopener noreferrer">Refer Code</a></p><p><strong>a. Install airbnb</strong><br>
<!-- -->This package provides Airbnb’s .eslintrc as an extensible shared config. <a href="https://github.com/airbnb/javascript" target="_blank" rel="noopener noreferrer">Refer</a></p><p><code>npx install-peerdeps --dev eslint-config-airbnb</code></p><p><strong>b. Install prop-types</strong></p><p>Runtime type checking for React props and similar objects. <a href="https://github.com/facebook/prop-types" target="_blank" rel="noopener noreferrer">Refer</a></p><p><code>yarn add prop-types</code></p><p><strong>c. Install eslint-plugin-react-hooks</strong><br>
<!-- -->This ESLint plugin enforces the <a href="https://reactjs.org/docs/hooks-rules.html" target="_blank" rel="noopener noreferrer">Rules</a> of Hooks.</p><p><code>yarn add --dev eslint-plugin-react-hooks</code></p><p>Then extend the recommended eslint config:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "extends": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "plugin:react-hooks/recommended"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>d. Install eslint-plugin-testing-library</strong><br>
<!-- -->ESLint plugin to follow best practices and anticipate common mistakes when writing tests with Testing Library<br>
<a href="https://github.com/testing-library/eslint-plugin-testing-library" target="_blank" rel="noopener noreferrer">Refer</a></p><p><code>yarn add --dev eslint-plugin-testing-library</code></p><p><strong>e. Install eslint-plugin-jest-dom</strong></p><p>ESLint plugin to follow best practices and anticipate common mistakes when writing tests with jest-dom.<br>
<a href="https://github.com/testing-library/eslint-plugin-jest-dom" target="_blank" rel="noopener noreferrer">Refer</a></p><p><code>yarn add --dev eslint-plugin-jest-dom</code></p><p>Then extend the recommended eslint config:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "extends": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "plugin:jest-dom/recommended"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>f. Install eslint-config-react-app</strong><br>
<!-- -->This package includes the shareable ESLint configuration used by Create React App.</p><p><code>yarn add --dev eslint-config-react-app</code></p><p>Then extend the recommended eslint config:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "extends": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "react-app"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="10-publish-the-library-to-npm">10<!-- -->.<!-- --> Publish the Library to npm<a href="#10-publish-the-library-to-npm" class="hash-link" aria-label="Direct link to 10-publish-the-library-to-npm" title="Direct link to 10-publish-the-library-to-npm">​</a></h2><p>The command used to publish the lib as a public library you need to have a login in <a href="https://www.npmjs.com/" target="_blank" rel="noopener noreferrer"></a><a href="https://www.npmjs.com/" target="_blank" rel="noopener noreferrer">https://www.npmjs.com/</a></p><p><code>yarn publish --access=public</code></p><p>Following questions will be asked</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">yarn publish v1.22.4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[1/4] Bumping version...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">info Current version: 1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">question New version:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[2/4] Logging in...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">info npm username: nagvbt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">info npm email: [email&nbsp;protected]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">question npm password:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">success Logged in.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[3/4] Publishing...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ run-s build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yarn run v1.22.4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ microbundle-crl --no-compress --format modern,cjs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Build "nagRlib" to dist:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        357 B: index.js.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        297 B: index.js.br</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        286 B: index.modern.js.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        234 B: index.modern.js.br</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Done in 3.78s.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">success Published.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[4/4] Revoking token...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">success Revoked login token.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Done in 24.67s.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>React</category>
        </item>
        <item>
            <title><![CDATA[How to Create a New React App]]></title>
            <link>https://nagvbt.github.io/blog/2020/12/25/create-react-app</link>
            <guid>https://nagvbt.github.io/blog/2020/12/25/create-react-app</guid>
            <pubDate>Fri, 25 Dec 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[Create React App is a easy and best environment for learning React, and is the easy way to start building a new single-page application in React.]]></description>
            <content:encoded><![CDATA[<p>Create React App is a easy and best environment for learning React, and is the easy way to start building a new single-page application in React.</p><p>Steps To create a React App</p><ol><li><p>Install Node &gt;= 8.10 and npm &gt;= 5.6 on your machine.</p></li><li><p>To Create a Project Run</p></li></ol><p><code>npx create-react-app my-app   cd my-app</code></p><ol start="3"><li>To start an App</li></ol><p><code>npm start</code></p>]]></content:encoded>
            <category>React Native</category>
        </item>
        <item>
            <title><![CDATA[What is an Abstract Class ?]]></title>
            <link>https://nagvbt.github.io/blog/2020/05/02/what-is-an-abstract-class</link>
            <guid>https://nagvbt.github.io/blog/2020/05/02/what-is-an-abstract-class</guid>
            <pubDate>Sat, 02 May 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[Abstract classes are used for providing an abstraction to the code to make it reusable and extendable.]]></description>
            <content:encoded><![CDATA[<p>Abstract classes are used for providing an abstraction to the code to make it reusable and extendable.</p><p><strong>Abstract class in C++:</strong> It is a class that has at least one pure virtual function (i.e., a function that has no definition). The classes inheriting the abstract class must provide a definition for the pure virtual function.</p><p><strong><em>Program</em></strong></p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"iostream"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">using</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">namespace</span><span class="token plain"> std</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">AbstractCls</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Sub</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Math</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token base-clause keyword" style="color:#00009f">public</span><span class="token base-clause"> </span><span class="token base-clause class-name">AbstractCls</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token operator" style="color:#393A34">+</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token string" style="color:#e3116c">"Math Class"</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token string" style="color:#e3116c">"\\n"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Math obj</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token string" style="color:#e3116c">"\\n"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sub</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token string" style="color:#e3116c">"\\n"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//OUTPUT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//Math Class</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Abstract class in C#:</strong> The abstract modifier is used before the class or method/indexers/events and properties to declare them as abstract.</p><p>Sample</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">using</span><span class="token plain"> System</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">namespace</span><span class="token plain"> Samples</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> abstract </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">AbstractCls</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> abstract </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Sub</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Math</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token base-clause class-name">AbstractCls</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">override</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Program</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">string\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WriteLine</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Math Class"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Math obj </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Math</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WriteLine</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WriteLine</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sub</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//OUTPUT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//Math Class</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>C</category>
        </item>
        <item>
            <title><![CDATA[Ionic 5 setup]]></title>
            <link>https://nagvbt.github.io/blog/2020/02/20/ionic-5-setup</link>
            <guid>https://nagvbt.github.io/blog/2020/02/20/ionic-5-setup</guid>
            <pubDate>Thu, 20 Feb 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[1\. Install Ionic - Open the command prompt and run npm install -g @ionic/cli]]></description>
            <content:encoded><![CDATA[<p>1<!-- -->.<!-- --> Install Ionic - Open the command prompt and run <em>npm install -g @ionic/cli</em></p><p>2<!-- -->.<!-- --> Update the angular cli <em>npm install -g @angular/cli@latest</em></p><p>3<!-- -->.<!-- --> Create an app ionic start nagTabs tabs syntax: <em>ionic start</em> app types are a. tabs: A tabs based layout b. sidemenu: A sidemenu based layout c. blank: An empty project with a single page</p><p>4<!-- -->.<!-- --> Create framework features syntax: <em>ionic generate <!-- -->[<!-- -->options<!-- -->]</em></p><p><em>type</em> of framework features:</p><p>page&nbsp;</p><p>componet</p><p>service</p><p>module</p><p>class</p><p>directive</p><p>gaurd</p><p><em>name</em>: The name/path of the feature being generated</p><p>5<!-- -->.<!-- --> Run the App on browser <em>cd myApp</em> <em>ionic serve</em></p><p><strong>Run the app on Android/iOS/Windows</strong></p><p>6<!-- -->.<!-- --> ionic cordova build Build (prepare + compile) an Ionic project for a given platform syntax: <em>ionic cordova build <!-- -->[<!-- -->options<!-- -->]</em> eg: <em>ionic cordova build android</em></p><p>7<!-- -->.<!-- --> ionic cordova run Run an Ionic project on a connected device syntax: <em>ionic cordova run <!-- -->[<!-- -->]<!-- --> <!-- -->[<!-- -->options<!-- -->]</em> eg: <em>ionic cordova run android</em></p>]]></content:encoded>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[Ionic5 Error:'You have to be inside an angular-cli project]]></title>
            <link>https://nagvbt.github.io/blog/2020/02/16/have-to-be-inside-an-angular-cli-project-in-order-to-use</link>
            <guid>https://nagvbt.github.io/blog/2020/02/16/have-to-be-inside-an-angular-cli-project-in-order-to-use</guid>
            <pubDate>Sun, 16 Feb 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[PS C:nagTabs> ng test]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ps-cnagtabs-ng-test">PS C:nagTabs&gt; ng test<a href="#ps-cnagtabs-ng-test" class="hash-link" aria-label="Direct link to PS C:nagTabs> ng test" title="Direct link to PS C:nagTabs> ng test">​</a></h2><p>As a forewarning, we are moving the CLI npm package to "@angular/cli" with the next release, which will only support Node 6.9 and greater. This package will be officially deprecated shortly after. To disable this warning use "ng set --global warnings.packageDeprecation=false". You have to be inside an angular-cli project in order to use the test command.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="answer"><strong>Answer:</strong><a href="#answer" class="hash-link" aria-label="Direct link to answer" title="Direct link to answer">​</a></h3><p><strong>Install the latest angular version using the following command</strong></p><p>npm install -g @angular/cli@latest</p>]]></content:encoded>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[When Breath Becomes Air]]></title>
            <link>https://nagvbt.github.io/blog/2018/12/06/when-breath-becomes-air</link>
            <guid>https://nagvbt.github.io/blog/2018/12/06/when-breath-becomes-air</guid>
            <pubDate>Thu, 06 Dec 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[Today I had completed a book When Breath Becomes Air by Paul Kalanithi a Neurosurgeon. Book covers What makes life worth living in the face of death? What do you do when life is catastrophically interrupted? What does it mean to have a child as your own life fades away?]]></description>
            <content:encoded><![CDATA[<p>Today I had completed a book <a href="https://amzn.to/3yt4tjr" target="_blank" rel="noopener noreferrer">When Breath Becomes Air</a> by Paul Kalanithi a Neurosurgeon. Book covers What makes life worth living in the face of death? What do you do when life is catastrophically interrupted? What does it mean to have a child as your own life fades away?</p><p><img loading="lazy" src="/assets/images/when-breath-becomes-air-a1cf1d313e8c8bdd7c45983fc05f4827.JPG" width="150" height="243" class="img_ev3q"></p><p>To Buy this book in Amazon: <a href="https://amzn.to/3yxxt9R" target="_blank" rel="noopener noreferrer">https://amzn.to/3yxxt9R</a></p>]]></content:encoded>
            <category>Books</category>
        </item>
        <item>
            <title><![CDATA[The Biology of Belief]]></title>
            <link>https://nagvbt.github.io/blog/2018/11/18/biology-of-belief</link>
            <guid>https://nagvbt.github.io/blog/2018/11/18/biology-of-belief</guid>
            <pubDate>Sun, 18 Nov 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[Today completed reading. The Biology of Belief: Unleashing the Power of Consciousness, Matter and Miracles by Bruce Lipton.]]></description>
            <content:encoded><![CDATA[<p>Today completed reading. <a href="https://amzn.to/2UoBvm0" target="_blank" rel="noopener noreferrer">The Biology of Belief: Unleashing the Power of Consciousness, Matter and Miracles by Bruce Lipton</a>.</p><p>This book is a groundbreaking work in the field of new biology, and it will forever change how we think about thinking. It covers.  </p><p>a. Interaction between your mind and body and the processes by which cells receive information.  </p><p>b. Genes and DNA do not control our biology  </p><p>c. EPigenetics</p><p><img loading="lazy" src="/assets/images/biology-of-belief-f645d2347582948354cb9dcf9807730e.jpg" width="165" height="245" class="img_ev3q"></p><p>To buy this book on Amazon: <a href="https://amzn.to/36nLuKV" target="_blank" rel="noopener noreferrer">https://amzn.to/36nLuKV</a></p>]]></content:encoded>
            <category>Books</category>
        </item>
        <item>
            <title><![CDATA[How to open urls using InAppBrowser plugin & window.open from ionic3+ apps]]></title>
            <link>https://nagvbt.github.io/blog/2018/07/15/how-to-open-urls-using-inappbrowser-plugin-window-open-from-ionic3-apps</link>
            <guid>https://nagvbt.github.io/blog/2018/07/15/how-to-open-urls-using-inappbrowser-plugin-window-open-from-ionic3-apps</guid>
            <pubDate>Sun, 15 Jul 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[How to open urls using InAppBrowser plugin & window.open from ionic3+ apps. We can InAppBrowser plugin & window.open for opening urls from ionic3+ app]]></description>
            <content:encoded><![CDATA[<p>How to open urls using InAppBrowser plugin &amp; window.open from ionic3+ apps. We can InAppBrowser plugin &amp; window.open for opening urls from ionic3+ app</p><p>Steps: 1. Install below plugins ionic cordova plugin
add cordova-plugin-inappbrowser </p><p><code>npm install --save @ionic-native/in-app-browser</code></p><p>2<!-- -->.<!-- --> Add InAppBrowser in the app.module.ts </p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">InAppBrowser</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@ionic-native/in-app-browser'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">LaunchUrlProvider</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../providers'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@</span><span class="token function maybe-class-name" style="color:#d73a49">NgModule</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> &nbsp; declarations</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> &nbsp; &nbsp; </span><span class="token comment" style="color:#999988;font-style:italic">// ... &nbsp; \], &nbsp;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">imports</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> &nbsp; &nbsp; </span><span class="token maybe-class-name">BrowserModule</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> &nbsp; &nbsp; </span><span class="token maybe-class-name">IonicModule</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">forRoot</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">MyApp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> &nbsp; &nbsp; </span><span class="token maybe-class-name">IonicStorageModule</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">forRoot</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> &nbsp; \</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> &nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">bootstrap</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token maybe-class-name">IonicApp</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> &nbsp; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">entryComponents</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> &nbsp; &nbsp; </span><span class="token comment" style="color:#999988;font-style:italic">// ... &nbsp; \], &nbsp;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token literal-property property" style="color:#36acaa">providers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> &nbsp; &nbsp; </span><span class="token comment" style="color:#999988;font-style:italic">// ... &nbsp; &nbsp; </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token maybe-class-name">InAppBrowser</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> &nbsp; &nbsp; </span><span class="token maybe-class-name">LaunchUrlProvider</span><span class="token plain"> &nbsp; \</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>3<!-- -->.<!-- --> Create a LaunchUrlProvider</p><p>4<!-- -->.<!-- --> Inject it in your Page/Componet and call the methods</p>]]></content:encoded>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[How to Create and Use a Local StorageProvider in Ionic3+ Apps]]></title>
            <link>https://nagvbt.github.io/blog/2018/06/22/how-to-create-and-use-a-local-storageprovider-in-ionic3-apps</link>
            <guid>https://nagvbt.github.io/blog/2018/06/22/how-to-create-and-use-a-local-storageprovider-in-ionic3-apps</guid>
            <pubDate>Fri, 22 Jun 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[Add a provider to the Ionic3 app refer and follow the below steps]]></description>
            <content:encoded><![CDATA[<p>Add a provider to the Ionic3 app refer and follow the below steps<br>
<a href="http://nagvbt.blogspot.com/2018/06/how-to-add-providers-in-ionic3.html" target="_blank" rel="noopener noreferrer">How to Add Providers in Ionic3+</a>   </p><p>Steps:  </p><p>1<!-- -->.<!-- --> Inject the Storage to the StorageProvider&nbsp; and that was created in the&nbsp;<a href="http://nagvbt.blogspot.com/2018/06/how-to-add-providers-in-ionic3.html" target="_blank" rel="noopener noreferrer">How to Add Providers in Ionic3+</a>   </p><p>2<!-- -->.<!-- --> Add IonicStorageModule to the imports list in your NgModule declaration in&nbsp; src/app/app.module.ts  </p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">IonicStorageModule</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@ionic/storage'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">StorageProvider</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../providers'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@</span><span class="token function maybe-class-name" style="color:#d73a49">NgModule</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">declarations</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// ...  </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">imports</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token maybe-class-name">BrowserModule</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token maybe-class-name">IonicModule</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">forRoot</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">MyApp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token maybe-class-name">IonicStorageModule</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">forRoot</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">bootstrap</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token maybe-class-name">IonicApp</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">entryComponents</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// ...  </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">providers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// ...  </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token maybe-class-name">StorageProvider</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>3<!-- -->.<!-- --> To use StorageProvider in your Page/Component inject it and use it </p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Component</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@angular/core'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">IonicPage</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ionic-angular'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">StorageProvider</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../../providers'</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">&nbsp; </span><span class="token maybe-class-name">Class</span><span class="token plain"> representing a </span><span class="token maybe-class-name">StorageProvider</span><span class="token plain"> </span><span class="token maybe-class-name">Demo</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">&nbsp; </span><span class="token maybe-class-name">Author</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token maybe-class-name">Nag</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@</span><span class="token function maybe-class-name" style="color:#d73a49">IonicPage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@</span><span class="token function maybe-class-name" style="color:#d73a49">Component</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">selector</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'page-storage'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">templateUrl</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'storage.html'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">StoragePage</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> editValue</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter keyword" style="color:#00009f">public</span><span class="token parameter"> </span><span class="token parameter literal-property property" style="color:#36acaa">storageProvider</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> </span><span class="token parameter maybe-class-name">StorageProvider</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">storageProvider</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setValue</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'EDIT\_KEY'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">editValue</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">storageProvider</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getValue</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'EDIT\_KEY'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'StorageTest \\nSaved value: '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>FILES<br>
<!-- -->Refer the code files in <a href="https://github.com/nagvbt/IonicTemplate/commit/15805bd428b81b3faf4b54a4d30d92c1f60eb270" target="_blank" rel="noopener noreferrer">Github</a></p>]]></content:encoded>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[Temporary Storage which persists only when the app is live for Ionic3+ Apps]]></title>
            <link>https://nagvbt.github.io/blog/2018/06/16/temporary-storage-which-persists-only-when-the-app-is-live-for-ionic3-apps</link>
            <guid>https://nagvbt.github.io/blog/2018/06/16/temporary-storage-which-persists-only-when-the-app-is-live-for-ionic3-apps</guid>
            <pubDate>Sat, 16 Jun 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[AppStateProvider - is developed for Temporary Storage which persists only when the app is live once the app is closed the AppState data will be destroyed. For small data to save permanently use StorageProvider which is a local Storage.]]></description>
            <content:encoded><![CDATA[<p>AppStateProvider - is developed for Temporary Storage which persists only when the app is live once the app is closed the AppState data will be destroyed. For small data to save permanently use StorageProvider which is a local Storage.<br>
<strong>app-state.ts</strong>   </p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Injectable</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@angular/core'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">AppStateDTO</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./app-state-DTO'</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token maybe-class-name">Class</span><span class="token plain"> representing a </span><span class="token maybe-class-name">AppState</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token maybe-class-name">AppStateProvider</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token plain"> state persists only when the app is live once the app is   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> closed the </span><span class="token maybe-class-name">AppState</span><span class="token plain"> data will be destroyed</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NOTE</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">For</span><span class="token plain"> small data to save permanently use </span><span class="token maybe-class-name">StorageProvider</span><span class="token plain"> which is a local </span><span class="token maybe-class-name">Storage</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token maybe-class-name">Author</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token maybe-class-name">Nag</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@</span><span class="token function maybe-class-name" style="color:#d73a49">Injectable</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">AppStateProvider</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> stateData </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">globalData</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">AppStateDTO</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token maybe-class-name">Save</span><span class="token plain"> the </span><span class="token maybe-class-name">AppState</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> @param </span><span class="token punctuation" style="color:#393A34">{</span><span class="token maybe-class-name">AppStateDTO</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> data save the </span><span class="token maybe-class-name">AppStateDTO</span><span class="token plain">   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setAppState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter literal-property property" style="color:#36acaa">data</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> </span><span class="token parameter maybe-class-name">AppStateDTO</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">globalData</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token maybe-class-name">Get</span><span class="token plain"> the saved </span><span class="token maybe-class-name">AppState</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> @</span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token maybe-class-name">AppStateDTO</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> the saved </span><span class="token maybe-class-name">AppStateDTO</span><span class="token plain"> data  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getAppState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">AppStateDTO</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">globalData</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token maybe-class-name">Get</span><span class="token plain"> the clone </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> the current stateData  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> @</span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">state</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> state a clone </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> the current state  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">get</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">state</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">stateData</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">clone</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">stateData</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">get</span><span class="token plain"> the value based on key  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> @param </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">any</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> key   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> @</span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">any</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> value </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> key  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> any</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> state </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> state</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">hasOwnProperty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> state\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">key\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> state</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token known-class-name class-name">Set</span><span class="token plain"> value don't allow mutation  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> @param </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">any</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> value state a clone </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> the current state  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">set</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">state</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'do not mutate the `stateData` directly'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token known-class-name class-name">Set</span><span class="token plain"> the key value pair  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> @param </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">string</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> key  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> @param </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">any</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> any value  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> @</span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">any</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> the state  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> any</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">stateData</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">key\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> value</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token maybe-class-name">Clone</span><span class="token plain"> the object  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> @param </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">object</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> clone the input object  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> @</span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">any</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> object   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">clone</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">object</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token known-class-name class-name">JSON</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">parse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">stringify</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>AppStateDTO - used to store the values that are required for the App  </p><p><strong>app-state-dto.ts</strong>  </p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token maybe-class-name">Class</span><span class="token plain"> representing a </span><span class="token maybe-class-name">AppStateDTO</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token maybe-class-name">Author</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token maybe-class-name">Nag</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">AppStateDTO</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token constant" style="color:#36acaa">APP_NAME</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token constant" style="color:#36acaa">APP_VERSION</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token constant" style="color:#36acaa">EMAIL</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token constant" style="color:#36acaa">APP_ID</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token constant" style="color:#36acaa">APP_DOWNLOAD_URL</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token constant" style="color:#36acaa">MORE_APPS_URL</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token constant" style="color:#36acaa">ADS_BANNER_ID</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token constant" style="color:#36acaa">ADS_INTERSTITIAL_ID</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token constant" style="color:#36acaa">ADS_VEDIOREWARDS_ID</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token constant" style="color:#36acaa">IS_MOBILE</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> boolean</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>FILES:</strong><br>
<!-- -->Refer the code files in <a href="https://github.com/nagvbt/IonicTemplate/commit/9ce7e8458cb06328eb4673e1d79f3d293d75c2ea" target="_blank" rel="noopener noreferrer">Github</a></p>]]></content:encoded>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[How to Add Providers in Ionic3+ apps]]></title>
            <link>https://nagvbt.github.io/blog/2018/06/02/how-to-add-providers-in-ionic3-apps</link>
            <guid>https://nagvbt.github.io/blog/2018/06/02/how-to-add-providers-in-ionic3-apps</guid>
            <pubDate>Sat, 02 Jun 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[Providers are special classes which decorated with @Injectable decorator. Providers are used to a specific work.  We can organize the code and code can be reused in multiple places e.g in pages, other providers too.]]></description>
            <content:encoded><![CDATA[<p>Providers are special classes which decorated with @Injectable decorator. Providers are used to a specific work.&nbsp; We can organize the code and code can be reused in multiple places e.g in pages, other providers too.  </p><p>We will added now simple Local StorageProvider by using the command<br>
<!-- -->ionic g provider Storage  </p><p>1<!-- -->.<!-- --> The command creates the StorageProvider in<br>
<!-- -->providers/storage/storage.ts  </p><p><strong>import { Injectable } from '@angular/core';</strong><br>
<strong>@Injectable()</strong><br>
<strong>export class StorageProvider {</strong><br>
<strong>constructor() {</strong><br>
<strong>}</strong><br>
<strong>}</strong>  </p><p>2<!-- -->.<!-- --> Adds the StorageProvider in the provider's array of app.module.ts  </p><p><strong>FILES</strong><br>
<!-- -->Refer the code files in <a href="https://github.com/nagvbt/IonicTemplate/commit/da1dba6fe3e42bcc383ea84d190a8dafebf1d108" target="_blank" rel="noopener noreferrer">Github</a></p>]]></content:encoded>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[How to Add Constants and use across Ionic3+ Apps]]></title>
            <link>https://nagvbt.github.io/blog/2018/05/13/how-to-add-constants-and-use-across-ionic3-apps</link>
            <guid>https://nagvbt.github.io/blog/2018/05/13/how-to-add-constants-and-use-across-ionic3-apps</guid>
            <pubDate>Sun, 13 May 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[Steps:]]></description>
            <content:encoded><![CDATA[<p>Steps:<br>
<!-- -->1<!-- -->.<!-- --> Created a folder constants and create a file app.configs.ts  </p><p>2<!-- -->.<!-- --> Add below code which needs to be used across app  </p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token maybe-class-name">AppConfigs</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token constant" style="color:#36acaa">APP_NAME</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"InoicTemplate"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token constant" style="color:#36acaa">APP_VERSION</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"&nbsp; 1.0.0"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token constant" style="color:#36acaa">EMAIL</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"nagvbt@gmail.com"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token constant" style="color:#36acaa">SQLITE_DB_NAME</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ionictemp"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>3<!-- -->.<!-- --> To use above AppConfigs values add the below code in the page  </p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports maybe-class-name">AppConfigs</span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../../constants'</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">AboutPage</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">appName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">versionNumber</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter keyword" style="color:#00009f">public</span><span class="token parameter"> </span><span class="token parameter literal-property property" style="color:#36acaa">navCtrl</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> </span><span class="token parameter maybe-class-name">NavController</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> </span><span class="token parameter keyword" style="color:#00009f">public</span><span class="token parameter"> </span><span class="token parameter literal-property property" style="color:#36acaa">navParams</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> </span><span class="token parameter maybe-class-name">NavParams</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">onInit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">onInit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">appName</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">AppConfigs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">APP_NAME</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">versionNumber</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">AppConfigs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">APP_VERSION</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>FILES:</strong><br>
<!-- -->Refer the code files in <a href="https://github.com/nagvbt/IonicTemplate/commit/6928fcdecbd1bf08cecb83daa91332e1237f005b" target="_blank" rel="noopener noreferrer">Github</a></p>]]></content:encoded>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[How to Add FontAwesome Icons in the SideMenu of ionic3+ Apps]]></title>
            <link>https://nagvbt.github.io/blog/2018/05/12/how-to-add-fontawesome-icons-in-the-sidemenu-of-ionic3-apps</link>
            <guid>https://nagvbt.github.io/blog/2018/05/12/how-to-add-fontawesome-icons-in-the-sidemenu-of-ionic3-apps</guid>
            <pubDate>Sat, 12 May 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[First go through the below articles]]></description>
            <content:encoded><![CDATA[<p>First go through the below articles<br>
<!-- -->1<!-- -->.<!-- --> <a href="http://nagvbt.blogspot.com/2018/02/how-to-create-basic-ionic3-mobile.html" target="_blank" rel="noopener noreferrer">How to create a basic ionic3 + mobile application</a>  </p><p><a href="http://nagvbt.blogspot.com/2018/04/how-to-add-fontawesome-to-ionic3-apps.html" target="_blank" rel="noopener noreferrer">2<!-- -->.<!-- --> How to add FontAwesome to ionic3+ apps</a></p><p>Steps:</p><p>1<!-- -->.<!-- --> In app.component.ts add icon property in the pages array and add the icon name&nbsp;</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyApp</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">pages</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token known-class-name class-name">Array</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">pages</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">title</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Home'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">component</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">HomePage</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">icon</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"home"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">title</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'List'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">component</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">ListPage</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">icon</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"list"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2<!-- -->.<!-- --> Add <em>tag in the app.html</em></p><p>_FILES  </p><p>Refer the code files in <a href="https://github.com/nagvbt/IonicTemplate/commit/c5db580b97e1385728490facbe46c7823d422dfa" target="_blank" rel="noopener noreferrer">Github</a></p><p>_</p>]]></content:encoded>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[How to add FontAwesome to ionic3+ apps]]></title>
            <link>https://nagvbt.github.io/blog/2018/04/29/how-to-add-fontawesome-to-ionic3-apps</link>
            <guid>https://nagvbt.github.io/blog/2018/04/29/how-to-add-fontawesome-to-ionic3-apps</guid>
            <pubDate>Sun, 29 Apr 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[1\. Install Font-Awesome]]></description>
            <content:encoded><![CDATA[<p>1<!-- -->.<!-- --> Install Font-Awesome<br>
<strong>npm install font-awesome --save</strong>  </p><p>2<!-- -->.<!-- --> Create a config folder at root and create a file custom.copy.config.js<br>
<strong>config/custom.copy.config.js</strong>  </p><p>add below code 3. Add config section at the end of package.json<br>
<strong>"config": {</strong><br>
<strong>"ionic<!-- -->_<!-- -->copy": "./config/custom.copy.config.js"</strong><br>
<strong>}</strong>  </p><p>4<!-- -->.<!-- --> Delete package-lock.json  </p><p>5<!-- -->.<!-- --> In index.html add the following line  </p><p><strong>FILES</strong><br>
<!-- -->Refer the code files in <a href="https://github.com/nagvbt/IonicTemplate/commit/6010ed693d790b1980ab57fbd011554e46cd787a" target="_blank" rel="noopener noreferrer">Github</a></p>]]></content:encoded>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[How to Display the Menu always for Tablets in Ionic3+]]></title>
            <link>https://nagvbt.github.io/blog/2018/03/18/how-to-display-the-menu-always-for-tablets-in-ionic3</link>
            <guid>https://nagvbt.github.io/blog/2018/03/18/how-to-display-the-menu-always-for-tablets-in-ionic3</guid>
            <pubDate>Sun, 18 Mar 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[We can use ion-split-pane for showing the UI elements like Menu always in large viewports like Tablets which is common in iPads.]]></description>
            <content:encoded><![CDATA[<p>We can use&nbsp;ion-split-pane for showing the UI elements like Menu always in large viewports like Tablets which is common in iPads.  </p><p>Steps:  </p><p>1<!-- -->.<!-- --> Create an ionic&nbsp;app using the below article<br>
<a href="http://nagvbt.blogspot.com/2018/02/how-to-create-basic-ionic3-mobile.html" target="_blank" rel="noopener noreferrer">How to create a basic ionic3 + mobile application</a>   </p><p>2<!-- -->.<!-- --> Wrap the ion-menu and ion-nav with&nbsp;&lt;ion-split-pane<!-- -->&gt;<!-- --> sample code below  </p><p><strong>app.html</strong></p><p><strong>FILES</strong><br>
<!-- -->Refer the code files in <a href="https://github.com/nagvbt/IonicTemplate/commit/9e28f7c912d2320689560760cfca7a84859958b5" target="_blank" rel="noopener noreferrer">Github</a></p>]]></content:encoded>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[How to create a basic ionic3 + mobile application]]></title>
            <link>https://nagvbt.github.io/blog/2018/02/03/how-to-create-a-basic-ionic3-mobile-application</link>
            <guid>https://nagvbt.github.io/blog/2018/02/03/how-to-create-a-basic-ionic3-mobile-application</guid>
            <pubDate>Sat, 03 Feb 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[To start a new app, open your terminal/command prompt and run the following command]]></description>
            <content:encoded><![CDATA[<p>To start a new app, open your terminal/command prompt and run the following command</p><p><strong>ionic start IonicMobileProject sidemenu</strong></p><p>To view the app in browser&nbsp; run the following commands</p><p><strong>cd IonicMobileProject/</strong></p><p><strong>ionic serve</strong><br>
<strong>FILES</strong><br>
<!-- -->Refer the code files&nbsp;in <a href="https://github.com/nagvbt/IonicTemplate/commit/577c6433435af108dc27dec1e8267075c04e9d3d" target="_blank" rel="noopener noreferrer">Github</a></p>]]></content:encoded>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[Web developer resources]]></title>
            <link>https://nagvbt.github.io/blog/2018/01/26/web-developer-resources</link>
            <guid>https://nagvbt.github.io/blog/2018/01/26/web-developer-resources</guid>
            <pubDate>Fri, 26 Jan 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[HTML/CSS/Javascript]]></description>
            <content:encoded><![CDATA[<p><strong>HTML/CSS/Javascript</strong><br>
<a href="https://developer.mozilla.org/en-US/docs/Web/CSS" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/en-US/docs/Web/CSS</a><br>
<a href="https://developer.mozilla.org/en-US/docs/Web/HTML" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/en-US/docs/Web/HTML</a><br>
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/en-US/docs/Web/JavaScript</a>  </p><p><strong>Verifying HTML and CSS</strong><br>
<!-- -->To verify HTML: <a href="http://validator.w3.org/#validate%5C_by%5C_input" target="_blank" rel="noopener noreferrer">http://validator.w3.org/#validate\_by\_input</a><br>
<!-- -->To verify CSS: <a href="http://jigsaw.w3.org/css-validator/#validate%5C_by%5C_input" target="_blank" rel="noopener noreferrer">http://jigsaw.w3.org/css-validator/#validate\_by\_input</a>  </p><p><strong>Flex</strong><br>
<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/flex" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/en-US/docs/Web/CSS/flex</a><br>
<a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank" rel="noopener noreferrer">https://css-tricks.com/snippets/css/a-guide-to-flexbox/</a>  </p><p><strong>CSS</strong><br>
<!-- -->1<!-- -->.<!-- --> Normalize.css<br>
<!-- -->A modern, HTML5-ready alternative to CSS resets<br>
<a href="https://necolas.github.io/normalize.css/" target="_blank" rel="noopener noreferrer">https://necolas.github.io/normalize.css/</a>  </p><p><strong>Place holder Images</strong><br>
<!-- -->Quick &amp; simple image placeholders.<br>
<a href="https://placeholder.com/" target="_blank" rel="noopener noreferrer">https://placeholder.com/</a><br>
<!-- -->Sample:<br>
<img loading="lazy" src="http://via.placeholder.com/350x150" class="img_ev3q">  </p><p><strong>Font</strong><br>
<a href="https://fonts.google.com/" target="_blank" rel="noopener noreferrer">https://fonts.google.com/</a>  </p><p><strong>Frameworks</strong><br>
<!-- -->Bootstrap: <a href="http://getbootstrap.com/" target="_blank" rel="noopener noreferrer">http://getbootstrap.com/</a><br>
<!-- -->Foundation: <a href="http://foundation.zurb.com/" target="_blank" rel="noopener noreferrer">http://foundation.zurb.com/</a><br>
<!-- -->Yaml: <a href="http://www.yaml.de/" target="_blank" rel="noopener noreferrer">http://www.yaml.de/</a><br>
<!-- -->960 Grid: <a href="http://960.gs/" target="_blank" rel="noopener noreferrer">http://960.gs/</a><br>
<!-- -->Susy: <a href="http://susy.oddbird.net/" target="_blank" rel="noopener noreferrer">http://susy.oddbird.net/</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Angular Vs React which one you use]]></title>
            <link>https://nagvbt.github.io/blog/2017/08/29/angular-vs-react-which-one-you-use</link>
            <guid>https://nagvbt.github.io/blog/2017/08/29/angular-vs-react-which-one-you-use</guid>
            <pubDate>Tue, 29 Aug 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[Technology evaluation is some times challenging when we have best technologies available. Let us see who wins Angular or React.]]></description>
            <content:encoded><![CDATA[<p>Technology evaluation is some times challenging when we have best technologies available. Let us see who wins Angular or React.<br>
<!-- -->Features  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="framework--ecosystem">Framework / Ecosystem:<a href="#framework--ecosystem" class="hash-link" aria-label="Direct link to Framework / Ecosystem:" title="Direct link to Framework / Ecosystem:">​</a></h3><p><strong>Angular 4</strong></p><p>Angular 4 is an MVC Framework itself.</p><p><strong>React</strong></p><p>React is only a view library one needs to choose the different libraries to make the Best Ecosystem. Refer my post for choosing the better parts to build a React Echosystem</p><p><em><strong>Summary:</strong> It takes time to build Ecosystem in React. Once built developers need not worry about the Ecosystem.</em>  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="technical-skills">Technical Skills:<a href="#technical-skills" class="hash-link" aria-label="Direct link to Technical Skills:" title="Direct link to Technical Skills:">​</a></h3><p><strong>Angular 4</strong></p><p>Angular 4 requires Typescript which is similar to C# / Java</p><p>Need to know about the angular directives/concepts</p><p><strong>React</strong></p><p>React requires JSX syntax which is similar to HTML and ES6 Javascript</p><p>React requires less time to master once the ecosystem build</p><p><em><strong>Summary</strong>: It depends on your current development team skills if they are familiar with Javascript go for React if the team is familiar with C#/Java go for Angular</em>  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="tooling">Tooling:<a href="#tooling" class="hash-link" aria-label="Direct link to Tooling:" title="Direct link to Tooling:">​</a></h3><p>Both Angular 4 and React have great CLIs which work with webpack.  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pwa">PWA:<a href="#pwa" class="hash-link" aria-label="Direct link to PWA:" title="Direct link to PWA:">​</a></h3><p><strong>Angular 4</strong></p><p>Ionic 3 is a great framework to develop PWA which comes out of the box UI components.&nbsp;</p><p><strong>React</strong></p><p>We don't have frameworks readily available.</p><p><em><strong>Summary</strong>: Ionic 3 is best for PWA development</em></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="story-book">Story Book:<a href="#story-book" class="hash-link" aria-label="Direct link to Story Book:" title="Direct link to Story Book:">​</a></h3><p><strong>Angular 4</strong></p><p>Currently there is no such kind of&nbsp; Tool</p><p><strong>React</strong></p><p><a href="https://github.com/storybooks/storybook" target="_blank" rel="noopener noreferrer">Storybook</a> is a React development environment where we can develop UI components independently from the main application. One can browse a UI component library, view the different states of each component and interactively develop and verify components.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion:<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion:" title="Direct link to Conclusion:">​</a></h3><p>Best way to conclude between Angular 4 and React is to develop an PoCs with the cross cutting key features of the project like Translation, Theming, Accessibility, Form factors. I am slightly biased on the Angular 4 first latter having hands on React it own my heart. But if you have a team already working with AngularJS and has experience with Java/C#/C++ sticking with Angular 4 makes more weightage.</p>]]></content:encoded>
            <category>angular</category>
            <category>react</category>
        </item>
        <item>
            <title><![CDATA[Visual Studio Code Theme customization]]></title>
            <link>https://nagvbt.github.io/blog/2017/08/27/visual-studio-code-theme-customization</link>
            <guid>https://nagvbt.github.io/blog/2017/08/27/visual-studio-code-theme-customization</guid>
            <pubDate>Sun, 27 Aug 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[My favorite source code editor is Visual Studio Code. Every day I use it for my web application, PWA ( progressive web application) and Ionic Mobile apps development. It is a light weight open source code editor developed by Tech giant Microsoft.]]></description>
            <content:encoded><![CDATA[<p>My favorite source code editor is Visual Studio Code. Every day I use it for my web application, PWA ( progressive web application) and Ionic Mobile apps development. It is a light weight open source code editor developed by Tech giant Microsoft.</p><p><a href="http://nagvbt.com/wp-content/uploads/2017/08/61424-vscode.jpg" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="/assets/images/aca14-vscode-327012e68260b2473dd2203dcab18237.jpg" width="400" height="245" class="img_ev3q"></a></p><p>We can customize the look and feel of the editor according to our taste and comfort. In this small blog post I will show how modify the workbench.</p><p>1<!-- -->.<!-- --> Open Visual Studio Code&nbsp; 2<!-- -->.<!-- --> Select File-&gt;Prefernces-&gt;Settings and add the below json</p>]]></content:encoded>
            <category>Tools</category>
        </item>
        <item>
            <title><![CDATA[React Eco System / Framework]]></title>
            <link>https://nagvbt.github.io/blog/2017/08/26/react-eco-system-framework</link>
            <guid>https://nagvbt.github.io/blog/2017/08/26/react-eco-system-framework</guid>
            <pubDate>Sat, 26 Aug 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[To build a production quality web application using React following are the parts (libs/ components/) which constitutes one of the best React Eco system or frame work are listed below.]]></description>
            <content:encoded><![CDATA[<p>To build a production quality web application using React following are the parts (libs/ components/) which constitutes one of the best React Eco system or frame work are listed below.  </p><p><strong>REACT</strong><br>
<!-- -->Docs: <a href="https://facebook.github.io/react/docs/" target="_blank" rel="noopener noreferrer">https://facebook.github.io/react/docs/</a><br>
<!-- -->Github: <a href="https://github.com/facebook/react" target="_blank" rel="noopener noreferrer">https://github.com/facebook/react</a>  </p><p><strong>REACT-ROUTER</strong><br>
<!-- -->Github: <a href="https://github.com/reacttraining/react-router" target="_blank" rel="noopener noreferrer">https://github.com/reacttraining/react-router</a><br>
<!-- -->Docs: <a href="https://reacttraining.com/react-router/web/example/sidebar" target="_blank" rel="noopener noreferrer">https://reacttraining.com/react-router/web/example/sidebar</a>  </p><p><strong>REDUX</strong><br>
<!-- -->State container for JavaScript apps<br>
<!-- -->Docs: <a href="http://redux.js.org/" target="_blank" rel="noopener noreferrer">http://redux.js.org/</a><br>
<!-- -->Github: <a href="https://github.com/reactjs/redux/" target="_blank" rel="noopener noreferrer">https://github.com/reactjs/redux/</a>  </p><p><strong>REDUX-SAGA</strong><br>
<!-- -->• Make side effects i.e. asynchronous things like data fetching<br>
<!-- -->• Makes impure things like accessing the browser cache<br>
<!-- -->Docs: <a href="https://redux-saga.js.org/" target="_blank" rel="noopener noreferrer">https://redux-saga.js.org/</a><br>
<!-- -->Github: <a href="https://github.com/redux-saga/redux-saga" target="_blank" rel="noopener noreferrer">https://github.com/redux-saga/redux-saga</a>  </p><p><strong>AXIOS</strong><br>
<!-- -->Promise based HTTP client for the browser and node.js<br>
<a href="https://github.com/mzabriskie/axios" target="_blank" rel="noopener noreferrer">https://github.com/mzabriskie/axios</a>  </p><p><strong>REACT-BOOTSTRAP</strong><br>
<!-- -->Docs: <a href="https://react-bootstrap.github.io/components.html" target="_blank" rel="noopener noreferrer">https://react-bootstrap.github.io/components.html</a><br>
<!-- -->Github: <a href="https://github.com/react-bootstrap/react-bootstrap" target="_blank" rel="noopener noreferrer">https://github.com/react-bootstrap/react-bootstrap</a>  </p><p><strong>classNames</strong><br>
<!-- -->A simple javascript utility for conditionally joining classNames together<br>
<a href="https://github.com/JedWatson/classnames" target="_blank" rel="noopener noreferrer">https://github.com/JedWatson/classnames</a></p>]]></content:encoded>
            <category>react</category>
        </item>
        <item>
            <title><![CDATA[Design Patterns and there advantages]]></title>
            <link>https://nagvbt.github.io/blog/2017/08/25/design-patterns-and-there-advantages</link>
            <guid>https://nagvbt.github.io/blog/2017/08/25/design-patterns-and-there-advantages</guid>
            <pubDate>Fri, 25 Aug 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[What are Design Patterns:]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-are-design-patterns">What are Design Patterns:<a href="#what-are-design-patterns" class="hash-link" aria-label="Direct link to What are Design Patterns:" title="Direct link to What are Design Patterns:">​</a></h2><p>Design patterns are solutions/patterns to problems which occurs in many situations.  </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="advantages-of-design-patterns">Advantages of Design Patterns:<a href="#advantages-of-design-patterns" class="hash-link" aria-label="Direct link to Advantages of Design Patterns:" title="Direct link to Advantages of Design Patterns:">​</a></h2><ol><li>Developers can select a tried and well tested solutions</li><li>Makes development and maintenance of code easy and fast</li><li>Design patterns are language independent hence we use them in any language which supports object oriented</li><li>Highly flexible and can be used in any application/domain</li><li>Using design patterns we can create reusable object oriented designs</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="types-of-design-patterns">Types of Design Patterns<a href="#types-of-design-patterns" class="hash-link" aria-label="Direct link to Types of Design Patterns" title="Direct link to Types of Design Patterns">​</a></h2><p>Design Patterns are broadly classified into three &nbsp;Types based on their purpose.  </p><ol><li>Creational design patterns</li><li>Structural design patterns</li><li>Behavioral design patterns&nbsp;</li></ol><p>These three patterns are further divided into 23 design patters refer to below illustration.  </p><p><a href="http://nagvbt.com/wp-content/uploads/2017/08/181c8-designpatterns1.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="/assets/images/e9d95-designpatterns1-68e48c81b8b2dd4366f625dacc446202.png" width="640" height="271" class="img_ev3q"></a></p>]]></content:encoded>
            <category>Design Patterns</category>
        </item>
        <item>
            <title><![CDATA[The more you know]]></title>
            <link>https://nagvbt.github.io/blog/2017/08/25/the-more-you-know</link>
            <guid>https://nagvbt.github.io/blog/2017/08/25/the-more-you-know</guid>
            <pubDate>Fri, 25 Aug 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[As the Software Industry changes rapidly one needs to update their skills. Whoever involves in the software development needs to write down there skills and analyze are the skills up to date. There are many ways to add or update your skills.]]></description>
            <content:encoded><![CDATA[<p>As the Software Industry changes rapidly one needs to update their skills. Whoever involves in the software development needs to write down there skills and analyze are the skills up to date. There are many ways to add or update your skills.</p><p><strong>Operating Systems:</strong></p><p>If you work on the Windows OS at work try to use Linux/Ubuntu or Mac at home or vise-versa</p><p><strong>Programming Languages:</strong></p><p>There are tons of freely available resources on internet to master any programming language try to learn new language. Explore where you can apply the new language. There will be always room to improve the existing project in order to remove the road block for that you may try new language as different language solves the problem in different approach. For example if you are a C++ developer its easy to master C# or Java</p><p><strong>Front-end/UI Technologies:</strong></p><p>Currently there are many popular UI technologies like React, Angular etc. if you know one experiment on another to know best of both worlds</p><p><strong>Attend Conferences:</strong></p><p>Hundred’s of web/in-person conferences are conducted by technology companies. Spend your spare time to attend them, definitely you will get exposure on what’s latest and it's a great opportunity to meet awesome technology pundits.</p><p><strong>Read a Book:</strong></p><p>Some people says reading &nbsp;books is a boring job. During our education we may read many books thinks that it's another additional book to read, who knows that may change you world :)</p><p>Keep a target to complete one book ( Technical/Self Help ) in a month.</p><p><strong>Experiment, Experiment:</strong></p><p>We might work on many tools and technologies every day - until you develop anything from scratch you may not understand nuts and bolts work together. So develop a habit of &nbsp;experimenting with sample applications from scratch.</p><p><strong>Current:</strong></p><p>Keep an eye on latest trending technologies like AI, ML, BOATS etc. &nbsp;</p><p>Finally the more you know the valuable you would be at work or in society.</p>]]></content:encoded>
            <category>Technology</category>
        </item>
        <item>
            <title><![CDATA[Progressive Web App (PWA) next generation Mobile Apps]]></title>
            <link>https://nagvbt.github.io/blog/2017/08/20/progressive-web-app-pwa-next-generation-mobile-apps</link>
            <guid>https://nagvbt.github.io/blog/2017/08/20/progressive-web-app-pwa-next-generation-mobile-apps</guid>
            <pubDate>Sun, 20 Aug 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[A Progressive Web App (PWA) is an web application which gives an App like experience on mobile devices. PWA are developed with web technologies. These apps need not be installed and can be just access on the mobile browser by adding a short cut to the Home screen using ‘Add to Home Screen’ browser option. PWA fills the gap between mobile websites and mobile apps.]]></description>
            <content:encoded><![CDATA[<p>A Progressive Web App (PWA) is an web application which gives an App like experience on mobile devices. PWA are developed with web technologies. These apps need not be installed and can be just access on the mobile browser by adding a short cut to the Home screen using ‘Add to Home Screen’ browser option. PWA fills the gap between mobile websites and mobile apps.  </p><p>Currently PWA are developed by many Software companies you can find the references from PWA Rocks <a href="https://pwa.rocks/" target="_blank" rel="noopener noreferrer">website</a>  </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="advantages-of-pwa">Advantages of PWA<a href="#advantages-of-pwa" class="hash-link" aria-label="Direct link to Advantages of PWA" title="Direct link to Advantages of PWA">​</a></h2><ul><li>Native UX (Android/iOS/Windows) on the web which will be a natural app with great immersive user experience.</li><li>Feels like an app, works like a website</li><li>Responsive:Respond quickly to user interactions with smooth scrolling and nice animations.&nbsp;</li><li>Improved performance, offline data &nbsp;support using service workers</li><li>Capable of Push Notifications</li><li>Share the app via URL, does not require installation.</li><li>Quicker load times: Loads instantly and never offline indicators like dinosaur.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="technologies-to-develop-pwa">Technologies to develop PWA<a href="#technologies-to-develop-pwa" class="hash-link" aria-label="Direct link to Technologies to develop PWA" title="Direct link to Technologies to develop PWA">​</a></h2><p>There are different tools and technologies are existing in the market to develop PWA some of them are listed below. This article will use the Ionic 3 to develop the PWA.</p><ol><li>Ionic Framework&nbsp;</li><li>Using a Polymer template</li><li>React</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="develop-pwa-using-ionic-framework-step-by-step">Develop PWA using Ionic Framework step by step<a href="#develop-pwa-using-ionic-framework-step-by-step" class="hash-link" aria-label="Direct link to Develop PWA using Ionic Framework step by step" title="Direct link to Develop PWA using Ionic Framework step by step">​</a></h2><p>Ionic 3 uses Angular 4 and Typescript . Below are the steps to develop the PWA.</p><p>1<!-- -->.<!-- --> Open command prompt/terminal and create a ionic app<br>
<!-- -->ionic start MyIonic3PWA sidemenu  </p><p>2<!-- -->.<!-- --> Change the directory to MyIonic3PWA and add the browser as a platform</p><p> ionic platform add browser  </p><p>3<!-- -->.<!-- --> To Launch the project<br>
<!-- -->ionic run browser  </p><p>4<!-- -->.<!-- --> To add the Logo create a folder and copy the launch logo.png in the folder MyIonic3PWA<!-- -->\<!-- -->src<!-- -->\<!-- -->assets<!-- -->\<!-- -->imgs<!-- -->\<!-- --> It works for android  </p><p>For iOS add the below code in index.html  </p><p>5<!-- -->.<!-- --> To add the app name open src/manifest.json and add app name  </p><p>"name": "MyIonic3PWA",<br>
<!-- -->"short<!-- -->_<!-- -->name": "MyIonic3PWA",  </p><p>and change the index.html  </p><p>MyIonic3PWA  </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="code-sample"><strong>Code Sample</strong><a href="#code-sample" class="hash-link" aria-label="Direct link to code-sample" title="Direct link to code-sample">​</a></h2><p>Sample code given below can be used for creating manifest and index files</p><p><strong>manifest.json</strong>  </p><p><strong>index.html</strong>  </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="refrences"><strong>Refrences</strong><a href="#refrences" class="hash-link" aria-label="Direct link to refrences" title="Direct link to refrences">​</a></h2><p>1<!-- -->.<!-- --> <a href="https://developers.google.com/web/fundamentals/getting-started/codelabs/your-first-pwapp/" target="_blank" rel="noopener noreferrer">Your First Progressive Web App</a></p><p>2<!-- -->.<!-- --> <a href="http://ionicframework.com/" target="_blank" rel="noopener noreferrer">Ionic Framwork</a></p>]]></content:encoded>
            <category>Technology</category>
        </item>
        <item>
            <title><![CDATA[Microsoft Bot in steps]]></title>
            <link>https://nagvbt.github.io/blog/2017/08/11/microsoft-bot-in-steps</link>
            <guid>https://nagvbt.github.io/blog/2017/08/11/microsoft-bot-in-steps</guid>
            <pubDate>Fri, 11 Aug 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[First thing first]]></description>
            <content:encoded><![CDATA[<h4 class="anchor anchorWithStickyNavbar_LWe7" id="first-thing-first">First thing first<a href="#first-thing-first" class="hash-link" aria-label="Direct link to First thing first" title="Direct link to First thing first">​</a></h4><p><strong>Steps</strong><br>
<!-- -->1<!-- -->.<!-- --> Install Visual Studio 2015 Update 2 or higher.  </p><p>2<!-- -->.<!-- --> Download the project template zip from <a href="http://aka.ms/bf-bc-vstemplate" target="_blank" rel="noopener noreferrer">here</a><br>
<!-- -->Save the file to %USERPROFILE%<!-- -->\<!-- -->Documents<!-- -->\<!-- -->Visual Studio 2015<!-- -->\<!-- -->Templates<!-- -->\<!-- -->ProjectTemplates<!-- -->\<!-- -->Visual C#.  </p><p>3<!-- -->.<!-- --> Install the BotFrameworks which gives the Bot Emulator<br>
<a href="https://emulator.botframework.com/" target="_blank" rel="noopener noreferrer">here</a>  </p><p>4<!-- -->.<!-- --> Build the project and launch on the browser  </p><p>5<!-- -->.<!-- --> Open emulator and add the your url http://localhost:3978/api/messages<br>
<!-- -->port number 3978 may vary based on the the endpoint launch and leave the MicrosoftAppId field and MicrosoftAppPassword field empty  </p><p>6<!-- -->.<!-- --> To check the bot is working<br>
<!-- -->In emulator bottom Text Box enter a message say hello, this message will be echoed back to you, like below<br>
<!-- -->You sent hello which was 5 characters  </p><p><strong>Reference:</strong><br>
<!-- -->Microsoft <a href="https://docs.botframework.com/en-us/csharp/builder/sdkreference/gettingstarted.html" target="_blank" rel="noopener noreferrer">documentation</a></p>]]></content:encoded>
            <category>Technology</category>
        </item>
        <item>
            <title><![CDATA[Ionic blogs]]></title>
            <link>https://nagvbt.github.io/blog/2017/06/07/ionic-blogs</link>
            <guid>https://nagvbt.github.io/blog/2017/06/07/ionic-blogs</guid>
            <pubDate>Wed, 07 Jun 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[http://gonehybrid.com/]]></description>
            <content:encoded><![CDATA[<p><a href="http://gonehybrid.com/" target="_blank" rel="noopener noreferrer">http://gonehybrid.com/</a></p><p><a href="https://nagvbt.blogspot.in/" target="_blank" rel="noopener noreferrer">https://nagvbt.blogspot.in/</a>  </p><p><a href="http://mcgivery.com/" target="_blank" rel="noopener noreferrer">http://mcgivery.com/</a></p><p><a href="http://www.joshmorony.com/" target="_blank" rel="noopener noreferrer">http://www.joshmorony.com/</a></p><p><a href="https://www.thepolyglotdeveloper.com/" target="_blank" rel="noopener noreferrer">https://www.thepolyglotdeveloper.com/</a></p><p><a href="http://www.gajotres.net/" target="_blank" rel="noopener noreferrer">http://www.gajotres.net/</a></p><p><a href="https://www.raymondcamden.com/tags/ionic/" target="_blank" rel="noopener noreferrer">https://www.raymondcamden.com/tags/ionic/</a></p><p><a href="http://mcgivery.com/100-ionic-framework-resources/" target="_blank" rel="noopener noreferrer">http://mcgivery.com/100-ionic-framework-resources/</a></p><p><a href="https://github.com/juarezpaf/ionic-adventures" target="_blank" rel="noopener noreferrer">https://github.com/juarezpaf/ionic-adventures</a></p><p>Templates:</p><p><a href="https://github.com/jdnichollsc/Ionic-Starter-Template" target="_blank" rel="noopener noreferrer">https://github.com/jdnichollsc/Ionic-Starter-Template</a></p>]]></content:encoded>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[Example: $on and $broadcast in angular]]></title>
            <link>https://nagvbt.github.io/blog/2017/01/10/example-on-and-broadcast-in-angular</link>
            <guid>https://nagvbt.github.io/blog/2017/01/10/example-on-and-broadcast-in-angular</guid>
            <pubDate>Tue, 10 Jan 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[With out Arguments:]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="with-out-arguments">With out Arguments:<a href="#with-out-arguments" class="hash-link" aria-label="Direct link to With out Arguments:" title="Direct link to With out Arguments:">​</a></h2><p>To $broadcast use the $rootScope:</p><p>$scope.startCamera = function() { &nbsp; &nbsp; $rootScope.$broadcast('camera-started'); }</p><p>To receive, use the $scope of your controller:</p><p>$scope.$on('camera-started', function(event, args) { &nbsp; &nbsp; // do something });</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="with-arguments">With Arguments:<a href="#with-arguments" class="hash-link" aria-label="Direct link to With Arguments:" title="Direct link to With Arguments:">​</a></h2><p>To pass arguments when you $With out Arguments:</p><p>$rootScope.$broadcast('camera-started', { any: {} }); To receive arguments :</p><p>$scope.$on('camera-started', function(event, args) { &nbsp; &nbsp; var anyArg = args.any; &nbsp; &nbsp; // do something });</p>]]></content:encoded>
            <category>Angular</category>
        </item>
        <item>
            <title><![CDATA[Basic Ionic1 CLI commands]]></title>
            <link>https://nagvbt.github.io/blog/2016/12/08/basic-ionic1-cli-commands</link>
            <guid>https://nagvbt.github.io/blog/2016/12/08/basic-ionic1-cli-commands</guid>
            <pubDate>Thu, 08 Dec 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[1\. To start a new application]]></description>
            <content:encoded><![CDATA[<p>1<!-- -->.<!-- --> To start a new application<br>
<strong><em>ionic start NagIonic sidemenu</em></strong></p><p>2<!-- -->.<!-- --> Navigate to the project folder NagIonic</p><p>3<!-- -->.<!-- --> To Launch an app in browser<br>
<strong><em>Ionic serve –lab</em></strong></p><p>4<!-- -->.<!-- --> Add platforms<br>
<em>ionic platform add ios</em><br>
<em>ionic platform add android</em><br>
<em>ionic platform add windows</em></p><p>5<!-- -->.<!-- --> Add icon and splash<br>
<!-- -->Place&nbsp;icon.png&nbsp;(192X192 px),&nbsp;splash.png(<br>
<!-- -->2208×2208 px) in resources folder<br>
<em>ionic resources</em></p><p>6<!-- -->.<!-- --> To run app on device<br>
<em>ionic run android</em></p>]]></content:encoded>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[Ionic – AngularJS templates]]></title>
            <link>https://nagvbt.github.io/blog/2016/07/07/ionic-angularjs-templates</link>
            <guid>https://nagvbt.github.io/blog/2016/07/07/ionic-angularjs-templates</guid>
            <pubDate>Thu, 07 Jul 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[The following code snippets demonstrates the format/template which can be used in Ionic or in Angularjs Applications]]></description>
            <content:encoded><![CDATA[<h2></h2><p>The following code snippets demonstrates the format/template which can be used in Ionic or in Angularjs Applications</p>]]></content:encoded>
            <category>angular</category>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[Ionic 2 Tutorial]]></title>
            <link>https://nagvbt.github.io/blog/2015/10/15/ionic-2-tutorial</link>
            <guid>https://nagvbt.github.io/blog/2015/10/15/ionic-2-tutorial</guid>
            <pubDate>Thu, 15 Oct 2015 00:00:00 GMT</pubDate>
            <description><![CDATA[Introduction]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2><p><a href="http://ionicframework.com/docs/v2/" target="_blank" rel="noopener noreferrer">Ionic 2</a> is an open source cross platform application development <a href="http://ionicframework.com/" target="_blank" rel="noopener noreferrer">framework</a>. For the below questions your answer is YES and you can use the Ionic 2 for your app development.  </p><ol><li>I want to develop Apps for Android, iOS, Windows but don't know there respective technologies like Java for Android apps, objective-C/Swift for iOS apps, C# for windows apps ?</li><li>Do you know only web front-end technologies like HTML/CSS/Javascript &nbsp;and &nbsp;likes to develop mobile/tablet app?</li><li>We want to develop the app with less effort and faster ?</li></ol><p>Ionic 2 apps can be developed with Angular 2 and preferably with &nbsp;typescript.  </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="development-environment-setup">&nbsp;Development environment setup<a href="#development-environment-setup" class="hash-link" aria-label="Direct link to &nbsp;Development environment setup" title="Direct link to &nbsp;Development environment setup">​</a></h2><p>To install the development environment perform the below steps  </p><ol><li><ol><li><ol><li>Install Node.js 6 or greater &nbsp;<a href="https://nodejs.org/en/" target="_blank" rel="noopener noreferrer">Download the installer</a></li><li>Open cmd and use the following commands to&nbsp;install the Ionic CLI and Cordova<br><strong><em>npm install -g ionic</em></strong><br><strong><em>npm install -g cordova</em></strong></li></ol></li></ol></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="create-a-sample-first-app">Create a sample first app<a href="#create-a-sample-first-app" class="hash-link" aria-label="Direct link to Create a sample first app" title="Direct link to Create a sample first app">​</a></h2><p>To create first sample app, Open the cmd window and use the below command<br>
<em><strong>ionic start sampleApp --v2</strong></em></p><p>1<!-- -->.<!-- --> To run your app, <code>cd</code> into the <em><strong>sampleApp</strong></em> directory</p><p>2<!-- -->.<!-- --> To run on browser &nbsp;<strong><code>ionic serve</code></strong></p><p>3<!-- -->.<!-- --> To run on ios&nbsp;<strong><code>ionic run ios</code></strong></p><p>4<!-- -->.<!-- --> To run on Android&nbsp;<strong><code>ionic run&nbsp;android</code></strong></p><p>The sample app on Android mobile looks like below</p><p>5<!-- -->.<!-- --> To know the environment details use <strong><code>ionic&nbsp;info</code></strong>  </p><p>Your system information:  </p><p>Cordova CLI: 6.1.1<br>
<!-- -->Gulp version: CLI version 3.9.1<br>
<!-- -->Gulp local: Local version 3.9.1<br>
<!-- -->Ionic Framework Version: 2.0.0-rc.1<br>
<!-- -->Ionic CLI Version: 2.1.0<br>
<!-- -->Ionic App Lib Version: 2.1.0-beta.1<br>
<!-- -->OS: Windows 8.1<br>
<!-- -->Node Version: v6.2.1</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="generate-new-page-and-service">Generate new Page and Service<a href="#generate-new-page-and-service" class="hash-link" aria-label="Direct link to Generate new Page and Service" title="Direct link to Generate new Page and Service">​</a></h2><ol><li>To create a <strong>page</strong> in the sampleApp &nbsp;use</li></ol><p>#<!-- --> ionic g page <!-- -->[pageName]</p><p><strong>ionic g&nbsp;page demoPage</strong></p><p>CLI creates the following three files under 'sampleApp/src/pages/demo-page'</p><ul><li>demo-page.html -&gt; the view code</li><li>demo-page.ts -&gt; component/class code similar to controller</li><li>demo-page.scss -&gt; your style/sass&nbsp;code</li></ul><p>2<!-- -->.<!-- --> To create a <strong>service</strong>, replace <code>page</code> with <code>provider</code>:  </p><p>#<!-- --> ionic g provider <!-- -->[providerName]</p><p><strong>ionic g provider demoData</strong></p><p>CLI creates the demo-data.ts under 'sampleApp/src/providers/' folder this file serves likes&nbsp;service/factory.<br>
<!-- -->3<!-- -->.<!-- --> Add DemoPage module in 'sampleApp<!-- -->\<!-- -->src<!-- -->\<!-- -->app<!-- -->\<!-- -->app.module.ts'  </p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">NgModule</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@angular/core'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">IonicApp</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">IonicModule</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ionic-angular'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">MyApp</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./app.component'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">AboutPage</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../pages/about/about'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">ContactPage</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../pages/contact/contact'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">HomePage</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../pages/home/home'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">TabsPage</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../pages/tabs/tabs'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">DemoPage</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../pages/demo-page/demo-page'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//import DemoPage   </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@</span><span class="token function maybe-class-name" style="color:#d73a49">NgModule</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">declarations</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token maybe-class-name">MyApp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token maybe-class-name">AboutPage</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token maybe-class-name">ContactPage</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token maybe-class-name">HomePage</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token maybe-class-name">TabsPage</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token maybe-class-name">DemoPage</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//Add DemoPage  </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">imports</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token maybe-class-name">IonicModule</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">forRoot</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">MyApp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">bootstrap</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token maybe-class-name">IonicApp</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">entryComponents</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token maybe-class-name">MyApp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token maybe-class-name">AboutPage</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token maybe-class-name">ContactPage</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token maybe-class-name">HomePage</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token maybe-class-name">TabsPage</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token maybe-class-name">DemoPage</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//Add DemoPage  </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">providers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">AppModule</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="navigate-to-demopage">Navigate to DemoPage<a href="#navigate-to-demopage" class="hash-link" aria-label="Direct link to Navigate to DemoPage" title="Direct link to Navigate to DemoPage">​</a></h2><ol><li><p>Add button on Home.html</p><p>Show DemoPage</p></li><li><p>Add the code to navigate in the HomePage class</p><p> goToDemoPage(){<br>
<!-- -->this.navCtrl.push(DemoPage);<br>
<!-- -->}</p></li><li><p>Launch the app and click on the 'SHOW DEMOPAGE' Button you will be navigated to the DemoPage</p></li></ol><p>Bingo !!! you created a new page and plugged in app and implemented the navigation.</p>]]></content:encoded>
            <category>Ionic</category>
        </item>
        <item>
            <title><![CDATA[AMAZING SCIENTIFIC REASONS BEHIND Indian TRADITIONS]]></title>
            <link>https://nagvbt.github.io/blog/2015/06/20/amazing-scientific-reasons-behind-indian-traditions</link>
            <guid>https://nagvbt.github.io/blog/2015/06/20/amazing-scientific-reasons-behind-indian-traditions</guid>
            <pubDate>Sat, 20 Jun 2015 00:00:00 GMT</pubDate>
            <description><![CDATA[1. Throwing Coins into a River:]]></description>
            <content:encoded><![CDATA[<ol><li>Throwing Coins into a River:</li></ol><p>The general reasoning given for this act is that it brings Good Luck. However, scientifically speaking, in the ancient times, most of the currency used was made of copper unlike the stainless steel coins of today. Copper is a vital metal very useful to the human body. Throwing coins in the river was one way our fore-fathers ensured we intake sufficient copper as part of the water as rivers were the only source of drinking water. Making it a custom ensured that all of us follow the practice.</p><ol start="2"><li>Joining Both Palms together to Greet:</li></ol><p>In Hindu culture, people greet each other by joining their palms – termed as “Namaskar.” The general reason behind this tradition is that greeting by joining both the palms means respect. However, scientifically speaking, joining both hands ensures joining the tips of all the fingers together; which are denoted to the pressure points of eyes, ears, and mind. Pressing them together is said to activate the pressure points which helps us remember that person for a long time. And, no germs since we don’t make any physical contact!</p><ol start="3"><li>Why do Indian Women wear Toe Ring:</li></ol><p>Wearing toe rings is not just the significance of married women but there is science behind it. Normally toe rings are worn on the second toe. A particular nerve from the second toe connects the uterus and passes to heart. Wearing toe ring on this finger strengthens the uterus. It will keep it healthy by regulating the blood flow to it and menstrual cycle will be regularized. As Silver is a good conductor, it also absorbs polar energies from the earth and passes it to the body.</p><ol start="4"><li>Applying Tilak on the Forehead:</li></ol><p>On the forehead, between the two eyebrows, is a spot that is considered as a major nerve point in human body since ancient times. The Tilak is believed to prevent the loss of “energy”, the red ‘kumkum’ between the eyebrows is said to retain energy in the human body and control the various levels of concentration. While applying kumkum the points on the mid-brow region and Adnya-chakra are automatically pressed. This also facilitates the blood supply to the face muscles.</p><ol start="5"><li>Why do Temples have Bells:</li></ol><p>People who are visiting the temple should and will Ring the bell before entering the inner sanctum (Garbhagudi or Garbha Gruha or womb-chamber) where the main idol is placed. According to Agama Sastra, the bell is used to give sound for keeping evil forces away and the ring of the bell is pleasant to God. However, the scientific reason behind bells is that their ring clears our mind and helps us stay sharp and keep our full concentration on devotional purpose. These bells are made in such a way that when they produce a sound it creates a unity in the Left and Right parts of our brains. The moment we ring the bell, it produces a sharp and enduring sound which lasts for minimum of 7 seconds in echo mode. The duration of echo is good enough to activate all the seven healing centres in our body. This results in emptying our brain from all negative thoughts.</p><ol start="6"><li>Why do we have Navratras:</li></ol><p>Our living style has drastically changed if we compare it to the society hundreds &amp; thousands of years ago. The traditions which we follow in present are not establishments of today but of the past. Ever thought, why do we have Navratras twice a year unlike other festivals like Deepawali or Holi? Well, both these months are the months of changing seasons and the eating habits of both the seasons are quite different from each other. Navratras give enough time to the body to adjust and prepare itself for to the changing season. These nine days were marked as a period when people would clean their body system by keeping fasts by avoiding excessive salt and sugar, meditate, gain a lot of positive energy, gain a lot of self confidence &amp; increase the self determination power (fasts are a medium to improve our will power and self determination) and finally get ready for the challenges of the changed season.</p><ol start="7"><li>Why do we worship Tulsi Plant:</li></ol><p>Hindu religion has bestowed ‘Tulsi’, with the status of mother. Also known as ‘Sacred or Holy Basil’, Tulsi, has been recognized as a religious and spiritual devout in many parts of the world. The vedic sages knew the benefits of Tulsi and that is why they personified it as a Goddess and gave a clear message to the entire community that it needs to be taken care of by the people, literate or illiterate. We try to protect it because it is like Sanjeevani for the mankind. Tulsi has great medicinal properties. It is a remarkable antibiotic. Taking Tulsi everyday in tea or otherwise increases immunity and help the drinker prevent diseases, stabilize his or her health condition, balance his or her body system and most important of all, prolong his or her life. Keeping Tulsi plant at home prevents insects and mosquitoes from entering the house. It is said that snakes do not dare to go near a Tulsi plant. Maybe that is why ancient people would grow lots of Tulsi near their houses.</p><ol start="8"><li>Why do we worship Peepal Tree:</li></ol><p>‘Peepal’ tree is almost useless for an ordinary person, except for its shadow. ‘Peepal’ does not a have a delicious fruit, its wood is not strong enough for any purpose then why should a common villager or person worship it or even care for it? Our ancestors knew that ‘Peepal’ is one of the very few trees (or probably the only tree) which produces oxygen even at night. So in order to save this tree because of its unique property they related it to God/religion.</p><ol start="9"><li>Start with Spice &amp; End with Sweet:</li></ol><p>Our ancestors have stressed on the fact that our meals should be started off with something spicy and sweet dishes should be taken towards the end. The significance of this eating practice is that while spicy things activate the digestive juices and acids and ensure that the digestion process goes on smoothly and efficiently, sweets or carbohydrates pulls down the digestive process. Hence, sweets were always recommended to be taken as a last item.</p><ol start="10"><li>Choti on the Male Head:</li></ol><p>Sushrut rishi, the foremost surgeon of Ayurveda, describes the master sensitive spot on the head as Adhipati Marma, where there is a nexus of all nerves. The shikha protects this spot. Below, in the brain, occurs the Brahmarandhra, where the sushumnã (nerve) arrives from the lower part of the body. In Yog, Brahmarandhra is the highest, seventh chakra, with the thousand-petalled lotus. It is the centre of wisdom. The knotted shikhã helps boost this centre and conserve its subtle energy known as ojas.</p><ol start="11"><li>Applying Mehendi/Henna on the Hand:</li></ol><p>Besides lending color to the hands, mehndi is a very powerful medicinal herb. Weddings are stressful, and often, the stress causes headaches and fevers. As the wedding day approaches, the excitement mixed with nervous anticipation can take its toll on the bride and groom. Application of mehndi can prevent too much stress because it cools the body and keeps the nerves from becoming tense. This is the reason why mehndi is applied on the hands and feet, which house nerve endings in the body.</p><ol start="12"><li>Celebration &amp; Cleaning During Diwali:</li></ol><p>Diwali usually falls in October or November which marks the start of winter season and end of rainy season. Rainy season wasn’t a good time for everyone back then; many homes needed repair and renovation after a heavy fall. That is why time before diwali was considered the period during which everyone can indulge in cleaning and beautification of their home. And also take out their winter clothes and pack the summer ones.</p><ol start="13"><li>Sitting on the Floor &amp; Eating:</li></ol><p>This tradition is not just about sitting on floor and eating, it is regarding sitting in the “Sukhasan” position and then eating. Sukhasan is the position we normally use for Yoga asanas. Sitting in this position while eating helps in improving digestion as the circulatory system can focus solely upon digestion and not on our legs dangling from a chair or supporting us while we are standing.</p><ol start="14"><li>Why not to sleep with Your Head towards North:</li></ol><p>Myth is that it invites ghost or death but science says that it is because human body has its own magnetic field (Also known as hearts magnetic field, because the flow of blood) and Earth is a giant magnet. When we sleep with head towards north, our body’s magnetic field become completely asymmetrical to the Earth’s Magnetic field. That cause problems related to blood pressure and our heart needs to work harder in order to overcome this asymmetry of Magnetic fields. Apart from this another reason is that Our body have significant amount of iron in our blood. When we sleep in this position, iron from the whole body starts to congregate in brain. This can cause headache, Alzheimer’s Disease, Cognitive Decline, Parkinson disease and brain degeneration.</p><ol start="15"><li>Surya Namaskar:</li></ol><p>Hindus have a tradition of paying regards to Sun God early in the morning by their water offering ritual. It was mainly because looking at Sun rays through water or directly at that time of the day is good for eyes and also by waking up to follow this routine, we become prone to a morning lifestyle and mornings are proven to be the most effective part of the day.</p><ol start="16"><li>Ear Piercing in Children:</li></ol><p>Piercing the ears has a great importance in Indian ethos. Indian physicians and philosophers believe that piercing the ears helps in the development of intellect, power of thinking and decision making faculties. Talkativeness fritters away life energy. Ear piercing helps in speech-restraint. It helps to reduce impertinent behaviour and the ear-channels become free from disorders. This idea appeals to the Western world as well, and so they are getting their ears pierced to wear fancy earrings as a mark of fashion.</p><ol start="17"><li>Application of Sindoor or Vermillion:</li></ol><p>It is interesting to note that that the application of sindoor by married women carries a physiological significance. This is so because Sindoor is prepared by mixing turmeric-lime and the metal mercury. Due to its intrinsic properties, mercury, besides controlling blood pressure also activates sexual drive. This also explains why Sindoor is prohibited for the widows. For best results, Sindoor should be applied right upto the pituitary gland where all our feelings are centered. Mercury is also known for removing stress and strain.</p><ol start="18"><li>The scientific explanation of ouching Feet(charan sparsh):</li></ol><p>Usually, the person of whose feet you are touching is either old or pious. When they accept your respect which came from your reduced ego (and is called your shraddha) their hearts emit positive thoughts and energy (which is called their karuna) which reaches you through their hands and toes. In essence, the completed circuit enables flow of energy and increases cosmic energy, switching on a quick connect between two minds and hearts. To an extent, the same is achieved through handshakes and hugs. The nerves that start from our brain spread across all your body. These nerves or wires end in the fingertips of your hand and feet. When you join the fingertips of your hand to those of their opposite feet, a circuit is immediately formed and the energies of two bodies are connected. Your fingers and palms become the ‘receptor’ of energy and the feet of other person become the ‘giver’ of energy.</p><ol start="19"><li>Why do we Fast:</li></ol><p>The underlying principle behind fasting is to be found in Ayurveda. This ancient Indian medical system sees the basic cause of many diseases as the accumulation of toxic materials in the digestive system. Regular cleansing of toxic materials keeps one healthy. By fasting, the digestive organs get rest and all body mechanisms are cleansed and corrected. A complete fast is good for heath, and the occasional intake of warm lemon juice during the period of fasting prevents the flatulence. Since the human body, as explained by Ayurveda, is composed of 80% liquid and 20% solid, like the earth, the gravitational force of the moon affects the fluid contents of the body. It causes emotional imbalances in the body, making some people tense, irritable and violent. Fasting acts as antidote, for it lowers the acid content in the body which helps people to retain their sanity. Research suggests there are major health benefits to caloric restriction like reduced risks of cancer, cardiovascular diseases, diabetes, immune disorders etc.</p><ol start="20"><li>Why Idol Worship:</li></ol><p>Hinduism propagates idol worship more than any other religion. Researchers say that this was initiated for the purpose of increasing concentration during prayers. According to psychiatrists, a man will shape his thoughts as per what he sees. If you have 3 different objects in front of you, your thinking will change according to the object you are viewing. Similarly, in ancient India, idol worship was established so that when people view idols it is easy for them to concentrate to gain spiritual energy and meditate without mental diversion.</p><ol start="21"><li>Why do Indian Women wear Bangles:</li></ol><p>Normally the wrist portion is in constant activation on any human. Also the pulse beat in this portion is mostly checked for all sorts of ailments. The Bangles used by women are normally in the wrist part of ones hand and its constant friction increases the blood circulation level. Further more the electricity passing out through outer skin is again reverted to one’s own body because of the ring shaped bangles, which has no ends to pass the energy outside but to send it back to the body.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to install OpenGrok on Windows OS]]></title>
            <link>https://nagvbt.github.io/blog/2015/06/09/how-to-install-opengrok-on-windows-os</link>
            <guid>https://nagvbt.github.io/blog/2015/06/09/how-to-install-opengrok-on-windows-os</guid>
            <pubDate>Tue, 09 Jun 2015 00:00:00 GMT</pubDate>
            <description><![CDATA[OpenGrok is a fast and usable source code search and cross reference engine. It helps you search, cross-reference and navigate your source code.]]></description>
            <content:encoded><![CDATA[<p>OpenGrok is a fast and usable source code search and cross reference engine. It helps you search, cross-reference and navigate your source code.</p><p><strong>Requirements:</strong></p><ol><li><p>Create a folder 'C:OpenGrok'</p></li><li><p>Install&nbsp;<a href="http://www.oracle.com/technetwork/java/" target="_blank" rel="noopener noreferrer">JDK</a> 1.7 or higher</p><ul><li>Add 'JRE<!-- -->_<!-- -->HOME' environmental variable with value for JRE (eg:&nbsp;C:Program Files (x86)Javajre1.8.0<!-- -->_<!-- -->40)</li><li>Add Java.exe &nbsp;path &nbsp;(eg:&nbsp;C:Program Files (x86)Javajre1.8.0<!-- -->_<!-- -->40bin) in&nbsp;environmental PATH variable and restart computer</li></ul></li><li><p>Download a&nbsp;<a href="http://ctags.sourceforge.net/" target="_blank" rel="noopener noreferrer">Ctags</a> from&nbsp;<a href="http://ctags.sourceforge.net/" target="_blank" rel="noopener noreferrer">Ctags Windows Binary</a>&nbsp;unzip and place it in&nbsp;C:OpenGrokCtags58 folder</p></li></ol><p>4.&nbsp;Download and install <a href="http://tomcat.apache.org/download-70.cgi" target="_blank" rel="noopener noreferrer">Tomcat</a>. To run Tomcat as a windows service open command prompt and navigate to 'TOMCAT<!-- -->_<!-- -->INSTALLbin' and execute 'service.bat install' command</p><p><strong>OpenGork Setup:</strong></p><ol><li>Download and unzip Opengork &nbsp;<a href="http://java.net/projects/opengrok/downloads/download/opengrok-0.12.1.tar.gz" target="_blank" rel="noopener noreferrer">opengrok-0.12.1.tar.gz</a> - Binary distribution to&nbsp; 'C:OpenGrok'</li></ol><p>2.&nbsp;Extract the "source.war" file in the "C:OpenGrokopengrok-0.12.1<strong>lib</strong>"</p><p>3.&nbsp;Edit the WEB-INFweb.xml to include</p><ul><li>Path to configuration.xml that is generated &nbsp;(CONFIGURATION&nbsp;)</li><li>Location to the source being indexed. (SRC<!-- -->_<!-- -->ROOT)</li><li>Location to the "Ctag" generated grokData &nbsp;(DATA<!-- -->_<!-- -->ROOT)</li></ul><p><a href="https://gist.github.com/nagvbt/8378786674100270279c" target="_blank" rel="noopener noreferrer">https://gist.github.com/nagvbt/8378786674100270279c</a></p><p>4.&nbsp;Copy the the extracted source.war with the modified web.xml to the tomcat webapps folder.</p><ol start="5"><li><p>Index the source and generate the configuration.xml file using the below command</p><blockquote><p>java -jar C:OpenGrokopengrok-0.12.1libopengrok.jar -W C:OpenGrokopengrok-0.12.1configuration.xml -c C:OpenGrokctags58ctags.exe -P -S -v -s D:Dev -d C:OpenGrokgrokdata</p></blockquote></li><li><p>Launch Tomcat after the indexing in done. Open <a href="http://localhost:8080/source" target="_blank" rel="noopener noreferrer">http://localhost:8080/source</a></p></li><li><p>Repeat step-5 tp re-index if you need to add new projects/pick new source etc.</p></li></ol>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[ASP.Net State Management: An overview]]></title>
            <link>https://nagvbt.github.io/blog/2015/05/20/asp-net-state-management-an-overview</link>
            <guid>https://nagvbt.github.io/blog/2015/05/20/asp-net-state-management-an-overview</guid>
            <pubDate>Wed, 20 May 2015 00:00:00 GMT</pubDate>
            <description><![CDATA[All the web applications uses HTTP protocol. By nature HTTP is a stateless protocol so after every web request, the client disconnects from server and the ASP.NET engine discards the objects that were created for the page. This will avoid running out of server memory.]]></description>
            <content:encoded><![CDATA[<p>All the web applications uses HTTP protocol. By nature HTTP is a stateless protocol so after every web request, the client disconnects from server and the ASP.NET engine discards the objects that were created for the page. This will avoid running out of server memory.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="levels-of-state-management">Levels of state management<a href="#levels-of-state-management" class="hash-link" aria-label="Direct link to Levels of state management" title="Direct link to Levels of state management">​</a></h3><ol><li>Control level: In ASP.NET, by default controls provide state management automatically.</li><li>Variable or object level: In ASP.NET, member variables at page level are stateless and thus we need to maintain state explicitly.</li><li>Single or multiple page level:&nbsp;State management at single as well as multiple page level i.e., managing state between page requests.</li><li>User level: State should be preserved as long as a user is running the application.</li><li>Application level: State available for complete application irrespective of the user, i.e., should be available to all users.</li><li>Application to application level: State management between or among two or more applications.</li></ol><p><strong>State Management techniques</strong></p><p>State Management techniques are based on client side and server side. Their functionality differs depending on the change in state, so here is the hierarchy:</p><p><strong>Client-side | Techniques</strong></p><p>Client-Side State Management techniques are:</p><ul><li>View State</li><li>Hidden field</li><li>Cookies</li><li>Control State</li><li>Query Strings</li></ul><p><strong>Server-side | Technique</strong></p><p>Server-Side State Management techniques are:</p><ul><li>Session State</li><li>Application State</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to make Visual Studio Run Faster]]></title>
            <link>https://nagvbt.github.io/blog/2015/03/10/how-to-make-visual-studio-run-faster</link>
            <guid>https://nagvbt.github.io/blog/2015/03/10/how-to-make-visual-studio-run-faster</guid>
            <pubDate>Tue, 10 Mar 2015 00:00:00 GMT</pubDate>
            <description><![CDATA[1. Make sure the latest service pack for Visual Studio is installed.]]></description>
            <content:encoded><![CDATA[<ol><li>Make sure the latest service pack for Visual Studio is installed.</li><li>Disable Navigation Bar – Go to Tools&nbsp;&gt;&nbsp;Options&nbsp;&gt;&nbsp;Text Editor&nbsp;&gt;&nbsp;C# or All Languages and uncheck <strong><em>Navigation bar</em></strong>.</li><li>Turn off animations – Go to Tools&nbsp;&gt;&nbsp;Options&nbsp;&gt;&nbsp;Environment and uncheck&nbsp;<strong><em>Animate environment tools</em>.</strong></li><li>Turn off Track Active Item – This will turn off jumping in the explorer whenever you select different files in different projects. Go to Tools&nbsp;&gt;&nbsp;Options&nbsp;&gt;&nbsp;Projects and Solutions and uncheck <em><strong>Track Active Item</strong></em> in Solution Explorer. This will ensure that if you are moving across files in different projects, the left pane will still be steady instead of jumping around.</li><li>Turn off Track Changes – Go to Tools&nbsp;&gt;&nbsp;Options&nbsp;&gt;&nbsp;Text Editor and uncheck <strong><em>Track changes</em></strong>. This will reduce overhead and speeds up IDE response.</li><li>Turn off HTML Validation – Go to Tools&nbsp;&gt;&nbsp;Options&nbsp;&gt;&nbsp;Text Editor&nbsp;&gt;&nbsp;HTML&nbsp;&gt;&nbsp;Validation and uncheck <strong><em>Show errors</em></strong>.</li><li>Turn off Start Page – Go to Tools&nbsp;&gt; Options&nbsp;&gt; Environment&nbsp;&gt; Startup and select <strong><em>Load last loaded solution</em></strong> from the <em>At <strong>Startup</strong></em> dropdown. This simply makes Visual Studio load faster when opening the application.</li></ol><p>NOTE: Above settings have been used for Visual Studio 2005 specifically but should still be of benefit for earlier and later versions of Visual Studio.</p>]]></content:encoded>
            <category>visual-studio</category>
        </item>
        <item>
            <title><![CDATA[How to avoid Memory Leaks in C++, VC++]]></title>
            <link>https://nagvbt.github.io/blog/2014/10/17/how-to-avoid-memory-leaks-in-c-vc</link>
            <guid>https://nagvbt.github.io/blog/2014/10/17/how-to-avoid-memory-leaks-in-c-vc</guid>
            <pubDate>Fri, 17 Oct 2014 00:00:00 GMT</pubDate>
            <description><![CDATA[Contents]]></description>
            <content:encoded><![CDATA[<p><strong>Contents</strong></p><ol><li>Introduction</li><li>How to find memory leak</li><li>Memory Leak and how to avoid it</li></ol><p>Updated on : <em><strong>17-Oct-2014</strong></em></p><p><strong>1<!-- -->.<!-- --> Introduction</strong></p><p>The failure to properly deallocate memory that was previously allocated is known as Memory Leak. The consequences of memory leaks is that the programs that leak large amounts of memory, or leak progressively, may display symptoms ranging from poor (and gradually decreasing) performance to running out of memory completely. Worse, a leaking program may use up so much memory that it causes another program to fail, leaving the user with no clue to where the problem truly lies. In addition, even harmless memory leaks may be symptomatic of other problems.</p><p><strong>2<!-- -->.<!-- --> How to Find Memory Leak</strong></p><p>Use third-party tools like DevPartner or use the following steps to find the memory leaks</p><ul><li>Compile the project in "Debug" Mode.</li><li>Declare the objects <strong>CMemoryState msOld, msNew, msDif;</strong></li><li>Check the memory state at one point. <strong>msOld.Checkpoint();</strong> ://code ://code</li><li>Check the memory state at onother point. <strong>msNew.Checkpoint();</strong></li><li>See for Difference <strong>msDif.Difference( msOld, msNew );</strong></li><li>Display the Leaked blocks in Debug window &nbsp;<strong>msDif.DumpStatistics();</strong></li></ul><p><strong>3<!-- -->.<!-- --> Memory Leak and How to avoid it</strong></p><p><strong>a. Wrong usage of new/delete.</strong></p><p><code>c int\* intArr; intArr = new int\[500\]; delete intArr; </code></p><p>Use&nbsp; delete<!-- -->[<!-- -->]<!-- -->intArr; instead of delete&nbsp;intArr as delete intArr is equal to deleting intArr <!-- -->[<!-- -->0<!-- -->]<!-- -->;</p><p> <strong>b. Improper deletion of Array of Pointers</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">introwNo </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">intcolsNo </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">_array </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> newint_\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">rowNo\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">inti</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> rowNo</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> array\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> new </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">delete\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> array</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The cause of memory leak is that the 'array' is an array of pointers, with each of it's elements pointing to a separate memory block, so it is necessary free these blocks before freeing the array that holds the pointers.</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">for</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> rowNo</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   delete\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> array\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">delete \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> array</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>c. Resource Handles: GDI Objects- CBrush, CPen, CFont, CBitmap, CPallete, CRgn and respective handles</strong></p><p><code>c CBrush myBr, \*pOldBr; myBr .CreateSolidBrush(RGB(0, 255, 0)); pOldBr = pDC-&gt;SelectObject(&amp;myBr); pDC-&gt;SelectObject(&amp; myBr ); : : pDC-&gt;SelectObject(pOldBrush); </code></p><p>For more details Check:<a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms724291(v=vs.85).aspx" target="_blank" rel="noopener noreferrer"></a><a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms724291(v=vs.85).aspx" target="_blank" rel="noopener noreferrer">http://msdn.microsoft.com/en-us/library/windows/desktop/ms724291(v=vs.85).aspx</a></p><p>The DeleteObject method deletes the GDI object by freeing all system storage associated with it. The storage associated with the CGdiObject object is not affected by this call. An application should not call DeleteObject on a CGdiObject object that is currently selected into a device context. Use myBr.DeleteObject(); after finishing using myBr (Cbrush) object&nbsp;For handles pass handle of the DeleteObject function DeleteObject(hPen);</p><p><strong>d. String conversions CString to LPTSTR</strong></p><p><code>c CString sName; sName= \_T("Hello"); int lenName = sName.GetLength();LPTSTR lpstrg = sName.GetBuffer(lenName); :: sName.ReleaseBuffer(); Cstring to BSTR CString csStr = "Hello"; BSTR bStr = csStr.AllocSysString(); : : ::SysFreeString(bStr); //finished using the BSTR </code></p><p>Use ReleaseBuffer() when ever we create a buffer. Use ::SysFreeString() when ever we use AllocSysString() which allocates a new string of the type BSTR.</p><p><strong>e. Improper deletion of pointer objects in a CList</strong></p><p><code>c CList&lt;CMyData_, CMyData_\&gt; ptList; CList&lt;CMyData_, CMyData_\&gt; ptList; : : ptList.RomoveAll(); //Improper deletion of pointer objects in a CArray CArray&lt;CMyData_, CMyData_\&gt; ptArr; : : ptArr.RemoveAll(); </code></p><p>Proper deletion of pointer objects in a CList</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos</span><span class="token operator" style="color:#393A34">!=</span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> delete ptList</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetNext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PtList</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">RomoveAll</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Proper deletion of pointer objects in a CArray CArray&lt;CMyData_, CMyData_\&gt; ptArr; : : int i = 0;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">ptArr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetSize</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> delete ptArr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetAt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ptArr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">RemoveAll</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> ```</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">f</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> Opening and proper closing of file and databases</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ```c CFile file</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> file</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">szFilePath</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> CFile</span><span class="token operator" style="color:#393A34">::</span><span class="token plain">modeCreate </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> CFile</span><span class="token operator" style="color:#393A34">::</span><span class="token plain">modeWrite</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> file</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">chFile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> chFileSize</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> file</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> ```</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> Usage of Static Arrays</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```c </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> Sample\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">500</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> ```</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Never use </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> arrays </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> the array is dynamically growing</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> Instead of using </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> arrays use CArray or OCArray Example</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```c CArray</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> Sample</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> ```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>c</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[How to Learn Windows Phone 8.1 apps development]]></title>
            <link>https://nagvbt.github.io/blog/2014/06/12/how-learn-windows-phone-8-1-apps-development</link>
            <guid>https://nagvbt.github.io/blog/2014/06/12/how-learn-windows-phone-8-1-apps-development</guid>
            <pubDate>Thu, 12 Jun 2014 00:00:00 GMT</pubDate>
            <description><![CDATA[*]]></description>
            <content:encoded><![CDATA[<hr><p><strong>Beginners</strong> <strong>Windows Phone 8.1 development</strong> You need the&nbsp;<a href="http://channel9.msdn.com/Series/Windows-Phone-8-1-Development-for-Absolute-Beginners" target="_blank" rel="noopener noreferrer">Absolute Beginner Series for Windows Phone 8.1</a>&nbsp;It is a complete course in getting started for Windows Phone 8.1. <a href="https://absolutebeginner.codeplex.com/" target="_blank" rel="noopener noreferrer">source code for all the projects here</a>.</p><p><strong>Overview of the features available in Windows Phone 8.1</strong> Watch the&nbsp;<a href="http://channel9.msdn.com/Series/Building-Apps-for-Windows-Phone-8-1/01" target="_blank" rel="noopener noreferrer">first session of the Jump Start</a>.</p><p><strong>Want to learn what is new &nbsp;WP 8.1</strong> You need the&nbsp;<a href="http://channel9.msdn.com/Series/Building-Apps-for-Windows-Phone-8-1" target="_blank" rel="noopener noreferrer">Building Apps For Windows Phone 8.1 Jump Start</a>. <a href="https://onedrive.live.com/?cid=b36de4dd5a9179a1&amp;id=B36DE4DD5A9179A1%2193175&amp;ithint=folder,.zip&amp;authkey=!APluMWf01e3WvqA" target="_blank" rel="noopener noreferrer">source code is available here</a>.</p><p> <strong>Blogs</strong></p><hr><p>1.&nbsp;<a href="https://dev.windowsphone.com/en-us/develop" target="_blank" rel="noopener noreferrer"></a><a href="https://dev.windowsphone.com/en-us/develop" target="_blank" rel="noopener noreferrer">https://dev.windowsphone.com/en-us/develop</a></p><ol start="2"><li><a href="http://nagvbt.blogspot.com" target="_blank" rel="noopener noreferrer">www.nagvbt.blogspot.com</a> 3.&nbsp;<a href="http://blogs.msdn.com/b/thunbrynt/archive/2014/04/08/windows-phone-8-1-for-developers-what-controls-are-new.aspx" target="_blank" rel="noopener noreferrer">Windows Phone 8.1 for Developers–What Controls Are New</a></li></ol>]]></content:encoded>
            <category>Windows Phone</category>
        </item>
        <item>
            <title><![CDATA[Getting Started with Windows Phone 8.1 Development]]></title>
            <link>https://nagvbt.github.io/blog/2014/06/06/getting-started-with-windows-phone-8-1-development</link>
            <guid>https://nagvbt.github.io/blog/2014/06/06/getting-started-with-windows-phone-8-1-development</guid>
            <pubDate>Fri, 06 Jun 2014 00:00:00 GMT</pubDate>
            <description><![CDATA[- The Windows Developer Center is your base for all things Windows and Windows Phone related http//dev.windowsphone.com]]></description>
            <content:encoded><![CDATA[<ul><li>The Windows Developer Center is your base for all things Windows and Windows Phone related&nbsp;<a href="http://dev.windows.com" target="_blank" rel="noopener noreferrer">http://dev.windows.com</a> <a href="http://dev.windowsphone.com" target="_blank" rel="noopener noreferrer">http://dev.windowsphone.com</a></li><li>FREE Download: Visual Studio Express 2013 for Windows</li><li>Visual Studio Express 2013 allows to develop apps for Windows 8.1 and Windows Phone 8.1</li><li>Developers using Visual Studio 2013 Professional or higher has to install Visual Studio 2013 Update 2 to add in Windows Phone 8.1 dev tools</li></ul><p><strong>PC (Hardware) Requirements</strong></p><table width="1159"><tbody><tr><td width="579">Operating systems</td><td width="579">Windows&nbsp;8.1 (x86 or x64)</td></tr><tr><td width="579">Hardware</td><td width="579">4GB of free disk space1.5 GB of RAM (recommended)64-bit (x64) motherboard</td></tr><tr><td width="579">Windows Phone Emulators</td><td width="579">Windows 8.1 Pro or higher (for Hyper-V) and Second Level Address Translation (SLAT)Minimum 4GB RAM</td></tr></tbody></table><p><strong>Windows Developer Account</strong></p><p>For starting development of app you do not need Developer Account. For publishing Windows Phone and/or Windows Store apps you need to get the Developer Account</p><p>To get a Developer Account: Included if you have an MSDN subscription Free to students who have a Dreamspark subscription $19 charge per annum for individual developers, $99 for Company accounts</p>]]></content:encoded>
            <category>Windows Phone</category>
        </item>
        <item>
            <title><![CDATA[Approaches to develop Windows Phone 8.1 apps]]></title>
            <link>https://nagvbt.github.io/blog/2014/06/05/approaches-to-develop-windows-phone-8-1-apps</link>
            <guid>https://nagvbt.github.io/blog/2014/06/05/approaches-to-develop-windows-phone-8-1-apps</guid>
            <pubDate>Thu, 05 Jun 2014 00:00:00 GMT</pubDate>
            <description><![CDATA[There are three approaches to develop Windows Phone 8.1 apps XAML Apps. I like third 'Use Windows XAML platform' approach as most of the users upgrade WP8 to WP8.1.]]></description>
            <content:encoded><![CDATA[<p>There are three approaches to develop&nbsp;Windows Phone 8.1 apps XAML Apps. I like third 'Use Windows XAML platform' approach as most of the users upgrade WP8 to WP8.1.</p><table width="1065"><tbody><tr><td width="425"><b>Approach</b></td><td colspan="2" width="640"><b>Pros &amp; Cons</b></td></tr><tr><td rowspan="2" width="425">Keep using Silverlight 7.x/8(Windows Phone 8 platform)</td><td width="75">Pros</td><td width="565"><ul><li>Will run on Windows Phone 8.1 and also runs on earlier Windows Phone devices</li></ul></td></tr><tr><td width="75">Cons</td><td width="565"><ul><li>No&nbsp;new platform capabilities</li><li>Will not enable targeting of Windows</li></ul></td></tr><tr><td rowspan="2" width="425">Use Silverlight 8.1 (Move Silverlight app into new execution stack and app package)</td><td width="75">Pros</td><td width="565"><ul><li>Enables to use new APIs and platform capabilities</li></ul></td></tr><tr><td width="75">Cons</td><td width="565"><ul><li>Will not enable targeting of Windows</li><li>Will not run on Windows Phone 8 devices</li></ul></td></tr><tr><td rowspan="2" width="425">Use Windows XAML platform</td><td width="75">Pros</td><td width="565"><ul><li>Enables targeting of Windows and Windows Phone</li><li>Takes full advantage of new APIs and platform capabilities</li><li>Better performance</li><li>Reduced memory use</li></ul></td></tr><tr><td width="75">Cons</td><td width="565"><ul><li>Will not run on Windows Phone 8 devices</li></ul></td></tr></tbody></table>]]></content:encoded>
            <category>Windows Phone</category>
        </item>
        <item>
            <title><![CDATA[What's new in Windows Phone 8.1 Hardware]]></title>
            <link>https://nagvbt.github.io/blog/2014/06/04/whats-new-in-windows-phone-8-1-hardware</link>
            <guid>https://nagvbt.github.io/blog/2014/06/04/whats-new-in-windows-phone-8-1-hardware</guid>
            <pubDate>Wed, 04 Jun 2014 00:00:00 GMT</pubDate>
            <description><![CDATA[- Dual-SIM works in Windows Phone 8.1 by splitting out the phone dialer and messaging into two separate Live Tiles.]]></description>
            <content:encoded><![CDATA[<ul><li>Dual-SIM works in Windows Phone 8.1 by splitting out the phone dialer and messaging into two separate Live Tiles.</li><li>Decrease HW cost floor (support 8x26, Qualcomm Reference Design)</li><li>Apps can be installed on microSD</li><li>Apps to help you get more out of your data plan: DataSense 2.0, Wi-Fi Sense, Storage Sense, Battery Sense</li><li>Virtual softkeys instead of capacitive keys.</li></ul>]]></content:encoded>
            <category>Windows Phone</category>
        </item>
        <item>
            <title><![CDATA[New Features in Windows Phone 8.1]]></title>
            <link>https://nagvbt.github.io/blog/2014/05/31/new-features-in-windows-phone-8-1</link>
            <guid>https://nagvbt.github.io/blog/2014/05/31/new-features-in-windows-phone-8-1</guid>
            <pubDate>Sat, 31 May 2014 00:00:00 GMT</pubDate>
            <description><![CDATA[*]]></description>
            <content:encoded><![CDATA[<hr><ul><li><p>&nbsp;Customize Start screen:&nbsp;Customize your Start screen background with a favourite picture or one of the supplied options. Users can configure three&nbsp;column start screen which is available on all phones.&nbsp;Start screen backup and restore feature is also available.</p></li><li><p>PERSONAL Digital Assistant CORTANA:&nbsp;CORTANA learns about you and your interests Enables CORTANA to be proactive and helpful throughout the day</p></li><li><p>Action center to quick launch settings and view notifications</p></li><li><p>Fast typing with new Word Flow keyboard</p></li><li><p>Buy app once: use on PC and on Phone</p></li><li><p>App data can roam among devices</p></li><li><p>App data backup</p></li><li><p>Faster app updates</p></li><li><p>Remote viewing of Phone screen</p></li><li><p>Install apps to SD card</p></li><li><p>New Skype app integrated with Phone dialer</p></li><li><p>New Calendar app with new Week view</p></li></ul><h1>For Developers</h1><hr><ul><li>Converged developer platform</li><li>Converged app model</li><li>Shared app identities + entitlement</li><li>Unified push services (via WNS)</li><li>Live tile improvements</li><li>Action Center for smart notifications</li><li>Internet Explorer 11 improvements</li><li>Background execution + triggers</li><li>Bluetooth-LE support for wearables + beacons</li></ul>]]></content:encoded>
            <category>Windows Phone</category>
        </item>
        <item>
            <title><![CDATA[Microsoft Surface Pro 3 Launch]]></title>
            <link>https://nagvbt.github.io/blog/2014/05/20/microsoft-surface-pro-3-launch</link>
            <guid>https://nagvbt.github.io/blog/2014/05/20/microsoft-surface-pro-3-launch</guid>
            <pubDate>Tue, 20 May 2014 00:00:00 GMT</pubDate>
            <description><![CDATA[Microsoft Surface Pro 3 is a thin tablet which replaces your laptop, more productive, Beautiful screen, Faster than Surface Pro 2]]></description>
            <content:encoded><![CDATA[<p>Microsoft Surface Pro 3 is a thin tablet which replaces your laptop, more productive, Beautiful&nbsp;screen,&nbsp;Faster than Surface Pro 2</p><p>Live webcast @&nbsp;<a href="http://www.microsoft.com/en-us/news/press/2014/may14/05-20webcast.aspx" target="_blank" rel="noopener noreferrer"></a><a href="http://www.microsoft.com/en-us/news/press/2014/may14/05-20webcast.aspx" target="_blank" rel="noopener noreferrer">http://www.microsoft.com/en-us/news/press/2014/may14/05-20webcast.aspx</a> <a href="http://www.nagvbt.blogspot.com/wp-content/uploads/2014/05/microsoft-surface.png" target="_blank" rel="noopener noreferrer">Microsoft Surface</a></p><p>Thicknesses : 9.1 mm Screen : 12.0" Weight : 800g Processor : Core i7 Fan less</p><p><strong>Estimated price of Surface Pro 3:</strong></p><p>4th gen Intel® Core™ i3, 64 GB and 4 GB of RAM - $799</p><p>4th gen Intel® Core™ i5, 128 GB and 4 GB of RAM - $999 4th gen Intel® Core™ i5, 256 GB and 8 GB of RAM - $1,299</p><p>4th gen Intel® Core™ i7, 256 GB and 8 GB of RAM - $1,549 4th gen Intel® Core™ i7, 512 GB and 8 GB of RAM - $1,949</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Upgrade from  Windows Phone 8  to Windows Phone 8.1]]></title>
            <link>https://nagvbt.github.io/blog/2014/05/20/upgrade-from-windows-phone-8-to-windows-phone-8-1</link>
            <guid>https://nagvbt.github.io/blog/2014/05/20/upgrade-from-windows-phone-8-to-windows-phone-8-1</guid>
            <pubDate>Tue, 20 May 2014 00:00:00 GMT</pubDate>
            <description><![CDATA[If you have a Windows Phone 8 now and want to get the preview of Windows Phone 8.1:]]></description>
            <content:encoded><![CDATA[<p>If you have a Windows Phone 8 now and want to get the preview of Windows Phone 8.1:</p><p><img loading="lazy" src="http://cdn.marketplaceimages.windowsphone.com/v8/images/55f7d31d-6813-4edb-a656-15a394c4aa39?imageType=ws_icon_large" class="img_ev3q"></p><ul><li>Go register&nbsp;<strong>free</strong>&nbsp;at&nbsp;<a href="http://appstudio.windowsphone.com/" target="_blank" rel="noopener noreferrer" title="http://appstudio.windowsphone.com/">http://appstudio.windowsphone.com</a>.</li><li>Then go to "<a href="https://dev.windowsphone.com/en-us/develop/devpreview" target="_blank" rel="noopener noreferrer">Windows Phone Preview for Developers</a>" and install the "<a href="https://go.microsoft.com/fwlink/p/?LinkId=324357" target="_blank" rel="noopener noreferrer">Preview for Developers</a>" app.</li><li>Go to Settings, then System Update and update your phone.</li></ul><p><strong>NOTE:</strong></p><ul><li>Warranty will break</li></ul><p>-<!-- -->&nbsp;You CANNOT REVERT to a prior OS version once you have taken an update via this program</p>]]></content:encoded>
            <category>Windows Phone</category>
        </item>
        <item>
            <title><![CDATA['Microsoft Remote Desktop Preview' now available for Windows Phone 8.1]]></title>
            <link>https://nagvbt.github.io/blog/2014/04/24/microsoft-remote-desktop-preview-now-available-for-windows-phone-8-1</link>
            <guid>https://nagvbt.github.io/blog/2014/04/24/microsoft-remote-desktop-preview-now-available-for-windows-phone-8-1</guid>
            <pubDate>Thu, 24 Apr 2014 00:00:00 GMT</pubDate>
            <description><![CDATA[If you install Windows Phone 8.1 preview for developers on your phone. It's time to download and try 'Microsoft Remote Desktop Preview' app which is now available in WP Store]]></description>
            <content:encoded><![CDATA[<p><a href="http://www.windowsphone.com/s?appid=299b09ab-207e-441c-9e8e-c8d66c20b76b" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="http://cdn.marketplaceimages.windowsphone.com/v8/images/949b1b9f-7047-4921-bda8-cf873f30fb7f?imageType=ws_icon_large" class="img_ev3q"></a></p><p>If you install <a href="http://nagvbt.blogspot.com/2014/05/20/upgrade-from-windows-phone-8-to-windows-phone-8-1/" target="_blank" rel="noopener noreferrer" title="Upgrade from  Windows Phone 8  to Windows Phone 8.1">Windows Phone 8.1 preview for developers on your phone.</a> It's time to <a href="http://www.windowsphone.com/s?appid=299b09ab-207e-441c-9e8e-c8d66c20b76b" target="_blank" rel="noopener noreferrer">download</a> and try 'Microsoft Remote Desktop Preview' app which is now available in WP Store</p><p><strong>Features</strong></p><ul><li>Rich multi-touch experience with Remote Desktop Protocol (RDP) and RemoteFX supporting Windows gestures</li><li>Secure connection to your data and applications with breakthrough Network Level Authentication (NLA) technology</li><li>Simple management of all remote connections from the connection center</li><li>High quality video and sound streaming with improved compression and bandwidth usage</li></ul><p>Release 8.1.1 includes the following updates:</p><ul><li>Pin desktop connections to the Start screen</li><li>Support for word flow and predictive text</li><li>Ability to disable thumbnails</li></ul>]]></content:encoded>
            <category>Windows Phone</category>
        </item>
        <item>
            <title><![CDATA[Bring your App Studio apps to Windows 8]]></title>
            <link>https://nagvbt.github.io/blog/2014/03/03/bring-your-app-studio-apps-to-windows-8</link>
            <guid>https://nagvbt.github.io/blog/2014/03/03/bring-your-app-studio-apps-to-windows-8</guid>
            <pubDate>Mon, 03 Mar 2014 00:00:00 GMT</pubDate>
            <description><![CDATA[Windows Phone App Studio Beta is awesome. It’s a great way to build your first app for Windows Phone. It lets you choose different design templates and styles, and lets you pull in different data sources, from RSS feeds, to YouTube, to Flicker or even Bing. In this post, we’ll talk about how to take an app that you created in App Studio go further by making it work on Windows 8 using the latest update to Windows Phone App Studio.]]></description>
            <content:encoded><![CDATA[<p><a href="http://apps.windowsstore.com/default.htm" target="_blank" rel="noopener noreferrer">Windows Phone App Studio Beta</a>&nbsp;is awesome. It’s a great way to build your first app for Windows Phone. It lets you choose different design templates and styles, and lets you pull in different data sources, from RSS feeds, to YouTube, to Flicker or even Bing. In this post, we’ll talk about how to take an app that you created in App Studio go further by making it work on Windows 8 using the latest update to Windows Phone App Studio.</p><p>For More Info read <a href="http://dwcares.com/app-studio-win8/" target="_blank" rel="noopener noreferrer">this-&gt;</a></p>]]></content:encoded>
            <category>Windows Phone</category>
        </item>
        <item>
            <title><![CDATA[Microsoft DevCamps - Windows Application Development]]></title>
            <link>https://nagvbt.github.io/blog/2014/02/05/microsoft-devcamps-windows-application-development</link>
            <guid>https://nagvbt.github.io/blog/2014/02/05/microsoft-devcamps-windows-application-development</guid>
            <pubDate>Wed, 05 Feb 2014 00:00:00 GMT</pubDate>
            <description><![CDATA[Attended Microsoft DevCamps  @ Regenta One hosted by Microsoft - winner of 2nd prize for development of Windows 8.1 App - In Hackathon.]]></description>
            <content:encoded><![CDATA[<p>Attended&nbsp;Microsoft DevCamps &nbsp;@&nbsp;Regenta One hosted by Microsoft - winner of <strong>2nd prize</strong> for development of Windows 8.1 App - In Hackathon.</p><p><a href="http://www.microsoft.com/en-in/events/devcamps/all_events_hyderabad.aspx" target="_blank" rel="noopener noreferrer">DevCamp</a></p>]]></content:encoded>
            <category>Technology</category>
        </item>
        <item>
            <title><![CDATA[Visual Studio 2013 Update 1 ready to download]]></title>
            <link>https://nagvbt.github.io/blog/2014/01/22/visual-studio-2013-update-1-ready-to-download</link>
            <guid>https://nagvbt.github.io/blog/2014/01/22/visual-studio-2013-update-1-ready-to-download</guid>
            <pubDate>Wed, 22 Jan 2014 00:00:00 GMT</pubDate>
            <description><![CDATA[In a blog post, S. Somasegar, Corporate Vice President of Microsoft Developer Division clearly mentioned that]]></description>
            <content:encoded><![CDATA[<p>In a <a href="http://blogs.msdn.com/b/somasegar/archive/2014/01/20/visual-studio-2013-update-1.aspx" target="_blank" rel="noopener noreferrer">blog</a> post, S. Somasegar, Corporate Vice President of Microsoft Developer Division clearly mentioned that: “This is a targeted update, addressing some key areas of customer feedback since the Visual Studio 2013 release. For example, we heard your feedback about running Visual Studio in environments without IE10+, and have made several improvements to this experience in Update 1.” <strong>New features for developers include:</strong></p><ul><li>IntelliTrace Viewer users should note that it's been updated to support Internet Explorer 9.</li><li>A new version of Microsoft ASP.NET Web Frameworks and Tools (version 5.0.11213.0). It adds editing support for ASP.NET MVC 5.1 on top of all existing functionality from the Web Framework and Tools 5.0 release.</li><li>A new version of Nuget, 2.7.2. It fixes a bug which caused certain packages to fail when running package restore, update or uninstall.</li><li>Web tool, SignalR 2.0.1, which includes new item templates.</li></ul><p><strong>Download</strong></p><ul><li><a href="http://www.microsoft.com/en-us/download/confirmation.aspx?id=41650" target="_blank" rel="noopener noreferrer">Download web installer of Visual Studio 2013 Update 1</a>&nbsp;<strong>(~1.1 MB)</strong></li><li><a href="http://go.microsoft.com/fwlink/?LinkId=386593" target="_blank" rel="noopener noreferrer">Download offline installer/ISO image of Visual Studio 2013 Update 1</a>&nbsp;<strong>(~245 MB)</strong></li></ul>]]></content:encoded>
            <category>visual-studio</category>
        </item>
        <item>
            <title><![CDATA[How to set a variable that can be accessed on all pages of a Windows Phone App]]></title>
            <link>https://nagvbt.github.io/blog/2013/03/09/how-to-set-a-variable-that-can-be-accessed-on-all-pages-of-a-windows-phone-app</link>
            <guid>https://nagvbt.github.io/blog/2013/03/09/how-to-set-a-variable-that-can-be-accessed-on-all-pages-of-a-windows-phone-app</guid>
            <pubDate>Sat, 09 Mar 2013 00:00:00 GMT</pubDate>
            <description><![CDATA[App.xaml.cs]]></description>
            <content:encoded><![CDATA[<p><strong>App.xaml.cs</strong></p><div class="language-cs true codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p> public static new App Current
{
get { return Application.Current as App; }
}
...
...</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} ```</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">**Page1.xaml.cs**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```cs public partial class Page1 : PhoneApplicationPage { public string \_sName;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p> public Page1()
{
InitializeComponent();</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">_sName = App.Current.sName;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p> }</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} ```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>Windows Phone</category>
        </item>
        <item>
            <title><![CDATA[Can't login to Windows 8 with account live password! ?]]></title>
            <link>https://nagvbt.github.io/blog/2013/01/04/cant-login-to-windows-8-with-account-live-password</link>
            <guid>https://nagvbt.github.io/blog/2013/01/04/cant-login-to-windows-8-with-account-live-password</guid>
            <pubDate>Fri, 04 Jan 2013 00:00:00 GMT</pubDate>
            <description><![CDATA[Steps:]]></description>
            <content:encoded><![CDATA[<p>Steps:</p><p>1<!-- -->.<!-- --> open the 'On screen keyboard' and use it to type the password</p><p>Preventive measure steps:</p><p>It's good to setup sign-in options in order to have one or more ways to login to your PC</p><p>1<!-- -->.<!-- --> Go to charm bar select 'Change PC Settings'</p><p>2<!-- -->.<!-- --> Select Users</p><p>3<!-- -->.<!-- --> Use 'Sign-in options' to use 'Picture Password' and 'PIN' password</p>]]></content:encoded>
            <category>windows-8</category>
        </item>
        <item>
            <title><![CDATA[How to Delete "Windows.old" in windows 8]]></title>
            <link>https://nagvbt.github.io/blog/2013/01/04/how-to-delete-windows-old-in-windows-8</link>
            <guid>https://nagvbt.github.io/blog/2013/01/04/how-to-delete-windows-old-in-windows-8</guid>
            <pubDate>Fri, 04 Jan 2013 00:00:00 GMT</pubDate>
            <description><![CDATA[1. Press the Windows+R keys to open the Run dialog, type cleanmgr, and press Enter.]]></description>
            <content:encoded><![CDATA[<p><strong>1.</strong>&nbsp;Press the&nbsp;<strong>Windows+R</strong>&nbsp;keys to open the Run dialog, type&nbsp;<strong>cleanmgr</strong>, and press Enter.</p><p><strong>2.</strong>&nbsp;Select the&nbsp;<strong>Windows drive</strong>, and click/tap on&nbsp;<strong>OK</strong>. <strong>NOTE:</strong>&nbsp;<em>You will not see this window unless you have more than one drive or partition on your computer with a drive letter.</em></p><p><strong>3.</strong> Click/tap on the&nbsp;<strong>Clean up system files</strong> button</p><p><strong>4.</strong>&nbsp;Click/tap on the&nbsp;<strong>Previous Windows installation(s)</strong> box to check it, and click/tap on&nbsp;<strong>OK</strong>. (see screenshot below)</p><p><strong>5.</strong>&nbsp;Click/tap on&nbsp;<strong>Delete Files</strong>.</p><p><strong>6.</strong>&nbsp;When Disk Cleanup finishes, the&nbsp;<strong>C:Windows.old</strong>&nbsp;folder will be deleted.</p>]]></content:encoded>
            <category>windows-8</category>
        </item>
        <item>
            <title><![CDATA[American mathematicians solve Ramanujan’s “deathbed” puzzle]]></title>
            <link>https://nagvbt.github.io/blog/2012/12/30/american-mathematicians-solve-ramanujans-deathbed-puzzle</link>
            <guid>https://nagvbt.github.io/blog/2012/12/30/american-mathematicians-solve-ramanujans-deathbed-puzzle</guid>
            <pubDate>Sun, 30 Dec 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[“Ramanujans legacy is much more important than anything anyone would have guessed” - The Hindu]]></description>
            <content:encoded><![CDATA[<p>“Ramanujans legacy is much more important than anything anyone would have guessed” - <a href="http://www.thehindu.com/news/american-mathematicians-solve-ramanujans-deathbed-puzzle/article4253593.ece?homepage=true" target="_blank" rel="noopener noreferrer">The Hindu</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Free Succinctly Series Ebooks]]></title>
            <link>https://nagvbt.github.io/blog/2012/12/07/free-ebook-f-succinctly</link>
            <guid>https://nagvbt.github.io/blog/2012/12/07/free-ebook-f-succinctly</guid>
            <pubDate>Fri, 07 Dec 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[You can explore latest trends in software development, data visualization, and data science for free using the Succinctly Series Ebooks.]]></description>
            <content:encoded><![CDATA[<p><strong>You can explore latest trends in software development, data visualization, and data science for free using the Succinctly Series Ebooks.</strong></p><p><strong>Features:</strong></p><ul><li>Only the essential technical information you need in approximately 100 pages.</li><li>New ebooks released monthly on the latest industry trends and topics</li><li>You can download a PDF</li><li>Or you can read online</li></ul><p>For more details refer the <a href="https://www.syncfusion.com/succinctly-free-ebooks" target="_blank" rel="noopener noreferrer">website</a></p>]]></content:encoded>
            <category>Books</category>
        </item>
        <item>
            <title><![CDATA[Print 1 to 100 in C++ without using loops and recursion]]></title>
            <link>https://nagvbt.github.io/blog/2012/12/07/how-to-print-1-to-100-numbers-in-c-without-using-loops-and-recursion</link>
            <guid>https://nagvbt.github.io/blog/2012/12/07/how-to-print-1-to-100-numbers-in-c-without-using-loops-and-recursion</guid>
            <pubDate>Fri, 07 Dec 2012 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">CPrintNum</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> iNum</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">CPrintNum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   cout </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> iNum</span><span class="token operator" style="color:#393A34">++</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> endl</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> CPrintNum</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">iNum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CPrintNum obj</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>C++</category>
        </item>
        <item>
            <title><![CDATA[Visual Studio 2012 Update 1 Now Available]]></title>
            <link>https://nagvbt.github.io/blog/2012/11/28/visual-studio-2012-update-1-now-available</link>
            <guid>https://nagvbt.github.io/blog/2012/11/28/visual-studio-2012-update-1-now-available</guid>
            <pubDate>Wed, 28 Nov 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Visual Studio 2012 Update 1 Now Available for Download . Visual Studio 2012 Update 1 has the improvements in]]></description>
            <content:encoded><![CDATA[<p>Visual Studio 2012 Update 1 Now Available for&nbsp;<strong><a href="http://www.microsoft.com/visualstudio/eng/downloads#d-visual-studio-2012-update" target="_blank" rel="noopener noreferrer">Download</a>&nbsp;.</strong> Visual Studio 2012 Update 1 has the improvements in</p><ul><li>Windows Development</li><li>SharePoint Development</li><li>Agile Teams</li><li>Continuous Quality</li></ul><p>Source: <a href="http://blogs.msdn.com/b/somasegar/archive/2012/11/26/visual-studio-2012-update-1-now-available.aspx" target="_blank" rel="noopener noreferrer">http://blogs.msdn.com/b/somasegar/archive/2012/11/26/visual-studio-2012-update-1-now-available.aspx</a></p>]]></content:encoded>
            <category>visual-studio</category>
        </item>
        <item>
            <title><![CDATA[MASTER C++ Windows Phone App]]></title>
            <link>https://nagvbt.github.io/blog/2012/10/08/master-cpp-windows-phone-app</link>
            <guid>https://nagvbt.github.io/blog/2012/10/08/master-cpp-windows-phone-app</guid>
            <pubDate>Mon, 08 Oct 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[I had developed an Windows Phone 7 App screen shots are shown below.]]></description>
            <content:encoded><![CDATA[<p>I had developed an Windows Phone 7 App screen shots are shown below.</p><p>[<!-- -->slideshow<!-- -->]</p><p>I am going to submit this app in the Market Place. Mean while any&nbsp;feedback&nbsp;is welcome.</p>]]></content:encoded>
            <category>Windows Phone</category>
        </item>
        <item>
            <title><![CDATA[WCF Data Services 5.0 for OData V3]]></title>
            <link>https://nagvbt.github.io/blog/2012/10/05/wcf-data-services-5-0-for-odata-v3</link>
            <guid>https://nagvbt.github.io/blog/2012/10/05/wcf-data-services-5-0-for-odata-v3</guid>
            <pubDate>Fri, 05 Oct 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Microsoft released WCF Data Services 5.0 for Open Data Protocol (OData)]]></description>
            <content:encoded><![CDATA[<h4 class="anchor anchorWithStickyNavbar_LWe7" id="microsoft-released-wcf-data-services-50-foropen-data-protocol-odata">Microsoft released WCF Data Services 5.0 for&nbsp;Open Data Protocol (OData)<a href="#microsoft-released-wcf-data-services-50-foropen-data-protocol-odata" class="hash-link" aria-label="Direct link to Microsoft released WCF Data Services 5.0 for&nbsp;Open Data Protocol (OData)" title="Direct link to Microsoft released WCF Data Services 5.0 for&nbsp;Open Data Protocol (OData)">​</a></h4><h4 class="anchor anchorWithStickyNavbar_LWe7" id="it-facilitates-data-access-and-change-via-standard-http-verbs">It facilitates data access and change via standard HTTP verbs.<a href="#it-facilitates-data-access-and-change-via-standard-http-verbs" class="hash-link" aria-label="Direct link to It facilitates data access and change via standard HTTP verbs." title="Direct link to It facilitates data access and change via standard HTTP verbs.">​</a></h4><p>The&nbsp;package contains:</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="1-net-framework-server">1<!-- -->.<!-- --> .NET Framework server<a href="#1-net-framework-server" class="hash-link" aria-label="Direct link to 1-net-framework-server" title="Direct link to 1-net-framework-server">​</a></h4><h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-client-libraries-and-silverlight-client-libraries">2<!-- -->.<!-- --> Client libraries and Silverlight client libraries.<a href="#2-client-libraries-and-silverlight-client-libraries" class="hash-link" aria-label="Direct link to 2-client-libraries-and-silverlight-client-libraries" title="Direct link to 2-client-libraries-and-silverlight-client-libraries">​</a></h4><p><a href="http://www.microsoft.com/en-us/download/details.aspx?id=29306" target="_blank" rel="noopener noreferrer">Download Link</a></p>]]></content:encoded>
            <category>WCF</category>
        </item>
        <item>
            <title><![CDATA[Ramaya.na - in google version using HTML 5]]></title>
            <link>https://nagvbt.github.io/blog/2012/09/28/ramaya-na-in-google-version-using-html-5</link>
            <guid>https://nagvbt.github.io/blog/2012/09/28/ramaya-na-in-google-version-using-html-5</guid>
            <pubDate>Fri, 28 Sep 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Ramayana which is an Indian epic story but shown as Indonesian way by www.ramaya.na website which was made by Google.]]></description>
            <content:encoded><![CDATA[<p>Ramayana which is an Indian epic story but shown as Indonesian way by <a href="http://www.ramaya.na" target="_blank" rel="noopener noreferrer">www.ramaya.na</a> website which was made by Google.</p><p>It was developed as animation story using HTML5.</p><p>[<!-- -->youtube <a href="http://www.youtube.com/watch?v=LIXDcQ7qbNo?feature=player_detailpage" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?v=LIXDcQ7qbNo?feature=player<!-- -->_<!-- -->detailpage</a>]</p>]]></content:encoded>
            <category>Technology</category>
        </item>
        <item>
            <title><![CDATA[How to execute a command in Visual C++]]></title>
            <link>https://nagvbt.github.io/blog/2012/09/27/how-to-execute-a-command-in-visual-c</link>
            <guid>https://nagvbt.github.io/blog/2012/09/27/how-to-execute-a-command-in-visual-c</guid>
            <pubDate>Thu, 27 Sep 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[There are basically four methods to run a command in Visual C++. WinExec is provided only for compatibility with 16-bit Windows. Applications should use the CreateProcess function.]]></description>
            <content:encoded><![CDATA[<p>There are basically four methods to run a command in Visual C++. WinExec is provided only for compatibility with 16-bit Windows. Applications should use the CreateProcess function.</p><p>· system(), <!-- -->_<!-- -->wsystem()
· ShellExecute() or ShellExecuteEx()
· CreateProcess()
· WinExec()</p>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
            <category>win32</category>
        </item>
        <item>
            <title><![CDATA[LEAP Hands-free motion control Technology]]></title>
            <link>https://nagvbt.github.io/blog/2012/09/27/leap-hands-free-motion-control-technology</link>
            <guid>https://nagvbt.github.io/blog/2012/09/27/leap-hands-free-motion-control-technology</guid>
            <pubDate>Thu, 27 Sep 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[New way of interaction with the computers say good bye to Keyboard, Mouse even touch screen :)  ?]]></description>
            <content:encoded><![CDATA[<p>New way of interaction with the&nbsp;computers&nbsp;say good bye to Keyboard, Mouse even touch screen :) &nbsp;?</p><p>Yes it can be possible !</p><p>A&nbsp;San Francisco Company Leap Motion (<a href="http://www.leapmotion.com" target="_blank" rel="noopener noreferrer">www.leapmotion.com</a>) developed&nbsp;Hands-free motion control Technology.</p><p>[<!-- -->youtube <a href="http://www.youtube.com/watch?v=_d6KuiuteIA?feature=player_detailpage" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?v=<!-- -->_<!-- -->d6KuiuteIA?feature=player<!-- -->_<!-- -->detailpage</a>]</p><p>The website says:</p><p>" Leap represents an entirely new way to interact with your computers. It’s more accurate than a mouse, as reliable as a keyboard and more sensitive than a touchscreen. &nbsp;For the first time, you can control a computer in three dimensions with your natural hand and finger movements.
This isn’t a game system that roughly maps your hand movements.&nbsp; The Leap technology is 200 times more accurate than anything else on the market — at any price point.&nbsp;Just about the size of a flash drive, the Leap can distinguish your individual fingers and track your movements down to a 1/100th of a millimeter.
This is like day one of the mouse.&nbsp; Except, no one needs an instruction manual for their hands. "</p>]]></content:encoded>
            <category>Technology</category>
        </item>
        <item>
            <title><![CDATA[Win32: How do I get the name of files in a folder ?]]></title>
            <link>https://nagvbt.github.io/blog/2012/09/26/win32-how-do-i-get-the-name-of-files-in-a-folder</link>
            <guid>https://nagvbt.github.io/blog/2012/09/26/win32-how-do-i-get-the-name-of-files-in-a-folder</guid>
            <pubDate>Wed, 26 Sep 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[To get the name of files in a folder,]]></description>
            <content:encoded><![CDATA[<p>To get the name of files in a folder,</p><ol><li>call the&nbsp;<strong>FindFirstFile</strong> function to open a search handle and get information about the first file that the file system find in the folder.</li><li>call the&nbsp;<strong>FindNextFile</strong> function to continue listing files from a previous call to FindFirstFile.</li></ol><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hFind </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> INVALID\_HANDLE\_VALUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">TEXT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"FindFirstFile failed (%d)n"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetLastError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">TEXT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"The first file is %sn"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> FindFileData</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cFileName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">FindNextFile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hFind</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">FindFileData</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">TEXT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"The next file is %sn"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> FindFileData</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cFileName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">FindClose</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hFind</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> ```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>c</category>
            <category>win32</category>
        </item>
        <item>
            <title><![CDATA[Vedic Technology - Greatness Of The Vedic Vedas: vedic cosmology]]></title>
            <link>https://nagvbt.github.io/blog/2012/09/16/vedic-technology-greatness-of-the-vedic-vedas-vedic-cosmology</link>
            <guid>https://nagvbt.github.io/blog/2012/09/16/vedic-technology-greatness-of-the-vedic-vedas-vedic-cosmology</guid>
            <pubDate>Sun, 16 Sep 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Vedic Technology - Greatness Of The Vedic Vedas Knowledge Perfect Science: vedic cosmology]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="vedic-technology--greatness-of-the-vedic-vedas-knowledge-perfect-science-vedic-cosmology">Vedic Technology -&nbsp;Greatness Of The Vedic Vedas Knowledge Perfect Science: vedic cosmology<a href="#vedic-technology--greatness-of-the-vedic-vedas-knowledge-perfect-science-vedic-cosmology" class="hash-link" aria-label="Direct link to Vedic Technology -&nbsp;Greatness Of The Vedic Vedas Knowledge Perfect Science: vedic cosmology" title="Direct link to Vedic Technology -&nbsp;Greatness Of The Vedic Vedas Knowledge Perfect Science: vedic cosmology">​</a></h2><p><em>6 parts totaling about 18minutes</em></p><p>)Cosmology&nbsp;&nbsp;stated in the Vedic scriptures about which was thousands of years before the modern science discovery.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="part---1">Part - 1<a href="#part---1" class="hash-link" aria-label="Direct link to Part - 1" title="Direct link to Part - 1">​</a></h3><p>[<!-- -->youtube=<a href="http://www.youtube.com/watch?v=r47hy9ndeI0" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?v=r47hy9ndeI0</a>]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="part---2">Part - 2<a href="#part---2" class="hash-link" aria-label="Direct link to Part - 2" title="Direct link to Part - 2">​</a></h3><p>[<!-- -->youtube=<a href="http://www.youtube.com/watch?v=vlqRFBcylaA" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?v=vlqRFBcylaA</a>]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="part---3">Part - 3<a href="#part---3" class="hash-link" aria-label="Direct link to Part - 3" title="Direct link to Part - 3">​</a></h3><p>[<!-- -->youtube=<a href="http://www.youtube.com/watch?v=BYOr-jd9qUA" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?v=BYOr-jd9qUA</a>]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="part---4">Part - 4<a href="#part---4" class="hash-link" aria-label="Direct link to Part - 4" title="Direct link to Part - 4">​</a></h3><p>[<!-- -->youtube=<a href="http://www.youtube.com/watch?v=nlOBOrHHY_w" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?v=nlOBOrHHY<!-- -->_<!-- -->w</a>]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="part---5">Part - 5<a href="#part---5" class="hash-link" aria-label="Direct link to Part - 5" title="Direct link to Part - 5">​</a></h3><p>[<!-- -->youtube=<a href="http://www.youtube.com/watch?v=GTAV-5fjfd4" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?v=GTAV-5fjfd4</a>]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="part---6">Part - 6<a href="#part---6" class="hash-link" aria-label="Direct link to Part - 6" title="Direct link to Part - 6">​</a></h3><p>[<!-- -->youtube=<a href="http://www.youtube.com/watch?v=8sb4wMNOt14" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?v=8sb4wMNOt14</a>]</p>]]></content:encoded>
            <category>Technology</category>
        </item>
        <item>
            <title><![CDATA[Installation Setup for Windows Phone 7  Development]]></title>
            <link>https://nagvbt.github.io/blog/2012/09/05/installation-setup-for-windows-phone-7-development</link>
            <guid>https://nagvbt.github.io/blog/2012/09/05/installation-setup-for-windows-phone-7-development</guid>
            <pubDate>Wed, 05 Sep 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[1. Install Visual Studio 2010 Professional or  Visual Studio 2010 Ultimate]]></description>
            <content:encoded><![CDATA[<ol><li><p>Install Visual Studio 2010 Professional or &nbsp;Visual Studio 2010 Ultimate</p></li><li><p>Install Microsoft VisualStudio 2010 ServicePack1 <a href="http://http//www.microsoft.com/en-in/download/details.aspx?id=23691" target="_blank" rel="noopener noreferrer" title="SP1 Download Link"></a><a href="http://www.microsoft.com/en-in/download/details.aspx?id=23691" target="_blank" rel="noopener noreferrer">http://www.microsoft.com/en-in/download/details.aspx?id=23691</a></p></li></ol><p><strong>or</strong></p><p>If you don’t have Visual Studio 2010 Professional or Visual Studio 2010 Ultimate go for 3) Visual Studio 2010 Express for Windows Phone&nbsp;<a href="http://msdn.microsoft.com/en-us/library/ff630878(v=vs.92).aspx(MSDN)" target="_blank" rel="noopener noreferrer">(MSDN)</a> <a href="http://www.microsoft.com/visualstudio/en-us/products/2010-editions/windows-phone-developer-tools" target="_blank" rel="noopener noreferrer"></a><a href="http://www.microsoft.com/visualstudio/en-us/products/2010-editions/windows-phone-developer-tools" target="_blank" rel="noopener noreferrer">http://www.microsoft.com/visualstudio/en-us/products/2010-editions/windows-phone-developer-tools</a></p><p>After installing&nbsp;&nbsp;Visual Studio 2010 Professional or &nbsp;Visual Studio 2010 Ultimate or&nbsp;Visual Studio 2010 Express for Windows Phone install following Windows Phone SDK’s</p><p>4) Install Microsoft XNA Game Studio 4.0 <a href="http://www.microsoft.com/en-in/download/details.aspx?id=23714" target="_blank" rel="noopener noreferrer">http://www.microsoft.com/en-in/download/details.aspx?id=23714</a></p><p>5) Install Windows Phone SDK&nbsp;7.1 SDK <a href="http://www.microsoft.com/en-us/download/details.aspx?id=27570" target="_blank" rel="noopener noreferrer">http://www.microsoft.com/en-us/download/details.aspx?id=27570</a></p><p>6) Install Windows Phone SDK 7.1.1 SDK Update <a href="http://www.microsoft.com/en-us/download/details.aspx?id=29233" target="_blank" rel="noopener noreferrer"></a><a href="http://www.microsoft.com/en-us/download/details.aspx?id=29233" target="_blank" rel="noopener noreferrer">http://www.microsoft.com/en-us/download/details.aspx?id=29233</a></p>]]></content:encoded>
            <category>Windows Phone</category>
        </item>
        <item>
            <title><![CDATA[MFC: Enumerate all views of the document]]></title>
            <link>https://nagvbt.github.io/blog/2012/09/03/mfc-enumerate-all-views-of-the-document</link>
            <guid>https://nagvbt.github.io/blog/2012/09/03/mfc-enumerate-all-views-of-the-document</guid>
            <pubDate>Mon, 03 Sep 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[To Enumerate all views of the document the CDocument class provides GetFirstViewPosition and GetNextView member functions to enumerate all views associated with the document. We call view’s OnUpdate function to communicate with them.]]></description>
            <content:encoded><![CDATA[<p>To Enumerate all views of the document the CDocument class provides GetFirstViewPosition and GetNextView member functions to enumerate all views associated with the document. We call view’s OnUpdate function to communicate with them.</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">EnumerateViews</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">//get the position of the first view in the list</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">//of views associated with the document.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   POSITION pos </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetFirstViewPosition</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">//terate through all of the document's views.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      CView\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pView </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetNextView</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">//update view</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pView</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">OnUpdate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pSender</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lHint</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pHint</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
        </item>
        <item>
            <title><![CDATA[C#: How to generate xsd and class for an XML document]]></title>
            <link>https://nagvbt.github.io/blog/2012/09/02/c-how-to-generate-xsd-and-class-for-an-xml-document</link>
            <guid>https://nagvbt.github.io/blog/2012/09/02/c-how-to-generate-xsd-and-class-for-an-xml-document</guid>
            <pubDate>Sun, 02 Sep 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Using xsd.exe which will be install with the Visual studio can be used.]]></description>
            <content:encoded><![CDATA[<p>Using xsd.exe which will be install with the Visual studio can be used.<br>
<!-- -->Open&nbsp;Visual Studio Command Prompt and use the following commands</p><p>Setting environment for using Microsoft Visual Studio 2010 x86 tools.</p><p>C:Program Files (x86)Microsoft Visual Studio 10.0VC&gt;cd C:</p><p><strong>C:&gt;xsd CPPData.xml</strong></p><p> Microsoft (R) Xml Schemas/DataTypes support utility
<!-- -->[<!-- -->Microsoft (R) .NET Framework, Version 4.0.30319.1<!-- -->]<!-- -->
Copyright (C) Microsoft Corporation. All rights reserved.
Writing file 'C:CPPData.xsd'.
C:&gt;xsd CPPData.xsd /classes
Microsoft (R) Xml Schemas/DataTypes support utility
<!-- -->[<!-- -->Microsoft (R) .NET Framework, Version 4.0.30319.1<!-- -->]<!-- -->
Copyright (C) Microsoft Corporation. All rights reserved.
Writing file 'C:CPPData.cs'.
C:&gt;</p>]]></content:encoded>
            <category>csharp</category>
            <category>xml</category>
        </item>
        <item>
            <title><![CDATA[C#: How to Select a random item from a List]]></title>
            <link>https://nagvbt.github.io/blog/2012/08/29/select-a-random-item-from-a-list</link>
            <guid>https://nagvbt.github.io/blog/2012/08/29/select-a-random-item-from-a-list</guid>
            <pubDate>Wed, 29 Aug 2012 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<p><code>cs using System; using System.Collections.Generic; namespace RandomSelect { class Program { static List lst = new List&amp;gt;(); static void Main(string\[\] args) { lst.Add("1"); lst.Add("2"); lst.Add("3"); lst.Add("4"); lst.Add("5"); lst.Add("6"); lst.Add("7"); lst.Add("8"); lst.Add("9"); lst.Add("10"); Random rndElement = new Random(); foreach (string i in lst) { string s = lst\[rndElement.Next(lst.Count)\]; Console.WriteLine(s); } } } } </code></p>]]></content:encoded>
            <category>csharp</category>
        </item>
        <item>
            <title><![CDATA[N-Tier Architecture with ASP.NET MVC3, WCF and Entity Framework]]></title>
            <link>https://nagvbt.github.io/blog/2012/08/26/n-tier-architecture-with-asp-net-mvc3-wcf-and-entity-framework</link>
            <guid>https://nagvbt.github.io/blog/2012/08/26/n-tier-architecture-with-asp-net-mvc3-wcf-and-entity-framework</guid>
            <pubDate>Sun, 26 Aug 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Advantage of using N-Tier software architecture are scalability, security, fault tolerance and etc. This article tries to introduce a decoupled, unit-testable, deployment-flexible, implementation-efficient and validation-flexible N-Tier architecture in .NET]]></description>
            <content:encoded><![CDATA[<p>Advantage of using N-Tier software architecture are scalability, security, fault tolerance and etc.&nbsp;This article tries to introduce a decoupled, unit-testable, deployment-flexible, implementation-efficient and validation-flexible N-Tier architecture in .NET</p><p><a href="http://www.codeproject.com/Articles/434282/A-N-Tier-Architecture-Sample-with-ASP-NET-MVC3-WCF" target="_blank" rel="noopener noreferrer">Continue reading&nbsp;→</a></p>]]></content:encoded>
            <category>Asp.Net</category>
        </item>
        <item>
            <title><![CDATA[Microsoft uses new logo after 25 years]]></title>
            <link>https://nagvbt.github.io/blog/2012/08/24/microsoft-uses-new-logo-after-25-years</link>
            <guid>https://nagvbt.github.io/blog/2012/08/24/microsoft-uses-new-logo-after-25-years</guid>
            <pubDate>Fri, 24 Aug 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Microsoft new logo]]></description>
            <content:encoded><![CDATA[<p>Microsoft new logo</p><p><img loading="lazy" src="/assets/images/6864.Microsoft-Logo-5190affa40a87c882b1d48ee2b10d897.png" width="22" height="14" class="img_ev3q"></p><p>[<!-- -->youtube=<a href="http://www.youtube.com/watch?v=OzkZWvAJUr0&amp;feature=player_embedded" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?v=OzkZWvAJUr0&amp;feature=player<!-- -->_<!-- -->embedded</a>]</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Double Robotics - An iPad head Robot with videoconferencing]]></title>
            <link>https://nagvbt.github.io/blog/2012/08/22/double-robotics-an-ipad-head-robot-with-videoconferencing</link>
            <guid>https://nagvbt.github.io/blog/2012/08/22/double-robotics-an-ipad-head-robot-with-videoconferencing</guid>
            <pubDate>Wed, 22 Aug 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Double Robotics is an low-cost telepresence robot which can be used in education, museums, health care, Offices, Retail stores, Families.]]></description>
            <content:encoded><![CDATA[<p>Double Robotics is an low-cost telepresence robot which can be used in education, museums, health care, Offices, Retail stores, Families.</p><p>"Double allows you to move around and join people in&nbsp;<em>any</em>&nbsp;location, so you can participate in the conversations that happen in the lunch room or at the water fountain"&nbsp;Double Robotics said on its website&nbsp;<a href="http://www.doublerobotics.com/" target="_blank" rel="noopener noreferrer">www.doublerobotics.com</a>.</p><p>"Double" that consists of a robotic, stripped-down Segway-like contraption with wheels, battery, iPad stand, and holder. Once the iPad is connected to the Double, the robot can be controlled remotely by someone using an app on another&nbsp;<a href="http://reviews.cnet.com/ipad-3/" target="_blank" rel="noopener noreferrer">iPad</a>, allowing that person to move around their virtual location.</p><p><strong>PRICE</strong>:&nbsp;$1,999 price tag, though that's a savings of $500 on the original retail price of $2,499.</p><p>[<!-- -->youtube=<a href="http://www.youtube.com/watch?v=yFMu3llAnaM" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?v=yFMu3llAnaM</a>]</p>]]></content:encoded>
            <category>Technology</category>
        </item>
        <item>
            <title><![CDATA[Visual Studio 2008, 2010 Auto Uninstall Tools]]></title>
            <link>https://nagvbt.github.io/blog/2012/08/22/visual-studio-2008-2010-auto-uninstall-tools</link>
            <guid>https://nagvbt.github.io/blog/2012/08/22/visual-studio-2008-2010-auto-uninstall-tools</guid>
            <pubDate>Wed, 22 Aug 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[If you’ve any problems in uninstalling Visual Studio 2008, 2010 from Add/ Remove programs in XP or from Programs and features in Windows  7 you can use Microsoft Visual Studio 2008 Auto uninstall utility to remove Visual Studio 2008 and Visual Studio 2010 Auto uninstall utility to remove Visual Studio 2010 editions from your Computer .]]></description>
            <content:encoded><![CDATA[<p>If you’ve any problems in&nbsp;<strong>uninstalling Visual Studio 2008, 2010</strong>&nbsp;from Add/ Remove programs in XP or from Programs and features in Windows&nbsp; 7 you can use&nbsp;<strong>Microsoft Visual Studio 2008 Auto uninstall utility</strong>&nbsp;to remove Visual Studio 2008 and&nbsp;<strong>Visual Studio 2010 Auto uninstall utility</strong>&nbsp;to remove Visual Studio 2010&nbsp;editions from your Computer .</p><h1>1<!-- -->.<!-- --> Microsoft Visual Studio 2008&nbsp;Auto Uninstall Tool</h1><p><img loading="lazy" src="/assets/images/06fed-uninstall1-1996fe03f88763ccde172f90908cc3f3.jpg" width="320" height="265" class="img_ev3q"></p><p><strong><a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-components-postattachments/00-09-90-82-99/UninstallTool.exe" target="_blank" rel="noopener noreferrer">Download here</a></strong></p><p><strong>2<!-- -->.<!-- --> Microsoft Visual Studio 2010 Auto Uninstall Tool</strong></p><p><img loading="lazy" src="/assets/images/Visual-Studio-2010-Uninstall-Utility_thumb-92591eaf953c91dd951c08a68825c1a2.png" width="240" height="224" class="img_ev3q"></p><p><strong><a href="http://archive.msdn.microsoft.com/vs2010uninstall/Release/ProjectReleases.aspx?ReleaseId=4321" target="_blank" rel="noopener noreferrer">Download here</a></strong></p>]]></content:encoded>
            <category>Tools</category>
            <category>visual-studio</category>
        </item>
        <item>
            <title><![CDATA[What is the output of the program in C ?]]></title>
            <link>https://nagvbt.github.io/blog/2012/07/30/what-is-the-output-of-the-program-in-c</link>
            <guid>https://nagvbt.github.io/blog/2012/07/30/what-is-the-output-of-the-program-in-c</guid>
            <pubDate>Mon, 30 Jul 2012 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">&lt;iostream&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">using namespace std</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> a</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">b</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> b </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> a</span><span class="token operator" style="color:#393A34">++</span><span class="token operator" style="color:#393A34">+</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> cout</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain">b</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token string" style="color:#e3116c">" "</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain">a</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token string" style="color:#e3116c">"n"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OUTPUT </span><span class="token number" style="color:#36acaa">20</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">11</span><span class="token plain"> ```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>c</category>
        </item>
        <item>
            <title><![CDATA[WPF - Simple App]]></title>
            <link>https://nagvbt.github.io/blog/2012/07/26/wpf-simpleap</link>
            <guid>https://nagvbt.github.io/blog/2012/07/26/wpf-simpleap</guid>
            <pubDate>Thu, 26 Jul 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Step by Step tutorial for creating Simple WPF Application]]></description>
            <content:encoded><![CDATA[<p><strong>Step by Step tutorial for creating Simple WPF Application</strong></p><ol><li>Open Visual Studio 2010</li><li>Go to ‘File’ Menu and select ‘New Project’</li><li>Select ‘WPF Application’ as shown below</li><li>Give the application name as “FirstWPFApp”</li><li>Visual studio generates two xaml files ( App.xaml , MainWindow.xaml) And corresponding code behind .cs files (App.xaml.cs, MainWindow.xaml.cs)</li><li>Drag and drop a Button from toolbox on to the Window and give names as ‘btnClickMe’ and Add an even to it by double click on the button.</li><li>Open MainWindow.xaml.cs in btnClickMe<!-- -->_<!-- -->Click event add MessageBox.Show("Hello World !!");</li><li>Compile and Build the project.</li></ol>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[ATLTutorial Step by Step (DLL or Inproc Server)]]></title>
            <link>https://nagvbt.github.io/blog/2012/07/08/atltutorial-step-by-step-dll-or-inproc-server</link>
            <guid>https://nagvbt.github.io/blog/2012/07/08/atltutorial-step-by-step-dll-or-inproc-server</guid>
            <pubDate>Sun, 08 Jul 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[In this tutorial we will be creating]]></description>
            <content:encoded><![CDATA[<p>In this tutorial we will be creating</p><ol><li><p>MathComp which is a DLL or Inproc server and exposes the Add and Sub functions.</p></li><li><p>An MFC Dialog Based Application which acts like a Client for MathComp</p><p><strong>Steps for creating MathComp</strong></p></li><li><p>Open VS 2008</p></li><li><p>File-&gt;NewProject Click OK -&gt; Click Next <strong>Select Server type:</strong> as DLL <strong>Select Addition options:</strong> as 'Allow merging of proxy/stub code' and click Finish</p><p><strong>3<!-- -->.<!-- --> Add Component Class</strong></p><p>Select 'ATL simple Object'</p></li></ol><p>Enter Short name: "CMath" to add the component class -&gt; Click 'Finish'</p><p><strong>4<!-- -->.<!-- --> Add a Method to ICMath Interface</strong></p><p>The classes created are shown below in the class diagram.</p><p><strong>CCMath</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// CCMath</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class ATL\_NO\_VTABLE CCMath </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       public CComObjectRootEx</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">CComSingleThreadModel</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       public CComCoClass</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">CCMath</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">CLSID\_CMath</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       public IDispatchImpl</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">ICMath</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">IID\_ICMath</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">LIBID\_MathCompLib</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">wMajor </span><span class="token operator" style="color:#393A34">=</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">wMinor </span><span class="token operator" style="color:#393A34">=</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">CCMath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DECLARE\_REGISTRY\</span><span class="token function" style="color:#d73a49">_RESOURCEID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">IDR\_CMATH</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BEGIN\_COM\</span><span class="token function" style="color:#d73a49">_MAP</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CCMath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      COM\_INTERFACE\</span><span class="token function" style="color:#d73a49">_ENTRY</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ICMath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      COM\_INTERFACE\</span><span class="token function" style="color:#d73a49">_ENTRY</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">IDispatch</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">END\_COM\</span><span class="token function" style="color:#d73a49">_MAP</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DECLARE\_PROTECT\_FINAL\</span><span class="token function" style="color:#d73a49">_CONSTRUCT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      HRESULT </span><span class="token function" style="color:#d73a49">FinalConstruct</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> S\_OK</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">FinalRelease</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">STDMETHOD</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Add</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">DOUBLE i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DOUBLE j</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DOUBLE\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">STDMETHOD</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Sub</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">DOUBLE i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DOUBLE j</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DOUBLE\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OBJECT\_ENTRY\</span><span class="token function" style="color:#d73a49">_AUTO</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> \_\</span><span class="token function" style="color:#d73a49">_uuidof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CMath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> CCMath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CMath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">h</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// CCMath</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">STDMETHODIMP CCMath</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">DOUBLE i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DOUBLE j</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DOUBLE\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> j</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> S\_OK</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">STDMETHODIMP CCMath</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">Sub</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">DOUBLE i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DOUBLE j</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DOUBLE\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> j</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> S\_OK</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>MathComp.idl</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// MathComp.idl : IDL source for MathComp</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// This file will be processed by the MIDL tool to</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// produce the type library (MathComp.tlb) and marshalling code.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import </span><span class="token string" style="color:#e3116c">"oaidl.idl"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import </span><span class="token string" style="color:#e3116c">"ocidl.idl"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       object </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token function" style="color:#d73a49">uuid</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">F3BDE3CF</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">884</span><span class="token plain">A</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">461</span><span class="token plain">A</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">A377</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1F</span><span class="token number" style="color:#36acaa">96</span><span class="token plain">A72239B0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       dual </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       nonextensible </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token function" style="color:#d73a49">helpstring</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"ICMath Interface"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       pointer\</span><span class="token function" style="color:#d73a49">_default</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">unique </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">interface ICMath </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> IDispatch</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">id</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">helpstring</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"method Add"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> HRESULT </span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> in \</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> DOUBLE i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">in \</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> DOUBLE j</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">out \</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> DOUBLE\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">id</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">helpstring</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"method Sub"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> HRESULT </span><span class="token function" style="color:#d73a49">Sub</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> in \</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> DOUBLE i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">in \</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> DOUBLE j</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">out \</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> DOUBLE\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token function" style="color:#d73a49">uuid</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">44FF</span><span class="token number" style="color:#36acaa">4</span><span class="token plain">D78</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">6</span><span class="token plain">AAD</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">4</span><span class="token plain">D2B</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">9150</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">DEBCCE79D8E0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token function" style="color:#d73a49">version</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token function" style="color:#d73a49">helpstring</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"MathComp 1.0 Type Library"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">library MathCompLib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token function" style="color:#d73a49">importlib</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"stdole2.tlb"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token function" style="color:#d73a49">uuid</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token plain">A8C8314</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">6</span><span class="token plain">C03</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">4</span><span class="token plain">AF7</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">96</span><span class="token plain">A1</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">9</span><span class="token plain">D6052A89363</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token function" style="color:#d73a49">helpstring</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"CMath Class"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       coclass CMath</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">default</span><span class="token plain"> \</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> interface ICMath</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>NOTE: Other classes are not shown here please Download the source for complete code.</p><p><strong>Steps for creating MFC Client</strong></p><p>1<!-- -->.<!-- --> Create an MFC Dialog based application</p><p>2<!-- -->.<!-- --> Design the Dialog as shown below</p><p>3<!-- -->.<!-- --> Add a Add button Handler (OnBnClickedButtonAdd) 4. Inside Add button handler add the below code</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">//Step1: import include .tlb file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">import</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"..MathCompMathComp.tlb"</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property expression" style="color:#36acaa">no\_namespace</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> CCMathClientDlg</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">OnBnClickedButtonAdd</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">//Step2/////////////// Initialize the COM libraries ///////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token function" style="color:#d73a49">CoInitialize</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">//Step3/////////////////////////Retriving CLSID from ProgID///////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      CLSID clsid</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">CLSIDFromProgID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">OLESTR</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"MathComp.CMath.1"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">clsid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// will be in CMath.rgs file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">//Step4/////////////////////////////Creating instance of server///////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ICMath \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">pICMath</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      HRESULT hr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CoCreateInstance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                     clsid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">             </span><span class="token comment" style="color:#999988;font-style:italic">//The CLSID associated with the data and code that will be used to create the object.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                     </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">              </span><span class="token comment" style="color:#999988;font-style:italic">//If NULL, indicates that the object is not being created as part of an aggregate</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                     CLSCTX\_LOCAL\_SERVER</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">CLSCTX\_INPROC\_SERVER</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//ontext in which the code that manages the newly created object will run</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                     \_\</span><span class="token function" style="color:#d73a49">_uuidof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ICMath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//riid: A reference to the identifier of the interface to be used to communicate with the object.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                     </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LPVOID\</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">pICMath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//\*ppv: Address of pointer variable that receives the interface pointer requested in riid.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                       </span><span class="token comment" style="color:#999988;font-style:italic">//Upon successful return, \*ppv contains the requested interface pointer. Upon failure, \*ppv contains NULL.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">FAILED</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">AfxMessageBox</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">\</span><span class="token function" style="color:#d73a49">_T</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"ICMath Failed"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">//Step5/////////////////////////////Using COM Component//////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">UpdateData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TRUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">double</span><span class="token plain"> res </span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pICMath</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m\_i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> m\_j</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">res</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      m\_Result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pICMath</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Release</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// To avoid memory leak</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pICMath </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">//Step6////////////////////////////Uninit'ializing the COM libraries//////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">CoUninitialize</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">UpdateData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">FALSE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>atl</category>
        </item>
        <item>
            <title><![CDATA[Basics of ActiveX Controls]]></title>
            <link>https://nagvbt.github.io/blog/2012/07/08/basics-of-activex-controls</link>
            <guid>https://nagvbt.github.io/blog/2012/07/08/basics-of-activex-controls</guid>
            <pubDate>Sun, 08 Jul 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Definition: ActiveX controls are COM components which are self-registering and Implements standard interfaces that deal specifically with GUI-based tasks such as rendering, sizing, activation, and property persistence.]]></description>
            <content:encoded><![CDATA[<p><strong>Definition:</strong>&nbsp;ActiveX controls are COM components which are self-registering and Implements standard interfaces that deal specifically with GUI-based tasks such as rendering, sizing, activation, and property persistence.</p><p>An ActiveX control is anything you might see in the Toolbox of Visual studio (i.e. EditBox, combobox e.t.c) we can even use the Activex controls in web pages using</p><p><strong>Connectable Object</strong></p><p><em>Connectable Object:</em> is a COM Component or object that defines and uses an outgoing interface.</p><p><em>Sink</em>: A client that implements the outgoing interface of a component is called sink.</p><p><strong>Control Container:</strong> An application (Dialog or View ) that houses ActiveX control is called the control container. The control container communicates with a ActiveX control via methods and properties of a control.</p><p><strong>ActiveX Control Properties:</strong> There are two types of properties 1.Stock Properties 2.Custom properties</p><p>1.Stock Properties Stack properties are common properties (Caption, foreground and background colors) that most controls expose. The COleControl data members provides stock properties implementation and also provides notification functions for the stock properties.</p><p>2.Custom properties Custom properties are the properties which are specific to the control. There are four different ways to implement Custom properties. a. Member variable: b. Member variable with notification function: c. Get/Set methods d. Parameterized (property array)</p><p><strong>ActiveX Control Methods</strong> There are two types of methods 1.Stock methods 2.Custom methods</p><p>1.Stock methods The COleControl provides the stock methods implementation. there are only two stock properties DoClick() - fires an event from the control Refresh() - updates the control appearence</p><p>2.Custom methods Custom methods are the methods which are specific to the control.</p><p><strong>ActiveX Control Events</strong> A member function of an outgoing interface is called an event. An activeX controlcan notify the containerof a state change using events. There are two types of Events 1.Stock Events 2.Custom Events</p><p>1.Stock Events The COleControl provides the common stock Events implementation like mouse button clicks and keyboard input.</p><p>2.Custom Events Custom Events are the events which are specific to the control.</p>]]></content:encoded>
            <category>atl</category>
        </item>
        <item>
            <title><![CDATA[Basics of ATL]]></title>
            <link>https://nagvbt.github.io/blog/2012/07/08/basics-of-atl</link>
            <guid>https://nagvbt.github.io/blog/2012/07/08/basics-of-atl</guid>
            <pubDate>Sun, 08 Jul 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[What you will Learn Here…]]></description>
            <content:encoded><![CDATA[<p><strong>What you will Learn Here…</strong></p><ol><li>Definition of ATL</li><li>ATL Features</li><li>Basic Definitions of ATL</li><li>ATL's Component Class Hierarchy</li><li>FAQ</li></ol><p><strong>1<!-- -->.<!-- --> Definition of ATL</strong> The Active Template Library (ATL) is a set of template-based C++ classes that allows to create small, fast Component Object Model (COM) objects.</p><p><strong>2<!-- -->.<!-- --> ATL Features</strong> 1.ATL provides two types of wizards a. AppWizard: AppWizard creates the initial ATL project. b. Object Wizard: Object Wizard produces code for basic COM components.</p><ol start="2"><li>Built-in support for basic COM functionality such as IUnknown, class factories, IDispatch (automation), dual interfaces and self-registration.</li><li>Inbuilt Support for Microsoft’s Interface Definition Language (IDL) which provides marshaling support for custom Vtable interfaces as well as component self-description through a type library.</li><li>Aggregation of objects and Automation support</li><li>Support for developing ActiveX controls.</li></ol><p><strong>3<!-- -->.<!-- --> Basic Definitions of ATL</strong> 1. <em><strong>Marshaling:</strong></em> Marshaling is the process of transferring function arguments and return values across process and machine boundaries.</p><ol start="2"><li>The <strong><em>proxy/stub</em></strong> DLL implements standard marshaling for each of the component interfaces.</li></ol><p>COM will use the IPC to communicate between client and server.</p><ul><li>LPC is used when both reside on the same machine.
</li><li>RPC is used in a distributed networked&nbsp;environment
</li></ul><p><strong>4<!-- -->.<!-- --> ATL's Component Class Hierarchy</strong></p><p>ATL never Creates the instance of the CoClass Directly. Instead ATL uses CComObject template class with 'CMathComp' object type as a parameter to create our Object.</p><p><em>CComObject <!-- -->*<!-- --> pMath = new ComObject</em></p><p><strong><em>CComObjectRootEx</em></strong> - Handles object reference count management. <em><strong>CComCoClass</strong></em> - Provides methods for creating instances of a class and obtaining its properties it has createInstance() method which creates the instance of a COM Object through ClassFactory <em><strong>CComObject</strong></em> - Implements IUnknown for an COM object.</p><p><strong>5<!-- -->.<!-- --> FAQ</strong></p><ol><li>What is ATL ? check - 1. Definition of ATL</li><li>What is MIDL ? check - 2. ATL Features - 3 point</li><li>What are the featurs of ATL ? check - 2. ATL Feature</li><li>What is Marshiling ? check - 3. Basic Definitions of ATL - 1 point</li><li>Explain about&nbsp;ATL's Class Hierarchy? check - 4.ATL's Component Class Hierarchy</li></ol>]]></content:encoded>
            <category>atl</category>
        </item>
        <item>
            <title><![CDATA[C-Pointers What is the output]]></title>
            <link>https://nagvbt.github.io/blog/2012/07/08/c-pointers-what-is-the-output</link>
            <guid>https://nagvbt.github.io/blog/2012/07/08/c-pointers-what-is-the-output</guid>
            <pubDate>Sun, 08 Jul 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[FAQ-1]]></description>
            <content:encoded><![CDATA[<p><strong>FAQ-1</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> _p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">91</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//compilation error </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%d n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">_ p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%d n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  OUTPUT</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Does not compile error C2440</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token char">'initializing'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> cannot convert from </span><span class="token char">'int'</span><span class="token plain"> to </span><span class="token char">'int \*'</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>FAQ-2</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">91</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%d n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%d n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OUTPUT</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">91</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1245024</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>FAQ-3</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">" _p = %d n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">_ p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">" p = %d n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">" &amp;p = %d n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">" _(&amp;p) = %d n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token function" style="color:#d73a49">_</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">" _(_(&amp;p)) = %d n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">_</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OUTPUT</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">91</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1245024</span><span class="token plain"> _p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">91</span><span class="token plain"> p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1245024</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1245012</span><span class="token plain">_ </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1245024</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">_</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">91</span><span class="token plain"> ```</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">FAQ</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">4</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```c </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> _p</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"p = %d,_ p = %d, i = %d"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> _p</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> OUTPUT p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1245012</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">_ p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"> ```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>c</category>
        </item>
        <item>
            <title><![CDATA[Find the length of the string in C]]></title>
            <link>https://nagvbt.github.io/blog/2012/07/08/find-the-length-of-the-string-in-c</link>
            <guid>https://nagvbt.github.io/blog/2012/07/08/find-the-length-of-the-string-in-c</guid>
            <pubDate>Sun, 08 Jul 2012 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">char</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> website </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"www.nagvbt.blogspot.com"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> len </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> str\</span><span class="token function" style="color:#d73a49">_len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">website</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"length = %d n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> len</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OUTPUT length </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">17</span><span class="token plain"> ```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>C</category>
        </item>
        <item>
            <title><![CDATA[WPF Architecture]]></title>
            <link>https://nagvbt.github.io/blog/2012/07/01/wpf-architecture</link>
            <guid>https://nagvbt.github.io/blog/2012/07/01/wpf-architecture</guid>
            <pubDate>Sun, 01 Jul 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[The major code portions of WPF are.]]></description>
            <content:encoded><![CDATA[<p>The major code portions of WPF are.</p><p>PresentationFramework, PresentationCore, and milcore WPF.&nbsp;PresentationFramework, PresentationCore are managed components but only milcore is an unmanaged component Milcore is developed in unmanaged code in order to enable tight integration with DirectX. All display in WPF is done through the DirectX engine, allowing for efficient hardware and software rendering.</p><p><strong>1<!-- -->.<!-- --> Presentation Framework</strong></p><p>Most of the important WPF elements are in Presentation Framework. &nbsp;Presentation Framework&nbsp;Provides high-level services like layout, data binding, command handling.</p><p><strong>2<!-- -->.<!-- --> Presentation Core</strong></p><p>Presentation&nbsp;provides .NET API that uses rendering services for the MIL. During graphics programming we work with Core API.</p><p><strong>3<!-- -->.<!-- --> Milcore</strong></p><p>The composition engine in milcore (Media Integration) is extremely performance sensitive. MIL takes Bitmaps, Vectors, and media render them to the DirectX</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[WPF Basics]]></title>
            <link>https://nagvbt.github.io/blog/2012/07/01/wpf-basics</link>
            <guid>https://nagvbt.github.io/blog/2012/07/01/wpf-basics</guid>
            <pubDate>Sun, 01 Jul 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Windows Presentation Foundation is the successor to Windows Forms for Microsoft Desktop Application development. WPF uses XAML to create visible User Interface (UI) elements like (buttons, listboxes, editboxes, etc).]]></description>
            <content:encoded><![CDATA[<p><strong>W</strong>indows <strong>P</strong>resentation <strong>F</strong>oundation is the successor to Windows Forms for Microsoft Desktop Application development. WPF uses XAML to create visible User Interface (UI) elements like (buttons, listboxes, editboxes, etc).</p><p>WPF applications allows take advantage of the best attributes of diverse systems, such as DirectX (3-D and hardware acceleration), Adobe Flash (animation support), and HTML (declarative markup and easy deployment), styles, templates, documents and typograph.</p><h1>2<!-- -->.<!-- --> Advantages of WPF Applications:</h1><p>The advantages of WPF applications include:</p><ol><li><strong>Declarative programming</strong> – WPF uses Extensible Application Markup Language (XAML) declarative programming to define the layout of application objects and to represent 3-D models, among other things. This allows graphic designers to directly contribute to the look and feel of WPF applications.</li><li><strong>Tight multimedia integration</strong> –WPF provides consistent programming model to create -D graphics, video, speech, and rich document viewing.</li><li><strong>Resolution independence</strong> –WPF uses vector graphics to make the applications resolution-independent. WPF Applications can shrink or enlarge elements on the screen, independent of the screen’s resolution.</li><li><strong>Hardware acceleration</strong> – WPF is built on top of Direct3D, which offloads work to graphics processing units (GPUs) instead of central processor units (CPUs). This provides WPF applications with the benefit of hardware acceleration, permitting smoother graphics and enhanced performance.</li><li><strong>Rich composition and customization –</strong> WPF controls are easily customizable. We need not write any code to customize controls in very unique ways. WPF also lets you create skins for applications that have radically different looks.</li><li><strong>Easy deployment</strong> – WPF provides options for deploying traditional Windows applications (using Windows Installer or ClickOnce).</li><li><strong>Culturally aware controls</strong> – static text in controls and the return data for the String function are modified according to the culture and language specified by the end user's operating system.</li></ol><p><strong>3<!-- -->.<!-- --> WPF vs WinForms:</strong></p><p>WPF is also more suitable for applications with rich media content than Windows Forms applications. This includes applications using:</p><ol><li>Multimedia and animation with DirectX technology</li><li>HD video playback</li><li>XPS documentation for high quality printing</li><li>Control rotation (Windows Forms applications support text rotation only)</li></ol><p>WPF is also great if you need to create a skinned user interface, or if you need to bind to XML data, or dynamically load portions of a user interface from a Web service, or want to create a desktop application with a Web-like navigation style.</p><p>WPF stores its data more efficiently hence individual objects will be small, but there tend to be more objects in WPF than in WinForms .This would require more RAM than Windows Application.</p><p>CPU utilization will go up compared to WinForms&nbsp;&nbsp; WPF objects onscreen takes more CPU as normal WinForms rendering (again depending on the requirement). <strong>4<!-- -->.<!-- --> XAML - eXtensible Application Markup Language:</strong></p><p><strong>Definition:</strong> XAML (zammel) is an XML-based declarative markup. We can create visible User Interface (UI) elements like (buttons, listboxes, editboxes, etc) using XAML.</p><p>XAML files are XML files .xaml file name extension encoded as UTF-8.</p><p><strong>Example:</strong></p><p>C# Button&nbsp; Compile (Design-time) and Execute (Runtime) where as XAML Button Load, Parse,Render and Display</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[COM Threading Models / Apartment Model]]></title>
            <link>https://nagvbt.github.io/blog/2012/06/19/threading-modelsapartment-model</link>
            <guid>https://nagvbt.github.io/blog/2012/06/19/threading-modelsapartment-model</guid>
            <pubDate>Tue, 19 Jun 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Definition: Multithreading in COM is referred to as the apartment model in COM]]></description>
            <content:encoded><![CDATA[<p><strong>Definition</strong>: Multithreading in COM is referred to as the apartment model in COM</p><p><strong><em>Apartment</em></strong></p><p>The COM apartment is a conceptual entity that allows us to think about components and their clients in a logical way</p><p>• An apartment is not a thread, but a thread belongs to only one apartment. • An apartment is not an instance of a COM object, but each COM instance belongs to only one apartment. • A process can have one or more apartments, depending on its implementation. • Apartments are created or entered by calling the CoInitialize or CoInitializeEx function. Each thread that calls CoInitialize(0) or CoInitializeEx( 0, COINIT<!-- -->_<!-- -->APARTMENTTHREADED )</p><ol><li>STA (Single Threaded Apartment) : Only One thread can join this Apartment.</li><li>MTA (MultiThreaded Apartment): Multiple threads can join this Apartment.</li></ol><p><strong><em>Differences between STA and MTA</em></strong></p><table border="1" cellspacing="0" cellpadding="0"><tbody><tr><td valign="top" width="33"><strong>No</strong></td><td valign="top" width="515"><strong>Feature</strong></td><td valign="top" width="72"><strong>STA</strong></td><td valign="top" width="67"><strong>MTA</strong></td></tr><tr><td valign="top" width="33">1</td><td valign="top" width="515">Synchronization provided by COM</td><td valign="top" width="72">YES</td><td valign="top" width="67">NO</td></tr><tr><td valign="top" width="33">2</td><td valign="top" width="515">Uses Windows message queues</td><td valign="top" width="72">YES</td><td valign="top" width="67">NO</td></tr><tr><td valign="top" width="33">3</td><td valign="top" width="515">Can have multiple threads in an apartment</td><td valign="top" width="72">NO</td><td valign="top" width="67">YES</td></tr><tr><td valign="top" width="33">4</td><td valign="top" width="515">Must marshal interface pointers between the threads in the same apartment</td><td valign="top" width="72">N/A</td><td valign="top" width="67">YES</td></tr><tr><td valign="top" width="33">5</td><td valign="top" width="515">Must marshal interface pointers between apartments</td><td valign="top" width="72">YES</td><td valign="top" width="67">YES</td></tr><tr><td valign="top" width="33">6</td><td valign="top" width="515">Must call Coinitialize() in every thread that uses a COM Service</td><td valign="top" width="72">YES</td><td valign="top" width="67">YES</td></tr><tr><td valign="top" width="33">7</td><td valign="top" width="515">Perfomance</td><td valign="top" width="72">Slow</td><td valign="top" width="67">Fast</td></tr></tbody></table><p><strong>NOTE</strong>: ATL object wizard allows you to set the threading model. The values can be</p><table border="1" cellspacing="0" cellpadding="0"><tbody><tr><td valign="top" width="272">Threading Model</td><td valign="top" width="228">Description</td></tr><tr><td valign="top" width="272">Single / No Value</td><td valign="top" width="228">Object knows nothing about threads</td></tr><tr><td valign="top" width="272">Apartment</td><td valign="top" width="228">STA</td></tr><tr><td valign="top" width="272">Free</td><td valign="top" width="228">MTA</td></tr><tr><td valign="top" width="272">Both</td><td valign="top" width="228">Both STA &amp; MTA</td></tr></tbody></table><p><strong>Types of Apartments</strong></p>]]></content:encoded>
            <category>com</category>
        </item>
        <item>
            <title><![CDATA[COM Threading Model vs Win32/MFC Threads]]></title>
            <link>https://nagvbt.github.io/blog/2012/06/18/com-threading-model-vs-win32mfc-threads</link>
            <guid>https://nagvbt.github.io/blog/2012/06/18/com-threading-model-vs-win32mfc-threads</guid>
            <pubDate>Mon, 18 Jun 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[There are two types of win32/MFC threads.]]></description>
            <content:encoded><![CDATA[<p>There are two types of win32/MFC threads.</p><ol><li><strong>User-interface thread:</strong> these types of threads are associated with one or more windows. These threads have message loops that keep the window alive and responsive to the users input.</li><li><strong>Worker thread:</strong> these threads are associated with background processing and are not associated with a window. These types oh threads does not use message loops.</li></ol><p>NOTE: A single process can have multiple user interface threads, multiple worker threads.</p><h1>2 &nbsp; COM Threads</h1><p>COM uses same type of threads with different names.</p><ol><li><strong>Apartment threads (User Interface Thread):</strong> This thread owns the component it creates. COM synchronizes, all calls to the component. The component does not need to be threading safe. COM does all of the marshaling and synchronization.</li><li><strong>Free threads (Worker Thread):</strong> COM does not synchronize the calls. Ant thread can access the component. These are free to use. The component must be threading safe. Marshalling is not necessary and component’s job to synchronize.</li></ol><p>NOTE: One process can have single apartment or multiple apartments. In-proc server is example for single process with different apartments (server apartment, client apartment both are in same exe).</p><p>Out of-proc server is example for single process with single thread.</p>]]></content:encoded>
            <category>com</category>
        </item>
        <item>
            <title><![CDATA[Unit Testing Native C++ Applications with out “/clr” flag or fall back to 3rd party frameworks]]></title>
            <link>https://nagvbt.github.io/blog/2012/06/18/unit-testing-native-c-applications-with-out-e-clr-flag-or-fall-back-to-3rd-party-frameworks</link>
            <guid>https://nagvbt.github.io/blog/2012/06/18/unit-testing-native-c-applications-with-out-e-clr-flag-or-fall-back-to-3rd-party-frameworks</guid>
            <pubDate>Mon, 18 Jun 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Visual Studio 11 provides the ability to do Unit Testing Native C++ Applications with a new C++ unit testing framework shipping with VS 11.]]></description>
            <content:encoded><![CDATA[<p>Visual Studio 11 provides the ability to do&nbsp;Unit Testing Native C++ Applications with a new C++ unit testing framework shipping with VS 11.</p><p>So the C++ developers no longer need to use the “/clr” flag or fall back to 3rd party frameworks.</p><p>To learn more about native unit testing in Visual Studio 11, please visit&nbsp;<a href="http://aka.ms/vs11-unit-testing-native-code" target="_blank" rel="noopener noreferrer">MSDN</a>.</p>]]></content:encoded>
            <category>cpp</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[COM Containment and Aggregation]]></title>
            <link>https://nagvbt.github.io/blog/2012/06/17/com-containment-and-aggregation</link>
            <guid>https://nagvbt.github.io/blog/2012/06/17/com-containment-and-aggregation</guid>
            <pubDate>Sun, 17 Jun 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Containment and aggregation are techniques in which one component uses another component. Those two components are outer component, inner component. Outer component contains the inner component.]]></description>
            <content:encoded><![CDATA[<p>Containment and aggregation are techniques in which one component uses another component. Those two components are outer component, inner component. Outer component contains the inner component.</p><table border="1" cellspacing="0" cellpadding="0"><tbody><tr><td valign="top" width="343"><strong>Containment</strong></td><td valign="top" width="343"><strong>Aggregation</strong></td></tr><tr><td valign="top" width="343">Outer component re implement the interface say IY of inner component by forwarding calls to the inner component.</td><td valign="top" width="343">Outer component will not re implement the interface say IY of inner component. Instead the outer component passes the inner component interface pointer say IY directly to the client.</td></tr><tr><td valign="top" width="343">Outer component is client to inner component</td><td valign="top" width="343">Inner component will be directly used by the client</td></tr></tbody></table>]]></content:encoded>
            <category>com</category>
        </item>
        <item>
            <title><![CDATA[Attended Microsoft Developer Conference 2012 Hyderabad]]></title>
            <link>https://nagvbt.github.io/blog/2012/04/21/devcon2012</link>
            <guid>https://nagvbt.github.io/blog/2012/04/21/devcon2012</guid>
            <pubDate>Sat, 21 Apr 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Today (21-April-2012) I had attended the DevCon 2012 hosted at Microsoft's Gachibowli Campus.  DevCon is the event which concentrates on the latest technologies which are exclusively intended for .Net Developers.]]></description>
            <content:encoded><![CDATA[<p>Today (21-April-2012) I had attended the DevCon 2012 hosted at Microsoft's Gachibowli Campus. &nbsp;DevCon is the event which concentrates on the latest technologies which are exclusively intended for .Net Developers.</p><p><a href="http://mugh.net/devcon2012/index.html" target="_blank" rel="noopener noreferrer">devcon2012</a></p><p><strong>The sessions that I had attended:</strong></p><ol><li><p>Developing a Windows 8&nbsp;Metro Style Application using HTML5 &amp; JavaScript</p><ul><li>Pratap Ladhani Architect - Microsoft</li></ul></li><li><p>SQL Server 2012 code name Denali &amp; Programmability Enhancements</p><ul><li>Sandeep Kumar Mishra MPSIT Engineering - Microsoft IT</li></ul></li><li><p>The New Age Application with HTML 5 and Kendo UI</p><ul><li>Abhishek Kant Country Manager - Telerik, India</li><li>Svetlina Anti Software Developer - Telerik</li></ul></li><li><p>Conceptual Framework of Data Binding in XAML</p><ul><li>Miroslav Nedyalkov Senior Software Developer - Telerik</li></ul></li></ol><p><strong>Interacted with:</strong> Harish Ranganthan who is a 'Microsft Developer Evangelist' thanks to Harish as he given me a chance to explore his Windows 8 slate</p><ul><li>Abhijit Jana Microsoft Associate Consultant
</li><li>Shudhakar Microsoft
</li><li>Shravan Kumar Kasagoni Microsoft MVP</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[Part-3: Comments, Methods, Class, objects] C++, C#, Java Syntax Differences]]></title>
            <link>https://nagvbt.github.io/blog/2012/04/12/synaxpart</link>
            <guid>https://nagvbt.github.io/blog/2012/04/12/synaxpart</guid>
            <pubDate>Thu, 12 Apr 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Comments Same for C++, C#, Java]]></description>
            <content:encoded><![CDATA[<p><strong>Comments</strong> Same for C++, C#, Java</p><ol><li>Single line comments &nbsp;- //</li><li>Multi line comments</li></ol><p>/ <em>This is a a multiline comment</em> /</p><p><strong>Method/Function declarations</strong></p><p>Same, except that in C# and in Java, function must always be part of a class, and must prefix with access specifier - public/private/protected</p><p>check main function for <a href="http://nagvbt.blogspot.com/2012/04/13/syntaxpart/" target="_blank" rel="noopener noreferrer">reference</a> </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="class-declarations">Class declarations<a href="#class-declarations" class="hash-link" aria-label="Direct link to Class declarations" title="Direct link to Class declarations">​</a></h2><p>Same&nbsp;but c# and Java does not require a semicolon after closing bracket '}'</p><p>C++</p><p><code>c class myMath { //Methods public: int Add(int i, int j) { return i + j; } }; </code></p><p>C#/Java</p><p><code>c class myMath { //Methods public int Add(int i, int j) { return i + j; } } </code></p><p><strong>Object declaration/creation</strong> <strong>C++</strong></p><p>Object creation on Stack</p><p><code>c myMath obj; //on stack int result = obj.Add(1,2); </code></p><p>Object creation on Heap</p><p><code>c myMath \*pobj = new myMath(); //on heap int result = obj-&gt;Add(1,2); delete pobj; </code></p><p><strong>Java/C#</strong></p><p><code>c myMath obj = new myMath(); int result = obj.Add(1,2); </code></p>]]></content:encoded>
            <category>cpp</category>
            <category>csharp</category>
        </item>
        <item>
            <title><![CDATA[[Part-2: Basic Input/Output] C++, C#, Java Syntax Differences]]></title>
            <link>https://nagvbt.github.io/blog/2012/04/12/syntaxpar2</link>
            <guid>https://nagvbt.github.io/blog/2012/04/12/syntaxpar2</guid>
            <pubDate>Thu, 12 Apr 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Using the standard input and output library, we will be able to interact with the user by printing messages on the screen and getting the user's input from the keyboard.]]></description>
            <content:encoded><![CDATA[<p>Using the standard input and output library, we will be able to interact with the user by printing messages on the screen and getting the user's input from the keyboard.</p><p><strong>1<!-- -->.<!-- --> C++</strong> Input &nbsp; &nbsp;- cout&gt;&gt; Output - cin&lt;&lt;</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Print Greetings Program</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Basic Input/Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">PrintGreeting</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">char</span><span class="token plain"> name\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token string" style="color:#e3116c">"Hello "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> name </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">endl</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> argc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">char</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> argv\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">char</span><span class="token plain"> name\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">100</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token string" style="color:#e3116c">"Enter Your Name:"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//cout -&amp;gt; Standard Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cin</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">//cin  -&amp;gt; Standard Input </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">PrintGreeting</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> OUT PUT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter Your Name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">nagvbt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Hello nagvbt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>2<!-- -->.<!-- --> C#</strong></p><p>Input &nbsp; &nbsp;-&nbsp;Console.WriteLine() Output -&nbsp;Console.ReadLine()</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Print Greetings Program</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Basic Input/Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">namespace CSharpSample</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    class Program</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">PrintGreeting</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">char</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           Console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WriteLine</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Hello "</span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">string\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">char</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WriteLine</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Enter Your Name:"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//Console.WriteLine() -&amp;gt; Standard Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            string sName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ReadLine</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">     </span><span class="token comment" style="color:#999988;font-style:italic">//Console.ReadLine()  -&amp;gt; Standard Input</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> sName</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ToCharArray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">PrintGreeting</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> OUTPUT \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter Your Name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Nag VBT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Hello Nag VBT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> \</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>3<!-- -->.<!-- --> Java</strong></p><p>Input &nbsp; &nbsp;- System.out.println() Output - System.in.read()</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import java</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">io</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">IOException</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Program</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">PrintGreeting</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">char</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Hello "</span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">String\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">char</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Enter Your Name:"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//System.out.println -&amp;gt; Standard Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String sName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        try</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tmp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">in</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">read</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token char">'n'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// System.in.read   -&amp;gt; Standard Input</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token keyword" style="color:#00009f">char</span><span class="token plain"> c </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">char</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          sName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> sName </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">IOException e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">printStackTrace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> sName</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toCharArray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">PrintGreeting</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> OUTPUT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter Your Name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">Nag VBT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Hello Nag VBT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>cpp</category>
            <category>csharp</category>
        </item>
        <item>
            <title><![CDATA[[Part-1: Main Function] C++, C#, Java Syntax Differences]]></title>
            <link>https://nagvbt.github.io/blog/2012/04/12/syntaxpart</link>
            <guid>https://nagvbt.github.io/blog/2012/04/12/syntaxpart</guid>
            <pubDate>Thu, 12 Apr 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[1\. C++ Main function with out any arguments]]></description>
            <content:encoded><![CDATA[<p><strong>1<!-- -->.<!-- --> C++</strong> Main function with out any arguments</p><p><code>c void main() { cout&lt;&lt;"Hello World !!!"; } </code></p><p>Main function with commandline Arguments <code>c int main(int argc, char\* argv\[\]) { cout&lt;&lt;"Hello World !!!"; return 1; } </code> <strong>2<!-- -->.<!-- --> C#</strong> Main function with out any arguments <code>cs using System; namespace CSharpSample { class Program { static void Main() { Console.WriteLine("Hello World !!!"); } } } </code> Main function with commandline Arguments <code>cs using System; namespace CSharpSample { class Program { static int Main(string\[\] args) { Console.WriteLine("Hello World !!!"); return 1; } } } </code> <strong>3<!-- -->.<!-- --> Java</strong> Main function with out any arguments - Not possible Compilation error java.lang.NoSuchMethodError: main Exception in thread "main" Main function with commandline Arguments <!-- -->[<!-- -->sourcecode language="java"<!-- -->]<!-- --> public class Program { public static void main(String args<!-- -->[<!-- -->]<!-- -->) { System.out.println( "Hello, World !!!" ); } } ```</p>]]></content:encoded>
            <category>cpp</category>
            <category>csharp</category>
        </item>
        <item>
            <title><![CDATA['Factory Method' Design Pattern using simple program]]></title>
            <link>https://nagvbt.github.io/blog/2012/04/06/factorymetho</link>
            <guid>https://nagvbt.github.io/blog/2012/04/06/factorymetho</guid>
            <pubDate>Fri, 06 Apr 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Definition:]]></description>
            <content:encoded><![CDATA[<p><strong>Definition:</strong></p><p>Creates an instance of several derived classes. or Define an interface for creating an object, but let subclasses decide which class to instantiate. Factory Method lets a class defer instantiation to subclasses.</p><p><strong>Program:</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"iostream"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">using namespace std</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Product</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class ConcreteProductA </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> public Product</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token string" style="color:#e3116c">"ConcreteProductA"</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class ConcreteProductB </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> public Product</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token string" style="color:#e3116c">"ConcreteProductB"</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Creator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual Product\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">FactoryMethod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class ConcreteCreatorA </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> public Creator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ConcreteCreatorA</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual Product\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">FactoryMethod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">ConcreteProductA</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class ConcreteCreatorB </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> public Creator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual Product\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">FactoryMethod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">ConcreteProductB</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Creator\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> creators\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  creators\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain">  new </span><span class="token function" style="color:#d73a49">ConcreteCreatorA</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  creators\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain">  new </span><span class="token function" style="color:#d73a49">ConcreteCreatorB</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">     Product\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> product </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> creators\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">FactoryMethod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token string" style="color:#e3116c">"Created "</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">getchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OUT PUT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">-</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Created</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ConcreteProductA</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Created</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ConcreteProductB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>cpp</category>
            <category>Design Patterns</category>
        </item>
        <item>
            <title><![CDATA['Singleton' Design Pattern using simple program]]></title>
            <link>https://nagvbt.github.io/blog/2012/04/06/singleton-design-pattern-using-simple-program</link>
            <guid>https://nagvbt.github.io/blog/2012/04/06/singleton-design-pattern-using-simple-program</guid>
            <pubDate>Fri, 06 Apr 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Definition: Ensure a class only has one instance and provide a global point of access to it.]]></description>
            <content:encoded><![CDATA[<p><strong>Definition:</strong> Ensure a class only has one instance and provide a global point of access to it.</p><p><strong>Program:</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"iostream"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">using namespace std</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Singleton</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">private</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> Singleton\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> instance</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">Singleton</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> Singleton\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Instance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">instance </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            instance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">Singleton</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> instance</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token string" style="color:#e3116c">"Singleton Class"</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">endl</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Singleton\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> Singleton</span><span class="token operator" style="color:#393A34">::</span><span class="token plain">instance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Singleton\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> obj1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Singleton</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">Instance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    obj1</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Singleton\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> obj2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Singleton</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">Instance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    obj2</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">getchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OUT PUT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">-</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Singleton Class</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Singleton Class</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>cpp</category>
            <category>Design Patterns</category>
        </item>
        <item>
            <title><![CDATA[‘AbstractFactory’ Design Pattern using simple program]]></title>
            <link>https://nagvbt.github.io/blog/2012/04/04/abstractfactory-designpatter</link>
            <guid>https://nagvbt.github.io/blog/2012/04/04/abstractfactory-designpatter</guid>
            <pubDate>Wed, 04 Apr 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Definition: Provide an interface for creating families of related or dependent objects without specifying their concrete classes.]]></description>
            <content:encoded><![CDATA[<p><strong>Definition:</strong> Provide an interface for creating families of related or dependent objects without specifying their concrete classes.</p><p><strong>Program:</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"iostream"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">using namespace std</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Abstract Factory pattern</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class AbstractProductA</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  virtual </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class AbstractProductB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  virtual </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class AbstractFactory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> virtual AbstractProductA\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CreateProductA</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> virtual AbstractProductB\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CreateProductB</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class ProductA1 </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> public AbstractProductA</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  virtual </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token string" style="color:#e3116c">"\[ProductA1\] Show"</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class ProductB1 </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> public AbstractProductB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  virtual </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token string" style="color:#e3116c">"\[ProductB1\] Show"</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class ProductA2 </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> public AbstractProductA</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  virtual </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token string" style="color:#e3116c">"\[ProductA2\] Show"</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class ProductB2 </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> public AbstractProductB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  virtual </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token string" style="color:#e3116c">"\[ProductB2\] Show"</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class ConcreteFactory1 </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> public AbstractFactory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual AbstractProductA\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CreateProductA</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">ProductA1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual AbstractProductB\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CreateProductB</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">ProductB1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class ConcreteFactory2 </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> public AbstractFactory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual AbstractProductA\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CreateProductA</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">ProductA2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual AbstractProductB\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CreateProductB</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">ProductB2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Client</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">private</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  AbstractProductA\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> \_abstractProductA</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  AbstractProductB\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> \_abstractProductB</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">Client</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">AbstractFactory\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> factory</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \_abstractProductB </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> factory</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">CreateProductB</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \_abstractProductA </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> factory</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">CreateProductA</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \_abstractProductA</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \_abstractProductB</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      delete \_abstractProductA</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      delete \_abstractProductB</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Abstract factory #1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  AbstractFactory\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> factory1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">ConcreteFactory1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Client\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> client1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">Client</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">factory1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  client1</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  delete factory1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  delete client1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Abstract factory #2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  AbstractFactory\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> factory2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">ConcreteFactory2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Client\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> client2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">Client</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">factory2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  client2</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  delete factory2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  delete client2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">getchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OUT PUT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">-</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">ProductA1\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Show</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">ProductB1\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Show</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">ProductA2\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Show</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">ProductB2\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Show</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>cpp</category>
            <category>Design Patterns</category>
        </item>
        <item>
            <title><![CDATA[Simple LinkedList program in C++]]></title>
            <link>https://nagvbt.github.io/blog/2012/04/04/linkedlist</link>
            <guid>https://nagvbt.github.io/blog/2012/04/04/linkedlist</guid>
            <pubDate>Wed, 04 Apr 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Definition:]]></description>
            <content:encoded><![CDATA[<p><strong>Definition:</strong></p><p>A linked list is a data structure that consists of a sequence of data records such that in each record there is a field that contains a reference (i.e., a link) to the next record in the sequence.</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"stdafx.h"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"iostream"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">using namespace std</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class LinkList</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">private</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token class-name">Node</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Node\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> link</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">LinkList</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">~</span><span class="token function" style="color:#d73a49">LinkList</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">         </span><span class="token comment" style="color:#999988;font-style:italic">// Prints the contents of linkedlist</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Adds a new node at the end of the linkedlist</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Deletes the specified node from the linkedlist</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">AddatBeg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token comment" style="color:#999988;font-style:italic">// Adds a new node at the beginning of the linkedlist</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">AddAfter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Adds a new node after specified number of nodes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">          </span><span class="token comment" style="color:#999988;font-style:italic">// Counts number of nodes present in the linkedlist</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">LinkList</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">LinkList</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">LinkList</span><span class="token operator" style="color:#393A34">::</span><span class="token operator" style="color:#393A34">~</span><span class="token function" style="color:#d73a49">LinkList</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Node\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       tmp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     delete p</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Prints the contents of linkedlist</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> LinkList</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">Print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"EMPTY"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//Traverse</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Node\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> tmp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tmp </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">data</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">endl</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       tmp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Adds a new node at the end of the linkedlist</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> LinkList</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">Append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Node \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">newNode</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      newNode </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> new Node</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      newNode</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      newNode</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic">//create first node</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> newNode</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token comment" style="color:#999988;font-style:italic">//Traverse</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Node \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">tmp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  tmp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token comment" style="color:#999988;font-style:italic">//add node to the end</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> newNode</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Deletes the specified node from the linkedlist</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> LinkList</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">Delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> num </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Node \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   tmp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">//If node to be delete is first node</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">data </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> num </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      delete tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">// traverse list till the last but one node is reached</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Node \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">tmp2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> tmp</span><span class="token operator" style="color:#393A34">!=</span><span class="token constant" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">data </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> num </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         tmp2</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         delete tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      tmp2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      tmp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"nElement "</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">num</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token string" style="color:#e3116c">" not Found."</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Adds a new node at the beginning of the linkedlist</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> LinkList</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">AddatBeg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Node \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic">//add new node</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      tmp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> new Node</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//Adds a new node after specified number of nodes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> LinkList</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">AddAfter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Node \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Node \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">tmp2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic">//Skip to the desired portion</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">for</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tmp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            tmp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token comment" style="color:#999988;font-style:italic">//if end of linked list is encountered</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tmp </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">endl</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"There are less than "</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">c</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token string" style="color:#e3116c">" elements"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                   </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic">//insert new node</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      tmp2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> new Node</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      tmp2</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      tmp2</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tmp2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Counts number of nodes present in the linkedlist</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> LinkList</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">Count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Node \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> c </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic">//Traverse the entire Linked List</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tmp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> tmp </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> tmp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tmp</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">link</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            c</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      LinkList\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pobj </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">LinkList</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pobj</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pobj</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">22</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pobj</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">33</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pobj</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">33</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pobj</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">AddatBeg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">44</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pobj</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">AddAfter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">55</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pobj</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">endl</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"no.="</span><span class="token string" style="color:#e3116c">" of="</span><span class="token string" style="color:#e3116c">" elements="</span><span class="token string" style="color:#e3116c">" in="</span><span class="token string" style="color:#e3116c">" linked="</span><span class="token string" style="color:#e3116c">" list="</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">pobj</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">Count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">span class</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">" hiddenspellerror"</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">""</span><span class="token plain"> pre</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">""</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">endl</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       delete pobj</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OUTPUT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">44</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">11</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">55</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">22</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">No</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> of elements in linked list </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>Data Structures</category>
        </item>
        <item>
            <title><![CDATA['Builder' Design Pattern using simple program]]></title>
            <link>https://nagvbt.github.io/blog/2012/04/03/builderdesignpatter</link>
            <guid>https://nagvbt.github.io/blog/2012/04/03/builderdesignpatter</guid>
            <pubDate>Tue, 03 Apr 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Definition:]]></description>
            <content:encoded><![CDATA[<p><strong>Definition:</strong></p><p>Separate the construction of a complex object from its representation so that the same construction process can create different representations.</p><p><strong>Program:</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"iostream"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">using namespace std</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Builder pattern -- Creational example</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Product</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">private</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">char</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> \_parts\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">10</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">Product</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">char</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> part</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \_parts\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> part</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">for</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> j </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> j    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">\_parts\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">j\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">BuildPartA</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      builder</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">BuildPartB</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class ConcreteBuilder1 </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> public Builder</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Product \_product</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">BuildPartA</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \_product</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"PartA"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">BuildPartB</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \_product</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"PartB"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual Product </span><span class="token function" style="color:#d73a49">GetResult</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> \_product</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class ConcreteBuilder2 </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> public Builder</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Product \_product</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">BuildPartA</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \_product</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"PartX"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">BuildPartB</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      \_product</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"PartY"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual Product </span><span class="token function" style="color:#d73a49">GetResult</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> \_product</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Create director and builders</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Director director</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ConcreteBuilder1 b1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ConcreteBuilder2 b2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Product p1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Product p2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Construct product p1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  director</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Construct</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">b1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> b1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetResult</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Construct product p2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  director</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Construct</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">b2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> b2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetResult</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">getchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OUT PUT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Product Parts</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PartA</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PartB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Product Parts</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PartX</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PartY</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>cpp</category>
            <category>Design Patterns</category>
        </item>
        <item>
            <title><![CDATA[Simple Queue program in C++]]></title>
            <link>https://nagvbt.github.io/blog/2012/04/02/queue</link>
            <guid>https://nagvbt.github.io/blog/2012/04/02/queue</guid>
            <pubDate>Mon, 02 Apr 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Definition:]]></description>
            <content:encoded><![CDATA[<p><strong>Definition:</strong></p><p>A Queue&nbsp;is a data structure in which addition of new element takes place at the end called <em><strong>rear</strong></em> of Queue and&nbsp;deletion of existing element takes place at the other end called <em><strong>front</strong></em> of Queue&nbsp;.</p><p><strong>Principle:</strong></p><p>Queue&nbsp;works on the <strong>FIFO</strong> – <strong>F</strong>irst&nbsp;<strong>I</strong>n <strong>F</strong>irst <strong>O</strong>ut principle</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"stdafx.h"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"iostream"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">using namespace std</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">define</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property macro-name" style="color:#36acaa">MAX</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property expression number" style="color:#36acaa">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Queue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">private</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> arr\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">MAX\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> front</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rear</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">Queue</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            front </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            rear  </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> item</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rear </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> MAX</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">endl</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Queue is full"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                   </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            rear</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            arr\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">rear\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> item</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> front </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  front </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">front </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">endl</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Queue is empty"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                   </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> arr\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">front\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> front </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> rear</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  front </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> rear </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  front</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Queue q</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      q</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      q</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      q</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> q</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">endl</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"item="</span><span class="token string" style="color:#e3116c">" deleted="</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">i</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">span class</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">" hiddenspellerror"</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">""</span><span class="token plain"> pre</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">""</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">endl</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> q</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">endl</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Item deleted = "</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">i</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">endl</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OUTPUT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Item deleted </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Item deleted </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>Data Structures</category>
        </item>
        <item>
            <title><![CDATA[Simple Stack Program in C++]]></title>
            <link>https://nagvbt.github.io/blog/2012/04/02/stack</link>
            <guid>https://nagvbt.github.io/blog/2012/04/02/stack</guid>
            <pubDate>Mon, 02 Apr 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Definition:]]></description>
            <content:encoded><![CDATA[<p><strong>Definition:</strong></p><p>A stack is a data structure in which addition of new elements or deletion of existing elements takes place at the same end.</p><p><strong>Principle</strong>:</p><p>Stack works on the&nbsp;<strong>LIFO</strong> - <strong>L</strong>ast <strong>I</strong>n <strong>F</strong>irst <strong>O</strong>ut principle</p><p><strong>Program</strong>: <a href="https://gist.github.com/nagvbt/1bc930d01d113cb75a10" target="_blank" rel="noopener noreferrer">https://gist.github.com/nagvbt/1bc930d01d113cb75a10</a></p>]]></content:encoded>
            <category>Data Structures</category>
        </item>
        <item>
            <title><![CDATA[How to Expand and Contract a MFC Dialog ?]]></title>
            <link>https://nagvbt.github.io/blog/2012/04/01/how-to-expand-and-contract-a-mfc-dialog-using-cexpandcontracthelper-class</link>
            <guid>https://nagvbt.github.io/blog/2012/04/01/how-to-expand-and-contract-a-mfc-dialog-using-cexpandcontracthelper-class</guid>
            <pubDate>Sun, 01 Apr 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[This article gives the ability to make MFC dialogs expand or contract. The CExpandContractHelper simplifies the process to  expand or contract MFC Dialog.]]></description>
            <content:encoded><![CDATA[<p>This article gives the ability to make MFC dialogs expand or contract. The&nbsp;CExpandContractHelper simplifies the process to &nbsp;expand or contract MFC Dialog.</p><p><a href="https://skydrive.live.com/embed?cid=A4632B15B9474D67&amp;resid=A4632B15B9474D67%21454&amp;authkey=AKZzXVcg-7nn7jg" target="_blank" rel="noopener noreferrer"></a></p><p><a href="https://skydrive.live.com/embed?cid=A4632B15B9474D67&amp;resid=A4632B15B9474D67%21454&amp;authkey=AKZzXVcg-7nn7jg" target="_blank" rel="noopener noreferrer"></a></p><p><strong>Steps to use CExpandContractHelper&nbsp;:</strong> 1. Create Dialog Based application 2. Place the controls as shown below 3. Add the CExpandContractHelper.cpp &amp; CExpandContractHelper.h files to the project 4. Create the in the Dialog class CExpandContractHelper<!-- -->*<!-- --> m<!-- -->_<!-- -->pECH;</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CExpandDialogDlg</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">CExpandDialogDlg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CWnd\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pParent </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*=</span><span class="token constant" style="color:#36acaa">NULL</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CDialog</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CExpandDialogDlg</span><span class="token operator" style="color:#393A34">::</span><span class="token plain">IDD</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pParent</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_hIcon </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">AfxGetApp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">LoadIcon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">IDR\_MAINFRAME</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//Step - 1 Create CExpandContractHelper</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_pECH </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">CExpandContractHelper</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">IDC\_PIC\_START</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> IDC\_PIC\_END</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>5<!-- -->.<!-- --> Call ExpandContract in the OnInitDialog</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">BOOL CExpandDialogDlg</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">OnInitDialog</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CDialog</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">OnInitDialog</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SetIcon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m\_hIcon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> TRUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">         </span><span class="token comment" style="color:#999988;font-style:italic">// Set big icon</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SetIcon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m\_hIcon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> FALSE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// Set small icon</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//Step - 2 Call ExpandContract</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_pECH</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">ExpandContract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CButton\</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token function" style="color:#d73a49">GetDlgItem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">IDC\_BN\_EXPAND\_CONTRACT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> TRUE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>6<!-- -->.<!-- --> Call ExpandContract in the button handler OnBnClickedBnExpandContract</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> CExpandDialogDlg</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">OnBnClickedBnExpandContract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//Step - 3 Call ExpandContract</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_pECH</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">ExpandContract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CButton\</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token function" style="color:#d73a49">GetDlgItem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">IDC\_BN\_EXPAND\_CONTRACT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>CExpandContractHelper class</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">//////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Purpose: To exapand or contract a dialog control</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Author : nagvbt.blogspot.com</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class CExpandContractHelper</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">CExpandContractHelper</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">UINT nStart</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> UINT nEnd</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> CDialog\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> dlg</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">~</span><span class="token function" style="color:#d73a49">CExpandContractHelper</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">void</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">protected</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ID of start picture control</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    UINT m\_nStart</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ID of end picture control</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    UINT m\_nEnd</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CDialog\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> m\_dlg</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CButton\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> m\_pButton</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CString m\_sExpand</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CString m\_sContract</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ExpandContract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CButton\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pButton</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">protected</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    BOOL </span><span class="token function" style="color:#d73a49">IsExpand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>CExpandContractHelper.cpp</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"StdAfx.h"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"ExpandContractHelper.h"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CExpandContractHelper</span><span class="token operator" style="color:#393A34">::</span><span class="token operator" style="color:#393A34">~</span><span class="token function" style="color:#d73a49">CExpandContractHelper</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">void</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CExpandContractHelper</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">CExpandContractHelper</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    UINT nStart</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Start Picture control ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    UINT nEnd</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">// End  Picture control ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CDialog \</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">dlg </span><span class="token comment" style="color:#999988;font-style:italic">// Dialog pointer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_nStart </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nStart</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_nEnd   </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nEnd</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_dlg    </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> dlg</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BOOL CExpandContractHelper</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">IsExpand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 1 - Load button caption Expand/Contact</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_sExpand </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"&amp;amp;Expand &amp;gt;&amp;gt;"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_sContract </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"&amp;lt;&amp;lt; &amp;amp;Contract"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 2 - Find out if we need to expand or collapse the dialog</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CString strCaption</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_pButton</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">GetWindowText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> strCaption </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    BOOL bExpand </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> strCaption </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> m\_sExpand </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Collapse by default</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> bExpand</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> CExpandContractHelper</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">ExpandContract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CButton\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pButton  </span><span class="token comment" style="color:#999988;font-style:italic">// Expand Contract button pointer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_pButton </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pButton</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 3 - Get current dialog window rectangle</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CRect rcDialog</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_dlg</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">GetWindowRect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">rcDialog </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> nNewHeight </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">IsExpand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 4a - Change Expand/Contract button caption</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pButton</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">SetWindowText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> m\_sContract </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 4b - Calculate new dialog height</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        CWnd\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pWndLarge </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> m\_dlg</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">GetDlgItem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> m\_nEnd </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ASSERT\</span><span class="token function" style="color:#d73a49">_VALID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> pWndLarge </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        CRect rcLarge</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pWndLarge</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">GetWindowRect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">rcLarge </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nNewHeight </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> rcLarge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">top</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">rcDialog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">top</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 5a - Change Expand/Contract button caption</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pButton</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">SetWindowText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> m\_sExpand </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 5b - Calculate new dialog height</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        CWnd\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pWndSmall </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> m\_dlg</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">GetDlgItem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> m\_nStart </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ASSERT\</span><span class="token function" style="color:#d73a49">_VALID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> pWndSmall </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pWndSmall</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">ShowWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">FALSE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        CRect rcSmall</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pWndSmall</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">GetWindowRect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">rcSmall </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nNewHeight </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> rcSmall</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">top</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">rcDialog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">top</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 6 - Set new dialog height</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> nNewHeight </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_dlg</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">SetWindowPos</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        rcDialog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Width</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nNewHeight</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        SWP\_NOMOVE </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> SWP\_NOZORDER </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 7 - Set the enabled state for each control depending on whether</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// the control is currently visible or not</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CWnd\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pWndControl </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> m\_dlg</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">GetWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> GW\_CHILD </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> pWndControl </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        CRect rcControl</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pWndControl</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">GetWindowRect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">rcControl </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pWndControl</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">EnableWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> rcControl</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">top </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> rcDialog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">top </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> nNewHeight </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pWndControl </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pWndControl</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">GetWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> GW\_HWNDNEXT </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 8 - Check if a control still has the focus</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// (can lose it if the active control becomes disabled)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CWnd\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pWndActiveControl </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> CWnd</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">GetFocus</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> pWndActiveControl </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 9 - Set focus to "first" control on dialog</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        CWnd\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pWndFirstControl </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> m\_dlg</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">GetNextDlgTabItem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ASSERT\</span><span class="token function" style="color:#d73a49">_VALID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> pWndFirstControl </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> pWndFirstControl</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">IsWindowEnabled</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pWndFirstControl</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">SetFocus</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[Step by Step tutorial to create MFC ActiveX Control which can be used in HTML Pages]]></title>
            <link>https://nagvbt.github.io/blog/2012/04/01/step-by-step-tutorial-to-create-mfc-activex-control-which-can-be-used-in-html-pages</link>
            <guid>https://nagvbt.github.io/blog/2012/04/01/step-by-step-tutorial-to-create-mfc-activex-control-which-can-be-used-in-html-pages</guid>
            <pubDate>Sun, 01 Apr 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Definition: ActiveX controls are COM components which are self-registering and Implements standard interfaces that deal specifically with GUI-based tasks such as rendering, sizing, activation, and property persistence.]]></description>
            <content:encoded><![CDATA[<p><strong>Definition:</strong>&nbsp;ActiveX controls are COM components which are self-registering and Implements standard interfaces that deal specifically with GUI-based tasks such as rendering, sizing, activation, and property persistence.</p><p>An ActiveX control is anything you might see in the Toolbox of Visual studio (i.e. EditBox, combobox e.t.c) we can even use the Activex controls in web pages using and handling events with Javascript.</p><p><strong>Steps</strong></p><ol><li><p>Open VS 2008</p></li><li><p>File-&gt;NewProject give the project name as "MathOCX" 3.Click OK and Click Finish</p></li><li><p>To add a method</p><ul><li>Go to class View, Expand "MathOCXLib"</li><li>RightClick on the "<!-- -->_<!-- -->DMathOCX" and click 'Add &gt;' Add Method...</li></ul></li><li><p>'Add Method Wizard' Dialog will be displayed as shown in below fig Add the function returntype, parameter and function names as Add and Sub</p><p>DOUBLE Add(DOUBLE i, DOUBLE j)</p><p>DOUBLE Sub(DOUBLE i, DOUBLE j);</p><p>4<!-- -->.<!-- --> Three Major classes are created</p><p>class&nbsp;CMathOCXApp :&nbsp;public&nbsp;COleControlModule</p><p>class&nbsp;CMathOCXCtrl :&nbsp;public&nbsp;COleControl</p><p>class&nbsp;CMathOCXPropPage :&nbsp;public&nbsp;COlePropertyPage</p><h1><strong>Descriptions of the Generated classes &amp; Notes</strong></h1><p><strong>class&nbsp;CMathOCXApp :&nbsp;public&nbsp;COleControlModule -&gt; CWinApp</strong></p><p><strong>COleControlModule&nbsp;provides</strong> member functions for initializing control module it is an application object for running the ActivexControl. Only one global object is present.</p><p>class&nbsp;CMathOCXCtrl :&nbsp;public&nbsp;COleControl</p><p>1.COleControl&nbsp;Derived from CWnd, this class inherits all the functionality of a Windows window object plus additional functionality specific to OLE, such as event firing and the ability to support methods and properties.</p></li></ol><p>2.&nbsp;COleControl&nbsp;has&nbsp;a dispatch map, which is used to expose a set of functions (called methods) and attributes (called properties) to the control user.</p><p><strong>Dispatch Maps</strong> 1. OLE Automation provides ways to call methods and to access properties across applications.</p><p>2<!-- -->.<!-- --> The mechanism supplied by the MFC for dispatching these requests is the "dispatch map," which designates the internal and external names of object functions and properties, as well as the data types of the properties themselves and of function arguments.</p><p><strong>DISP<!-- -->_<!-- -->FUNCTION(theClass, pszName, pfnMember, vtRetVal, vtsParams )</strong></p><p><strong>Parameters</strong> theClass -&nbsp;Name of the class. pszName -&nbsp;External name of the function. pfnMember -&nbsp;Name of the member function. vtRetVal -&nbsp;A value specifying the function's return type. vtsParams -&nbsp;A space-separated list of one or more constants specifying the function's parameter list.</p><p>Example:&nbsp;DISP<!-- -->_<!-- -->FUNCTION<!-- -->_<!-- -->ID(CMathOCXCtrl,&nbsp;"Add", dispidAdd, Add, VT<!-- -->_<!-- -->R8, VTS<!-- -->_<!-- -->R8 VTS<!-- -->_<!-- -->R8)</p><p>class&nbsp;CMathOCXPropPage :&nbsp;public&nbsp;COlePropertyPage</p><p>Used to display the properties of a custom control in a graphical interface, similar to a dialog box.</p><p><strong>Using MathOCX.ocx control in the HTML Page</strong></p><p>[<!-- -->sourcecode language="html"<!-- -->]<!-- -->
<!-- -->&lt;<!-- -->HTML<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->HEAD<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->META NAME="GENERATOR" Content="Microsoft Visual Studio 8.0"<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->TITLE<!-- -->&gt;<!-- -->&lt;<!-- -->/TITLE<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->style type="text/css"<!-- -->&gt;<!-- -->
.style1
{
width: 25%;
}
.style2
{ color: #0000CC;
font-weight: 700;
}
.style3
{
width: 213px;
}
<!-- -->&lt;<!-- -->/style<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->/HEAD<!-- -->&gt;</p><p>&lt;<!-- -->script type="text/javascript"<!-- -->&gt;<!-- -->
function Button1<!-- -->_<!-- -->onclick() {</p><p> //Call the MathOCX Add Method
Result.value = MathOCX.Add(Text1.value, Text2.value);
}
<!-- -->&lt;<!-- -->/script<!-- -->&gt;</p><p>&lt;<!-- -->BODY onload="initPage()" scroll="no"<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->table class="style1"<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->tr<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->td class="style2" colspan="2"<!-- -->&gt;<!-- -->
Addition of two numbers using MathOCX ActiveX Control
<!-- -->&lt;<!-- -->/tr<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->tr<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->td class="style3"<!-- -->&gt;<!-- -->
Enter number :<!-- -->&lt;<!-- -->/td<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->td<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->input id="Text1" type="text" /<!-- -->&gt;<!-- -->&lt;<!-- -->/td<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->/tr<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->tr<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->td class="style3"<!-- -->&gt;<!-- -->
Enter number :<!-- -->&lt;<!-- -->/td<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->td<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->input id="Text2" type="text" /<!-- -->&gt;<!-- -->&lt;<!-- -->/td<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->/tr<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->tr<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->td class="style3"<!-- -->&gt;</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&amp;lt;input id="Button1" type="button" value="Add" onclick="return Button1\_onclick()" /&amp;gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Result:&amp;lt;/td&amp;gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &amp;lt;td&amp;gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &amp;lt;input id="Result" type="text" /&amp;gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &amp;lt;/td&amp;gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &amp;lt;/tr&amp;gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&amp;lt;/table&amp;gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>&lt;<!-- -->!--Initialize the <!-- -->&lt;<!-- -->span class="hiddenSpellError" pre="the "<!-- -->&gt;<!-- -->MathOCX<!-- -->&lt;<!-- -->/span<!-- -->&gt;<!-- --> <!-- -->&lt;<!-- -->span class="hiddenSpellError" pre=""<!-- -->&gt;<!-- -->Activex<!-- -->&lt;<!-- -->/span<!-- -->&gt;<!-- --> Control using the control GUID --<!-- -->&gt;<!-- -->&lt;<!-- -->/pre<!-- -->&gt;<!-- -->
<!-- -->&amp;<!-- -->nbsp;
<!-- -->&lt;<!-- -->pre<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->pre<!-- -->&gt;<!-- -->
style="left: 0px; top: 0px" width="1" viewastext<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->param name="<!-- -->_<!-- -->Version" value="65536"/<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->param name="<!-- -->_<!-- -->ExtentX" value="26"/<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->param name="<!-- -->_<!-- -->ExtentY" value="26"/<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->param name="<!-- -->_<!-- -->StockProps" value="0"/<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->/object<!-- -->&gt;</p><p>&lt;<!-- -->/BODY<!-- -->&gt;<!-- -->
<!-- -->&lt;<!-- -->/HTML<!-- -->&gt;</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>atl</category>
            <category>MFC</category>
        </item>
        <item>
            <title><![CDATA[Invoke Native C++ DLL from .NET Code]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/30/invoke-native-c-dll-from-net-code</link>
            <guid>https://nagvbt.github.io/blog/2012/03/30/invoke-native-c-dll-from-net-code</guid>
            <pubDate>Fri, 30 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[There are 4 Approaches to accomplish this.]]></description>
            <content:encoded><![CDATA[<p>There are 4 Approaches to accomplish this.</p><p>Approach 1. (Explicit) P/Invoke Approach&nbsp;&nbsp;2. Dynamic P/Invoke Approach&nbsp;3. Implicit P/Invoke (Use a C++/CLI wrapper) Approach&nbsp;4. Convert C++ DLL to a COM server, and call it from .NET code through .NET-COM interop</p><p>I don't like to reinvent the wheel so please go through msdn forum answer <a href="http://social.msdn.microsoft.com/Forums/en-US/vcgeneral/thread/5df04db1-bbc8-4389-b752-802bc84148fe" target="_blank" rel="noopener noreferrer">here</a></p>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[WinForms in MFC ?]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/29/winforms-in-mfc</link>
            <guid>https://nagvbt.github.io/blog/2012/03/29/winforms-in-mfc</guid>
            <pubDate>Thu, 29 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[The CWinFormsControl class provides the basic functionality for hosting of a Windows Forms control.]]></description>
            <content:encoded><![CDATA[<p>The&nbsp;<strong>CWinFormsControl</strong> class provides the basic functionality for hosting of a Windows Forms control.</p><p>For more information on using Windows Forms, see below MSDN articles</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-a-windows-form-user-control-in-mfc"><strong><a href="http://msdn.microsoft.com/en-us/library/ahdd1h97.aspx" target="_blank" rel="noopener noreferrer">Using a Windows Form User Control in MFC</a></strong><a href="#using-a-windows-form-user-control-in-mfc" class="hash-link" aria-label="Direct link to using-a-windows-form-user-control-in-mfc" title="Direct link to using-a-windows-form-user-control-in-mfc">​</a></h3>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[Center an MFC Dialog]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/28/center-an-mfc-dialog</link>
            <guid>https://nagvbt.github.io/blog/2012/03/28/center-an-mfc-dialog</guid>
            <pubDate>Wed, 28 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Use the CWnd::CenterWindow method to center the dialog. Write CenterWindow() method in the OnInitDialog() method.]]></description>
            <content:encoded><![CDATA[<p>Use the CWnd::CenterWindow method to center the dialog. Write CenterWindow() method in the OnInitDialog() method.</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> TRUE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> ```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[Creating a CDC from a HDC]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/28/creating-a-cdc-from-a-hdc</link>
            <guid>https://nagvbt.github.io/blog/2012/03/28/creating-a-cdc-from-a-hdc</guid>
            <pubDate>Wed, 28 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[If we get handle to a DC and sometimes we might want to create a CDC from that. One example is owner-drawn lists, combos, and buttons.  we will receive a draw item message with a hDC. The below code can be used to convert hdc into CDC.]]></description>
            <content:encoded><![CDATA[<p>If we get handle to a DC and sometimes we might want to create a CDC from that. One example is owner-drawn lists, combos, and buttons.  we will receive a draw item message with a hDC. The below code can be used to convert hdc into CDC.</p><p><code>c void MyList::DrawItem(LPDRAWITEMSTRUCT lpDrawItem) { CDC\* pDC; pDC = CDC:FromHandle(lpDrawItem-&gt;hDC); } </code></p><p>NOTE: This technique for any of the other MFC class/ Windows handle pairs too.</p>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[How do I maximize my MDI child ?]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/28/how-do-i-maximize-my-mdi-child</link>
            <guid>https://nagvbt.github.io/blog/2012/03/28/how-do-i-maximize-my-mdi-child</guid>
            <pubDate>Wed, 28 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[In CMainFrame class ad the following code.]]></description>
            <content:encoded><![CDATA[<p>In CMainFrame class ad the following code.</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> CMainFrame</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">ActivateFrame</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> nCmdShow</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">m\_bActivated</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        m\_bActivated </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> TRUE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nCmdShow </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> SW\_SHOWMAXIMIZED</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CFrameWnd</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">ActivateFrame</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nCmdShow</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>where m<!-- -->_<!-- -->bActivated is a member variable of your frame object.</p>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[Programmatically terminate MFC application]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/25/programmatically-terminate-mfc-application</link>
            <guid>https://nagvbt.github.io/blog/2012/03/25/programmatically-terminate-mfc-application</guid>
            <pubDate>Sun, 25 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[MFC does not provide a public function to exit an application. The following method shutdowns the Application. The method simply sends a WM\_CLOSE message to application's mainframe window.]]></description>
            <content:encoded><![CDATA[<p>MFC does not provide a public function to exit an application. The following method shutdowns the Application. The method simply sends a WM<!-- -->_<!-- -->CLOSE message to application's mainframe window.</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> CmfcApp</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">ExitApplication</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">AfxGetApp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">m\_pMainWnd </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">AfxGetApp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">m\_pMainWnd</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">SendMessage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">WM\_CLOSE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[Reading Books]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/25/reading-books</link>
            <guid>https://nagvbt.github.io/blog/2012/03/25/reading-books</guid>
            <pubDate>Sun, 25 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Every book we read makes us grow taller. Reading helps in expanding the thinking of the mind. Most successful people from history to the present are having the habit of reading books.]]></description>
            <content:encoded><![CDATA[<p>Every book we read makes us grow taller. Reading helps in expanding the thinking of the mind. Most successful people from history to the present are having the habit of reading books.</p><p>The best investment that we can make is buying one or two books and reading them in a month every rupee you spent is worth. Reading can be a relaxing hobby as well.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-read">How to read:<a href="#how-to-read" class="hash-link" aria-label="Direct link to How to read:" title="Direct link to How to read:">​</a></h2><p>Use pencil or marker to highlight the important points
Use Book Mark (Card with thread)
Take notes on the margins best thing is use notebook to write points that you like most
To get started with what books to read are below.</p>]]></content:encoded>
            <category>Books</category>
        </item>
        <item>
            <title><![CDATA[Limiting the maximum and minimum sizing  of a Frame Window]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/17/limiting-the-maximum-and-minimum-sizing-of-a-frame-window</link>
            <guid>https://nagvbt.github.io/blog/2012/03/17/limiting-the-maximum-and-minimum-sizing-of-a-frame-window</guid>
            <pubDate>Sat, 17 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[To limit the maximum and minimum size of a Frame Window.]]></description>
            <content:encoded><![CDATA[<p>To limit the maximum and minimum size of a Frame Window.</p><ol><li>Define Min and Mix size in pixels</li><li>Handle the <strong>WM<!-- -->_<!-- -->GETMINMAXINFO</strong> message in a CFrameWnd derived class. &nbsp;The MINMAXINFO struct sets limits on the entire window, we need to take into account scroll bars,&nbsp;toolbars, &nbsp;etc</li></ol><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property directive keyword" style="color:#00009f">define</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property macro-name" style="color:#36acaa">MINX</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property expression number" style="color:#36acaa">500</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property directive keyword" style="color:#00009f">define</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property macro-name" style="color:#36acaa">MINY</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property expression number" style="color:#36acaa">300</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property directive keyword" style="color:#00009f">define</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property macro-name" style="color:#36acaa">MAXX</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property expression number" style="color:#36acaa">600</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property directive keyword" style="color:#00009f">define</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property macro-name" style="color:#36acaa">MAXY</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property expression number" style="color:#36acaa">400</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> CMainFrame</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">OnGetMinMaxInfo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MINMAXINFO\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> lpMMI</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> CRect rectWnd</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> CRect rectClient</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">GetWindowRect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">rectWnd</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetClientRect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">rectClient</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// get offset of toolbars, scrollbars, etc. int nWidthOffset = rectWnd.Width() - rectClient.Width(); int nHeightOffset = rectWnd.Height() - rectClient.Height();</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lpMMI</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">ptMinTrackSize</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> MINX </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> nWidthOffset</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> lpMMI</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">ptMinTrackSize</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">y </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> MINY </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> nHeightOffset</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> lpMMI</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">ptMaxTrackSize</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> MAXX </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> nWidthOffset</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> lpMMI</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">ptMaxTrackSize</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">y </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> MAXY </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> nHeightOffset</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CFrameWnd</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">OnGetMinMaxInfo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lpMMI</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> ```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[Centering an Application Frame Window to desktop]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/16/centering-an-application-frame-window-to-desktop</link>
            <guid>https://nagvbt.github.io/blog/2012/03/16/centering-an-application-frame-window-to-desktop</guid>
            <pubDate>Fri, 16 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[To center Application's Frame Window call CenterWindow() in MainFrame's OnCreate() fucntion.]]></description>
            <content:encoded><![CDATA[<p>To center Application's Frame Window call CenterWindow() in MainFrame's OnCreate() fucntion.</p><p>See the code snippet below</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> CMainFrame</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">OnCreate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LPCREATESTRUCT lpCreateStruct</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CFrameWnd</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">OnCreate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lpCreateStruct</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">//////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">//  Center Application Frame Window                     //</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   CWnd\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pWnd </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetDesktopWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token function" style="color:#d73a49">CenterWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pWnd</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">//////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[How to create a minimal MFC Window ?]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/16/how-to-create-a-minimal-mfc-window</link>
            <guid>https://nagvbt.github.io/blog/2012/03/16/how-to-create-a-minimal-mfc-window</guid>
            <pubDate>Fri, 16 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[We need at least two classes derived to construct an window]]></description>
            <content:encoded><![CDATA[<p>We need at least two classes derived to construct an window<br>
<!-- -->1<!-- -->.<!-- --> Window class / Frame class (CMainFrame) which is derived from CFrameWnd<br>
<!-- -->2<!-- -->.<!-- --> Application class (CMyApp) which is derived from CWinApp</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property expression operator" style="color:#393A34">&amp;</span><span class="token macro property expression" style="color:#36acaa">lt</span><span class="token macro property expression punctuation" style="color:#393A34">;</span><span class="token macro property expression" style="color:#36acaa">afxwin</span><span class="token macro property expression punctuation" style="color:#393A34">.</span><span class="token macro property expression" style="color:#36acaa">h</span><span class="token macro property expression operator" style="color:#393A34">&amp;</span><span class="token macro property expression" style="color:#36acaa">gt</span><span class="token macro property expression punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class CMainFrame </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> public CFrameWnd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">CMainFrame</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">Create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HELLO MFC"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">protected</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    afx\_msg </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">OnPaint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     CPaintDC </span><span class="token function" style="color:#d73a49">dc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     dc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">TextOut</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"This is the my MFC window"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    afx\_msg </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">OnLButtonDown</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">UINT nFlags</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> CPoint point</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">AfxMessageBox</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Mouse OnLButtonDown !!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        CFrameWnd</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">OnLButtonDown</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nFlags</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> point</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Declare the Message Map</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    DECLARE\_MESSAGE\</span><span class="token function" style="color:#d73a49">_MAP</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Define the Message Map out side the class Definition</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BEGIN\_MESSAGE\</span><span class="token function" style="color:#d73a49">_MAP</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CMainFrame</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> CFrameWnd</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ON\_WM\</span><span class="token function" style="color:#d73a49">_PAINT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic">// Paint Message</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ON\_WM\</span><span class="token function" style="color:#d73a49">_LBUTTONDOWN</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Mouse LButton down message</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">END\_MESSAGE\</span><span class="token function" style="color:#d73a49">_MAP</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class CMyApp </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> public CWinApp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    virtual BOOL </span><span class="token function" style="color:#d73a49">InitInstance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        m\_pMainWnd </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">CMainFrame</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        m\_pMainWnd</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">ShowWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">SW\_SHOWNORMAL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        m\_pMainWnd</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">UpdateWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> TRUE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// The one and only Application Object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CMyApp theApp</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[How to remove MAXIMIZE BOX and MINIMIZE BOX from an MFC Window]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/16/how-to-remove-maximize-box-and-minimize-box-from-an-mfc-window</link>
            <guid>https://nagvbt.github.io/blog/2012/03/16/how-to-remove-maximize-box-and-minimize-box-from-an-mfc-window</guid>
            <pubDate>Fri, 16 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[In order to remove MAXIMIZE BOX and MINIMIZE BOX from an MFC Window see the below code snippet.]]></description>
            <content:encoded><![CDATA[<p>In order to remove MAXIMIZE BOX and MINIMIZE BOX from an MFC Window see the below code snippet.</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">BOOL CMainFrame</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">PreCreateWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CREATESTRUCT</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> cs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">CFrameWnd</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">PreCreateWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> FALSE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dwExStyle </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">~</span><span class="token plain">WS\_EX\_CLIENTEDGE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lpszClass </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">AfxRegisterWndClass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//  To remove MAXIMIZE BOX from window                  //</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">style </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">~</span><span class="token plain">WS\_MAXIMIZEBOX</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//  To remove MINIMIZE BOX from window                  //</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">style </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">~</span><span class="token plain">WS\_MINIMIZEBOX</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> TRUE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[Hash Data using Win32 API through a CHashDataProvider class]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/15/hash-data-using-win32-api-through-a-chashdataprovider-class</link>
            <guid>https://nagvbt.github.io/blog/2012/03/15/hash-data-using-win32-api-through-a-chashdataprovider-class</guid>
            <pubDate>Thu, 15 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Cryptography is the use of codes to convert data so that only a specific recipient will be able to read it. Microsoft provide win32 API to Hash Data/string. The class CHashDataProvider developed to provides simple function HashData(ALG\_ID algorithmID, LPCTSTR plainText, LPTSTR hashedText); which takes algorithmID and inputText to convert plainText to hashedText]]></description>
            <content:encoded><![CDATA[<p>Cryptography is the use of codes to convert data so that only a specific recipient will be able to read it. Microsoft provide win32 API to Hash Data/string. The class CHashDataProvider developed to provides simple function HashData(ALG<!-- -->_<!-- -->ID algorithmID, LPCTSTR plainText, LPTSTR hashedText); which takes algorithmID and inputText to convert plainText to hashedText</p><p>ALG<!-- -->_<!-- -->ID algorithmID - Algorithm ID to be used LPCTSTR plainText - plainText that to be converted to hashedText LPTSTR hashedText - Hashed Test using the input algorithmID<a href="https://skydrive.live.com/embed?cid=A4632B15B9474D67&amp;resid=A4632B15B9474D67%21453&amp;authkey=AHGOllrxlwl3EGM" target="_blank" rel="noopener noreferrer"></a></p><p><a href="https://skydrive.live.com/embed?cid=A4632B15B9474D67&amp;resid=A4632B15B9474D67%21453&amp;authkey=AHGOllrxlwl3EGM" target="_blank" rel="noopener noreferrer"></a></p><p><a href="https://skydrive.live.com/embed?cid=A4632B15B9474D67&amp;resid=A4632B15B9474D67%21453&amp;authkey=AHGOllrxlwl3EGM" target="_blank" rel="noopener noreferrer"></a></p><p><strong>CHashDataProvider Code</strong></p><p>HashDataProvider.h</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property expression operator" style="color:#393A34">&amp;</span><span class="token macro property expression" style="color:#36acaa">lt</span><span class="token macro property expression punctuation" style="color:#393A34">;</span><span class="token macro property expression" style="color:#36acaa">wincrypt</span><span class="token macro property expression punctuation" style="color:#393A34">.</span><span class="token macro property expression" style="color:#36acaa">h</span><span class="token macro property expression operator" style="color:#393A34">&amp;</span><span class="token macro property expression" style="color:#36acaa">gt</span><span class="token macro property expression punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">define</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property macro-name" style="color:#36acaa">BUFFER</span><span class="token macro property expression" style="color:#36acaa">\_SIZE </span><span class="token macro property expression number" style="color:#36acaa">256</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class CHashDataProvider</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">CHashDataProvider</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">void</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">~</span><span class="token function" style="color:#d73a49">CHashDataProvider</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">void</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">private</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Handle to a cryptographic service provider (CSP)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    HCRYPTPROV  m\_hProv</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Handle to the hash object needed to create a hash.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    HCRYPTHASH  m\_hHash</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Pointer to the hash.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PBYTE       m\_pbHash</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">private</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">FreeResources</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">InitializeData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    LPTSTR </span><span class="token function" style="color:#d73a49">FormatData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">PBYTE pbHash</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DWORD dwDataLen</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> LPTSTR hashedText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    bool </span><span class="token function" style="color:#d73a49">HashData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ALG\_ID  algorithmID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> LPCTSTR plainText</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> LPTSTR  hashedText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>HashDataProvider.cpp</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"HashDataProvider.h"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CHashDataProvider</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">CHashDataProvider</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">void</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">InitializeData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CHashDataProvider</span><span class="token operator" style="color:#393A34">::</span><span class="token operator" style="color:#393A34">~</span><span class="token function" style="color:#d73a49">CHashDataProvider</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">void</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// des:    Hashes data based on the ALG\_ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// return: Hashing of the text is sucessful or not</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CHashDataProvider</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">HashData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ALG\_ID  algorithmID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// in | Algorithm ID (Sha1 or MD5 )</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            LPCTSTR plainText</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">// in | Original string to be hashed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            LPTSTR  hashedText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//out | string to store hashed text</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">InitializeData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    bool        rc          </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// Default is success</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    DWORD       dwDataLen   </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">         </span><span class="token comment" style="color:#999988;font-style:italic">// Length, in bytes, of the hash.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//--------------------------------------------------------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Acquire a handle to the default RSA cryptographic service provider.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">CryptAcquireContext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">m\_hProv</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                 </span><span class="token comment" style="color:#999988;font-style:italic">// handle of the CSP</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                     </span><span class="token comment" style="color:#999988;font-style:italic">// key container name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                     </span><span class="token comment" style="color:#999988;font-style:italic">// CSP name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        PROV\_RSA\_FULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// provider type</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        CRYPT\_VERIFYCONTEXT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">     </span><span class="token comment" style="color:#999988;font-style:italic">// no key access is requested</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">AfxMessageBox</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Error in AcquireContext 0x%08x n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetLastError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">FreeResources</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">CryptCreateHash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        m\_hProv</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                  </span><span class="token comment" style="color:#999988;font-style:italic">// handle of the CSP</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        algorithmID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">              </span><span class="token comment" style="color:#999988;font-style:italic">// hash algorithm to use</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                        </span><span class="token comment" style="color:#999988;font-style:italic">// hash key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                        </span><span class="token comment" style="color:#999988;font-style:italic">// reserved</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">m\_hHash</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// address of hash object handle</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">AfxMessageBox</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Error in CryptCreateHash 0x%08x n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetLastError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">FreeResources</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">CryptHashData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        m\_hHash</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                  </span><span class="token comment" style="color:#999988;font-style:italic">// handle of the hash object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> BYTE \</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> plainText</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// text to be hash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        \</span><span class="token function" style="color:#d73a49">_tcslen</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">plainText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token keyword" style="color:#00009f">sizeof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TCHAR</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// number of bytes of data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                       </span><span class="token comment" style="color:#999988;font-style:italic">// flags</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">AfxMessageBox</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Error in CryptHashData 0x%08x n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetLastError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">FreeResources</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">CryptGetHashParam</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        m\_hHash</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                 </span><span class="token comment" style="color:#999988;font-style:italic">// handle of the HMAC hash object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        HP\_HASHVAL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">              </span><span class="token comment" style="color:#999988;font-style:italic">// query on the hash value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                    </span><span class="token comment" style="color:#999988;font-style:italic">// pointer to the HMAC hash value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">dwDataLen</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">              </span><span class="token comment" style="color:#999988;font-style:italic">// length,in bytes, of the hash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">AfxMessageBox</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Error in CryptGetHashParam 0x%08x n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetLastError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">FreeResources</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_pbHash </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">BYTE\</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token function" style="color:#d73a49">malloc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dwDataLen</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> m\_pbHash</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token function" style="color:#d73a49">AfxMessageBox</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"unable to allocate memoryn"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       rc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token function" style="color:#d73a49">FreeResources</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">CryptGetHashParam</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        m\_hHash</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                   </span><span class="token comment" style="color:#999988;font-style:italic">// handle of the HMAC hash object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        HP\_HASHVAL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// query on the hash value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        m\_pbHash</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                  </span><span class="token comment" style="color:#999988;font-style:italic">// pointer to the HMAC hash value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">dwDataLen</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// length,in bytes, of the hash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">AfxMessageBox</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Error in CryptGetHashParam 0x%08x n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetLastError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">FreeResources</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hashedText </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">FormatData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m\_pbHash</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dwDataLen</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hashedText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">FreeResources</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> rc</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//Helper functions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> CHashDataProvider</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">FreeResources</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m\_hHash</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">CryptDestroyHash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m\_hHash</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m\_hProv</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">CryptReleaseContext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m\_hProv</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m\_pbHash</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token function" style="color:#d73a49">free</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m\_pbHash</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> CHashDataProvider</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">InitializeData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_hProv </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_hHash </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_pbHash </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">LPTSTR CHashDataProvider</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">FormatData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">PBYTE pbHash</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DWORD dwDataLen</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> LPTSTR hashedText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    TCHAR rstData\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">BUFFER\_SIZE\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Buffer to receive hashed result</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    TCHAR tmpBuffer\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">3</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">DWORD i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> dwDataLen </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tmpBuffer\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tmpBuffer\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tmpBuffer\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        \_stprintf\</span><span class="token function" style="color:#d73a49">_s</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tmpBuffer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> \</span><span class="token function" style="color:#d73a49">_T</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%2.2x"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pbHash\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        \_tcscat\</span><span class="token function" style="color:#d73a49">_s</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rstData</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tmpBuffer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    \</span><span class="token function" style="color:#d73a49">_tcscpy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hashedText</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rstData</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> hashedText</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>win32</category>
        </item>
        <item>
            <title><![CDATA[How to check whether a given file exists in the given path ?]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/15/how-to-check-whether-a-given-file-exists-in-the-given-path</link>
            <guid>https://nagvbt.github.io/blog/2012/03/15/how-to-check-whether-a-given-file-exists-in-the-given-path</guid>
            <pubDate>Thu, 15 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Using Win32 API FindFirstFile we can find whether a given file exists in the given path (szFilePath) or not. BOOL IsFileExists( LPCTSTR szFilePath) method shown below serves our purpose.]]></description>
            <content:encoded><![CDATA[<p>Using Win32 API FindFirstFile we can find whether a given file exists in the given path (szFilePath) or not. BOOL IsFileExists( LPCTSTR szFilePath) method shown below serves our purpose.</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hFind </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">FindFirstFile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">szFilePath</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">FindFileData</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hFind </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> INVALID\_HANDLE\_VALUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> bFileExists </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> FALSE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">FindClose</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hFind</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> bFileExists </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> TRUE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> bFileExists</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> ```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>win32</category>
        </item>
        <item>
            <title><![CDATA[Making first MDI child window start out maximized]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/15/mdi-child-window-start-out-maximized</link>
            <guid>https://nagvbt.github.io/blog/2012/03/15/mdi-child-window-start-out-maximized</guid>
            <pubDate>Thu, 15 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[To make first MDI child window start out maximized]]></description>
            <content:encoded><![CDATA[<p>To make first MDI child window start out maximized</p><ol><li>Add a ActivateFrame() which is a CChildFrame virtual function</li><li>Modify the function with the below code snnipet</li></ol><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// if another window is open, use default if(GetMDIFrame()-&gt;MDIGetActive()) { CMDIChildWnd::ActivateFrame(nCmdShow); } else // else open the child window maximized. { CMDIChildWnd::ActivateFrame(SW\_SHOWMAXIMIZED); }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//////////////////////////////////////////////////////////////////////////// } ```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[Creating an SDI/MDI application that is initially maximized]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/14/creating-an-sdimdi-application-that-is-initially-maximized</link>
            <guid>https://nagvbt.github.io/blog/2012/03/14/creating-an-sdimdi-application-that-is-initially-maximized</guid>
            <pubDate>Wed, 14 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[To Creating an SDI/MDI application that is initially maximized Pass SW\_SHOWMAXIMIZED as paramater to m\_pMainWnd->ShowWindow() in the  in the CWinApp::InitInstance()]]></description>
            <content:encoded><![CDATA[<p>To Creating an SDI/MDI application that is initially maximized Pass <strong>SW<!-- -->_<!-- -->SHOWMAXIMIZED</strong> as paramater to&nbsp;m<!-- -->_<!-- -->pMainWnd-&gt;ShowWindow() in the&nbsp;&nbsp;in the CWinApp::InitInstance()</p><p>Code Snippet:</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">m\_pMainWnd</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">UpdateWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> m\_pMainWnd</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">DragAcceptFiles</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> TRUE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> ```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[Converting from CString]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/13/converting-from-cstring</link>
            <guid>https://nagvbt.github.io/blog/2012/03/13/converting-from-cstring</guid>
            <pubDate>Tue, 13 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[This post demonstrates how to convert from a CString to the other string types]]></description>
            <content:encoded><![CDATA[<p>This post demonstrates how to convert from a <strong>CString</strong>&nbsp;to the other string types</p><p><strong>CString to&nbsp;LPTSTR</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CString origCString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Get the internal buffer pointer of CString.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">LPTSTR pString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> origCString</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetBuffer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//Release it.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">origCString</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ReleaseBuffer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>LPTSTR to</strong> CString&nbsp;</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">LPTSTR origLPTSTR </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CString sCString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">origLPTSTR</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>CString to&nbsp;char<!-- -->*</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CString origCString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Get the internal buffer pointer of CString.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">char</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> origCString</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetBuffer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//Release it.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">origCString</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ReleaseBuffer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>char<!-- -->*<!-- --> to</strong> CString</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">char</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> origchar </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CString cstring </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">origchar</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>CString to&nbsp;CComBSTR</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CString origCString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CComBSTR ccombstr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CComBSTR</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">origCString</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>CComBSTR to</strong> CString</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CComBSTR origCComBSTR </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CString cstring </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">origCComBSTR</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>CString&nbsp;to</strong> <!-- -->_<!-- -->bstr<!-- -->_<!-- -->t</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CString origCString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\_bstr\_t bstrt </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> \_bstr\</span><span class="token function" style="color:#d73a49">_t</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">origCString</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>_<!-- -->bstr<!-- -->_<!-- -->t to</strong> CString</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">\_bstr\_t origbstrt  </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CString cstring </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">char</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">origbstrt</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>CString&nbsp;to</strong> BSTR</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CString origCString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BSTR bstr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> origCString</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AllocSysString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">SysFreeString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">bstr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//Free the string.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>BSTR to</strong> CString</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">BSTR origbstr  </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CString cstring </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">origbstr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>CString&nbsp;to</strong> CComVariant</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CString origCString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CComVariant comvariant </span><span class="token operator" style="color:#393A34">=</span><span class="token plain">  </span><span class="token function" style="color:#d73a49">CComVariant</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">origCString</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>CComVariant to</strong> CString</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CComVariant origcomvariant  </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CString cstring </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">origcomvariant</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>CString&nbsp;to</strong> COleVariant</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CString origCString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COleVariant olevariant </span><span class="token operator" style="color:#393A34">=</span><span class="token plain">  </span><span class="token function" style="color:#d73a49">CComVariant</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">origCString</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>COleVariant to</strong> CString</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">COleVariant origolevariant  </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CString cstring </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">origolevariant</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[How do remove 'Untitled' in main window caption]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/13/how-do-remove-untitled-in-main-window-caption</link>
            <guid>https://nagvbt.github.io/blog/2012/03/13/how-do-remove-untitled-in-main-window-caption</guid>
            <pubDate>Tue, 13 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[To remove 'Untitled' in main window caption]]></description>
            <content:encoded><![CDATA[<p>To remove 'Untitled' in main window caption</p><ol><li>Override the PreCreateWindow() function in CMainFrame class</li><li>Modify the CREATESTRUCT style by adding the below code <strong>cs.style &amp;= ~FWS<!-- -->_<!-- -->ADDTOTITLE ;</strong></li></ol><p><strong>Code snippet:</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">BOOL CMainFrame</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">PreCreateWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CREATESTRUCT</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> cs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">CFrameWnd</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">PreCreateWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> FALSE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">////////////////////////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// To remove 'Untitled' in main window caption //</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">////////////////////////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">style </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">~</span><span class="token plain">FWS\_ADDTOTITLE </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">////////////////////////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> TRUE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="//skydrive.live.com/embed?cid=A4632B15B9474D67&amp;resid=A4632B15B9474D67%21452&amp;authkey=AC2PSOyg7ZABQaM%22%3E%3C/iframe%3E" target="_blank" rel="noopener noreferrer">Download Code</a></p>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[How to change a Window's title of an SDI/MDI Application]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/13/how-to-change-a-windows-title-of-an-sdimdi-application</link>
            <guid>https://nagvbt.github.io/blog/2012/03/13/how-to-change-a-windows-title-of-an-sdimdi-application</guid>
            <pubDate>Tue, 13 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Call **SetWindowText** method by passing required title as a string in the CWinApp::InitInstance() method after ProcessShellCommand() method. Please see the below code snippet]]></description>
            <content:encoded><![CDATA[<p>Call <em><strong>SetWindowText</strong></em> method by passing required title as a string in the CWinApp::InitInstance() method after&nbsp;ProcessShellCommand() method. Please see the below code snippet</p><p><strong>m<!-- -->_<!-- -->pMainWnd-&gt;SetWindowText("My New Window Title");</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">BOOL CWindowTitleApp</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">InitInstance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    INITCOMMONCONTROLSEX InitCtrls</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    InitCtrls</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dwSize </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">sizeof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">InitCtrls</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    InitCtrls</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dwICC </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ICC\_WIN95\_CLASSES</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">InitCommonControlsEx</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">InitCtrls</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CWinApp</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">InitInstance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SetRegistryKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">\</span><span class="token function" style="color:#d73a49">_T</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Local AppWizard-Generated Applications"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">LoadStdProfileSettings</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CSingleDocTemplate\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pDocTemplate</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pDocTemplate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> new </span><span class="token function" style="color:#d73a49">CSingleDocTemplate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        IDR\_MAINFRAME</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        RUNTIME\</span><span class="token function" style="color:#d73a49">_CLASS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CWindowTitleDoc</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        RUNTIME\</span><span class="token function" style="color:#d73a49">_CLASS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CMainFrame</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic">// main SDI frame window</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        RUNTIME\</span><span class="token function" style="color:#d73a49">_CLASS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CWindowTitleView</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">pDocTemplate</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> FALSE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">AddDocTemplate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pDocTemplate</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">EnableShellOpen</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">RegisterShellFileTypes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TRUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CCommandLineInfo cmdInfo</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ParseCommandLine</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cmdInfo</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">ProcessShellCommand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cmdInfo</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> FALSE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">////////////////////////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//                       To Change Window Title                           //</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">////////////////////////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_pMainWnd</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">SetWindowText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"My New Window Title"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">////////////////////////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_pMainWnd</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">ShowWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">SW\_SHOW</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_pMainWnd</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">UpdateWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m\_pMainWnd</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">DragAcceptFiles</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> TRUE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[Steve Jobs by Walter Isaacson]]></title>
            <link>https://nagvbt.github.io/blog/2012/03/10/steve-jobs-walter</link>
            <guid>https://nagvbt.github.io/blog/2012/03/10/steve-jobs-walter</guid>
            <pubDate>Sat, 10 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Bought Steve Jobs by Walter Isaacson) Biography on Feburary 14, 2012 to present it to my self through flipkart.com.]]></description>
            <content:encoded><![CDATA[<p>Bought <a href="http://en.wikipedia.org/wiki/Steve_Jobs_(book)" target="_blank" rel="noopener noreferrer">Steve Jobs by Walter Isaacson</a> Biography on Feburary 14, 2012 to present it to my self through flipkart.com.</p><p>Today March 10, 2012 12.20 PM I had completed reading the book it contains 42 chapters spread over 571 pages</p><p>Reality Distortion Field: It can be done</p><p><img loading="lazy" src="/assets/images/steve-jobs-walter-61a5c9379e7418621676161a857344cf.JPG" width="199" height="289" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="books-that-inspired-steve-jobs">Books That Inspired Steve Jobs<a href="#books-that-inspired-steve-jobs" class="hash-link" aria-label="Direct link to Books That Inspired Steve Jobs" title="Direct link to Books That Inspired Steve Jobs">​</a></h2><ol><li><p>'Autobiography of a Yogi' by Paramahansa Yogananda
Jobs read and re-read many times during his life. Jobs had first read as a teenager," Isaacson writes, "then re-read in India and had read once a year ever since.</p></li><li><p>'Be Here Now' by Ram Dass</p></li><li><p>Zen Mind, Beginner's Mind by Shunryu Suzuki</p></li><li><p>'The Innovator's Dilemma' by Clayton Christensen</p></li><li><p>'The Whole Earth Catalog' periodicals</p></li><li><p>Herman Melville's Moby Dick</p></li><li><p>Shakespeare's King Lear</p></li><li><p>Poems of Dylan Thomas</p></li><li><p>'Diet For A Small Planet' by Frances Lapp</p></li><li><p>'Mucusless Diet Healing System' by Arnold Ehret</p></li><li><p>Chogyam Trungpa's "Cutting Through Spiritual Materialism"</p></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="articles">Articles<a href="#articles" class="hash-link" aria-label="Direct link to Articles" title="Direct link to Articles">​</a></h2><ol><li>"Secrets of the Little Blue Box,"</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-music-that-inspired-steve-jobs">The Music That Inspired Steve Jobs<a href="#the-music-that-inspired-steve-jobs" class="hash-link" aria-label="Direct link to The Music That Inspired Steve Jobs" title="Direct link to The Music That Inspired Steve Jobs">​</a></h2><ol><li>Bob Dylan - bootlegs</li><li>Beatles</li><li>Stones</li><li>Joan Baez - Love Is A Four Letter Word song</li><li>Joni Mitchell - Both Sides Now song</li><li>"Uncle John's Band" by the Grateful Dead</li><li>Glenn Gould</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="quotes-from-his-biography">Quotes From His Biography<a href="#quotes-from-his-biography" class="hash-link" aria-label="Direct link to Quotes From His Biography" title="Direct link to Quotes From His Biography">​</a></h2><p>"If you don't cannibalize yourself, someone else will."</p><p>"People don’t know what they want until you show it to them."</p><p>"I hate it when people call themselves 'entrepreneurs' when what they’re really trying to do is launch a startup and then sell or go public, so they can cash in and move on."</p>]]></content:encoded>
            <category>Books</category>
        </item>
        <item>
            <title><![CDATA[How can get back the Recent Documents Menu in Windows 7 ?]]></title>
            <link>https://nagvbt.github.io/blog/2012/01/23/how-can-get-back-the-recent-documents-menu-in-windows-7</link>
            <guid>https://nagvbt.github.io/blog/2012/01/23/how-can-get-back-the-recent-documents-menu-in-windows-7</guid>
            <pubDate>Mon, 23 Jan 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Here is how I got it back:]]></description>
            <content:encoded><![CDATA[<p>Here is how I got it back:</p><ol><li>Right click the&nbsp;<strong>Start</strong>/Win button, select&nbsp;<strong>Properties</strong></li><li>Click the&nbsp;<strong>Start Menu</strong> tab (it should be select as default)</li><li>Click the&nbsp;<strong>Customize</strong>&nbsp;button</li><li>Scroll down and check the&nbsp;<strong>Recent Items&nbsp;check box</strong></li><li><strong>Click&nbsp;Ok</strong></li><li><strong>Click&nbsp;Apply</strong></li><li><strong>Click&nbsp;Ok</strong></li><li><strong>Check "Recent" option in the start menu.</strong></li></ol>]]></content:encoded>
            <category>Tools</category>
        </item>
        <item>
            <title><![CDATA[Sending SMS using C#]]></title>
            <link>https://nagvbt.github.io/blog/2012/01/23/sending-sms-using-c</link>
            <guid>https://nagvbt.github.io/blog/2012/01/23/sending-sms-using-c</guid>
            <pubDate>Mon, 23 Jan 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Step 1: Create a new project in Microsoft Visual Studio 2008 (File -> New -> Project -> Visual C# -> Console Application). Give SMS\_Sender name and also specify the location where to store the project.]]></description>
            <content:encoded><![CDATA[<p><strong>Step 1:</strong> Create a new project in Microsoft Visual Studio 2008 (File -&gt; New -&gt; Project -&gt; Visual C# -&gt; Console Application). Give SMS<!-- -->_<!-- -->Sender name and also specify the location where to store the project.</p><p><strong>Step 2:</strong> Now add a new item to the project we just created (Project -&gt; Add New Item -&gt; Class). Specify a name to the class as ‘TNV<!-- -->_<!-- -->SMSHelper’. The code now looks like as follows. The namespace used is</p><p><code>cs using System.IO; using System.Net; </code></p><p><strong>TNV<!-- -->_<!-- -->SMSHelper.cs</strong></p><div class="language-cs true codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public string SendSms(string ToMobileNo , string Message)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    try</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        string finalUrl = "http://enterprise.smsgupshup.com/GatewayAPI/rest?" + formatUrl(ToMobileNo, Message);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        HttpWebRequest myRequest = (HttpWebRequest)WebRequest.Create(finalUrl);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        myResponse = myRequest.GetResponse();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Stream st = myResponse.GetResponseStream();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Encoding ec = System.Text.Encoding.GetEncoding("utf-8");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamReader reader = new System.IO.StreamReader(st, ec);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        result = reader.ReadToEnd();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        reader.Close();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        st.Close();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return result;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    catch (Exception exp)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       return result;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    finally</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (myResponse != null) myResponse.Close();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>}</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Step 3:</strong> Open Program.cs and in Main write the following lines to send the SMS</p><p><code>cs class Program { static void Main(string\[\] args) { TNV\_SMSHelper smsObj = new TNV\_SMSHelper(); string Text = smsObj.SendSms("1234567890", "HelloWorld"); Console.WriteLine(Text); } } </code></p>]]></content:encoded>
            <category>csharp</category>
        </item>
        <item>
            <title><![CDATA[Sending Emails using C#]]></title>
            <link>https://nagvbt.github.io/blog/2012/01/22/emailsende</link>
            <guid>https://nagvbt.github.io/blog/2012/01/22/emailsende</guid>
            <pubDate>Sun, 22 Jan 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Step By Step Procedure:]]></description>
            <content:encoded><![CDATA[<p><strong>Step By Step Procedure:</strong></p><p><strong>Step 1:</strong> Create a new project in Microsoft Visual Studio 2008 (File -&gt; New -&gt; Project -&gt; Visual C# -&gt; Console Application). Give Email<!-- -->_<!-- -->Sender&nbsp;name and also specify the location where to store the project.</p><p><strong>Step 2:</strong> Now add a new item to the project we just created (Project -&gt; Add New Item -&gt; Class).&nbsp;Specify a name to the class as ‘TNV<!-- -->_<!-- -->EmailHelper’. The code now looks like as follows. The namespace used is</p><p><code>cs using System.Net.Mail; </code></p><p><strong>TNV<!-- -->_<!-- -->EmailHelper.cs</strong></p><div class="language-cs true codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//Constructor</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//change Host&amp; Port names Based on SMTP server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public TNV_EmailHelper(string host, int port)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    _sClient.Host = host;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    _sClient.Port = port;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public void SendEmail(string sendFrom, // From EmailAddress</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                      string password, // Password</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                      string sendTo,   // To Email Address</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                      string subject,  // Subject of email</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                      string body)     // Boady of email</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    try</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _sendFrom = sendFrom;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _sendTo   = sendTo;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _subject  = subject;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _body     = body;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _smtpCreds = new System.Net.NetworkCredential(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                sendFrom,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                password);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _sClient.UseDefaultCredentials = false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _sClient.Credentials = _smtpCreds;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _sClient.EnableSsl = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        MailMessage msg = BuildMessage();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _sClient.Send(msg);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    catch (Exception ex)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        throw ex;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">private MailMessage BuildMessage()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MailMessage msg = new MailMessage();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MailAddress to = new MailAddress(_sendTo);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MailAddress from = new MailAddress(_sendFrom);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    msg.Subject = _subject;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    msg.Body = _body;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    msg.From = from;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    msg.To.Add(to);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return msg;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>}</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Step 3:</strong> Open Program.cs and in Main write the following lines to send the email</p><p><strong>Program.cs</strong></p><p><code>cs class Program { static void Main(string\[\] args) { TNV\_EmailHelper em = new TNV\_EmailHelper( "Smtp.gmail.com", 587); em.SendEmail("from@gmail.com", "password", "to@gmail.com", "SUB: From Email Sender", "BODY: Hello World !"); } } </code></p>]]></content:encoded>
            <category>csharp</category>
        </item>
        <item>
            <title><![CDATA[Message Map vs Virtual Functions]]></title>
            <link>https://nagvbt.github.io/blog/2012/01/21/message-map-vs-virtual-functions</link>
            <guid>https://nagvbt.github.io/blog/2012/01/21/message-map-vs-virtual-functions</guid>
            <pubDate>Sat, 21 Jan 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Message Map is a logical table that maps the windows messages to the member functions of the class. Message map is preferred than virtual functions due  to avoid following drawbacks:]]></description>
            <content:encoded><![CDATA[<p>Message Map is a logical table that maps the windows messages to the member functions of the class. Message map is preferred than virtual functions due&nbsp; to avoid following drawbacks:</p><p>1) Most windows only process a small number of messages, yet each window require to giant virtual function table with the entries of each message. 2) More efficient and use less space then virtual functions. 2) Virtual functions don't handle user defined messages and other custom cases.</p>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[C FAQ 4 to 7: Simple Programms]]></title>
            <link>https://nagvbt.github.io/blog/2012/01/20/c-faq-4-to-7-simple-programms</link>
            <guid>https://nagvbt.github.io/blog/2012/01/20/c-faq-4-to-7-simple-programms</guid>
            <pubDate>Fri, 20 Jan 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[4. Swap of two numbers  with out temp]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4swap-of-two-numbers-with-out-temp">4.&nbsp;Swap of two numbers &nbsp;with out temp<a href="#4swap-of-two-numbers-with-out-temp" class="hash-link" aria-label="Direct link to 4.&nbsp;Swap of two numbers &nbsp;with out temp" title="Direct link to 4.&nbsp;Swap of two numbers &nbsp;with out temp">​</a></h2><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"stdio.h"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> a</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> b</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Before swapingn"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%dt%dn"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> normal temp </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> temp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> temp</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> a</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> b</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">temp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//sol:-1 a=a+b; b=a-b; a=a-b;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//sol:-2 a=a_b; b=a/b; a=a/b;_/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//sol:-3 //a^=b^=a^=b;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">a</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> a</span><span class="token operator" style="color:#393A34">^</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> b</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> a</span><span class="token operator" style="color:#393A34">^</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> a</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> a</span><span class="token operator" style="color:#393A34">^</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%dt"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"After swapingn"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%dt%dn"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> ```</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## </span><span class="token number" style="color:#36acaa">5</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> Write a program to print </span><span class="token string" style="color:#e3116c">"Hello World"</span><span class="token plain"> with out using </span><span class="token function" style="color:#d73a49">semicolon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```c</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"stdio.h"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Hello World "</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//do nothing } } ```</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token number" style="color:#36acaa">6</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> Write a program to display the output as</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">\</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```c </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">for</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> j</span><span class="token operator" style="color:#393A34">--</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"\*"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"n"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> ```</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token number" style="color:#36acaa">7</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> Write a program to display Fibonacci Series Using Recursion</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```c</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">unsigned</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fibonacci</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">unsigned</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fibonacci</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fibonacci</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">unsigned</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> j</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"n Enter the fibonnaci number : "</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">scanf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%d"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">j</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> j </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%d "</span><span class="token punctuation" style="color:#393A34">,</span><span class="token function" style="color:#d73a49">fibonacci</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">j</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> ```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>C</category>
        </item>
        <item>
            <title><![CDATA[C FAQ 3: How to write a code to Outputs its own code]]></title>
            <link>https://nagvbt.github.io/blog/2012/01/19/c-faq-how-to-write-a-code-to-outputs-its-own-code</link>
            <guid>https://nagvbt.github.io/blog/2012/01/19/c-faq-how-to-write-a-code-to-outputs-its-own-code</guid>
            <pubDate>Thu, 19 Jan 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[\FILE ** The name of the current source file.** FILE\\_ expands to a string surrounded by double quotation marks.]]></description>
            <content:encoded><![CDATA[<p>_<!-- -->FILE <strong>:It is a Predefined Macros : The name of the current source file.</strong> FILE<!-- -->_<!-- -->_<!-- --> expands to a string surrounded by double quotation marks.</p><p>fgetc: Read a character from a stream. returns an integer putchar: Writes a character to a stream</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"stdio.h"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//Program that outputs its own code int main () { FILE \*fp; char c;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fopen</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">FILE</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">,</span><span class="token string" style="color:#e3116c">"r"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token operator" style="color:#393A34">=</span><span class="token function" style="color:#d73a49">getc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">EOF</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%c"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fclose</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> ```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>C</category>
        </item>
        <item>
            <title><![CDATA[All About Design Patterns]]></title>
            <link>https://nagvbt.github.io/blog/2012/01/18/all-about-design-patterns</link>
            <guid>https://nagvbt.github.io/blog/2012/01/18/all-about-design-patterns</guid>
            <pubDate>Wed, 18 Jan 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Definition: Design Patterns represent solutions to problems that arise when developing software within a particular context.]]></description>
            <content:encoded><![CDATA[<p><strong>Definition:</strong> Design Patterns represent solutions to problems that arise when developing software within a particular context.</p><p>Patterns help you learn from other's successes, instead of your own failures. Mark Johnson (cited by Bruce Eckel)</p><p><strong>Types of Design&nbsp;Patterns</strong> There are three types of design patterns</p><ol><li>Creational Patterns: Creational Patterns deals with initializing and configuring classes and objects</li><li>Structural Patterns: Structural Patterns deals with decoupling the interface and implementation of classes and objects</li><li>Behavioral Patterns: Behavioral Patterns deals with dynamic interactions among societies of classes and objects</li></ol><p>These three design patters are divided in to 22 different kinds of patterns as shown below.</p>]]></content:encoded>
            <category>Design Patterns</category>
        </item>
        <item>
            <title><![CDATA[Design Pattern: C# Singleton]]></title>
            <link>https://nagvbt.github.io/blog/2012/01/18/design-pattern-c-singleton</link>
            <guid>https://nagvbt.github.io/blog/2012/01/18/design-pattern-c-singleton</guid>
            <pubDate>Wed, 18 Jan 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[//Memeber Functions]]></description>
            <content:encoded><![CDATA[<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">namespace CSharp { //Singleton: Ensure a class only has one instance, //and provide a global point of access to it. class Singleton { //Member Variable private static Singleton instance = null;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>//Memeber Functions
private Singleton()
{
}</p><p>public static Singleton Instance()
{
if(instance == null )
{
instance = new Singleton ();
}</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    return instance;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  }</p><p>  public void print()
{
Console.WriteLine("Singleton Class" );
}</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">};</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Program { static void Main(string\[\] args) { Singleton n = Singleton .Instance(); n.print();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  Singleton p = Singleton .Instance();
p.print();
}</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>csharp</category>
            <category>Design Patterns</category>
        </item>
        <item>
            <title><![CDATA[Restore a Database Backup in MS SQL Server 2008]]></title>
            <link>https://nagvbt.github.io/blog/2012/01/18/how-to-restore-a-database-backup-using-bak-file-in-ms-sql-server-2008</link>
            <guid>https://nagvbt.github.io/blog/2012/01/18/how-to-restore-a-database-backup-using-bak-file-in-ms-sql-server-2008</guid>
            <pubDate>Wed, 18 Jan 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[How to Restore a Database Backup Using .bak file in MS SQL Server 2008]]></description>
            <content:encoded><![CDATA[<p>How to Restore a Database Backup Using .bak file in MS SQL Server 2008</p><p>.bak files are database backups we can restore the Database backup using SQL Server Management Studio.</p><p>A. Open SQL Server Management Studio in Object Explorer Right Click on 'Databases' Node and select 'Restore Database'</p><p>B.&nbsp;'Restore Database' Dialog will be displayed on the&nbsp;<strong>General</strong>&nbsp;page</p><ol><li>The name of the restoring database appears in the&nbsp;<strong>To database</strong>&nbsp;list box. To create a new database, enter its name in the list box.</li><li>Select 'From device'</li><li>Click button to&nbsp;display 'Specify Backup' Dialog</li><li>Click 'Add'&nbsp; to browse the .bak file from the&nbsp;directory and click OK</li></ol>]]></content:encoded>
            <category>ms-sql-server</category>
        </item>
        <item>
            <title><![CDATA[Simple Windows Form in C#]]></title>
            <link>https://nagvbt.github.io/blog/2012/01/18/simple-windows-form-in-c</link>
            <guid>https://nagvbt.github.io/blog/2012/01/18/simple-windows-form-in-c</guid>
            <pubDate>Wed, 18 Jan 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Minimal code to write a c# windows form:]]></description>
            <content:encoded><![CDATA[<p>Minimal code to write a c# windows form:</p><div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">namespace ConsoleFormApp { class MyWindow : Form { public MyWindow() { this.Text = "First Form"; } }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Program { static void Main(string\[\] args) { Application.Run(new MyWindow()); } } } ```</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>csharp</category>
            <category>winforms</category>
        </item>
        <item>
            <title><![CDATA[How to change the name of the Debug Version of a DLL or Exe]]></title>
            <link>https://nagvbt.github.io/blog/2012/01/05/how-to-change-the-name-of-the-debug-version-of-a-dll-or-exe</link>
            <guid>https://nagvbt.github.io/blog/2012/01/05/how-to-change-the-name-of-the-debug-version-of-a-dll-or-exe</guid>
            <pubDate>Thu, 05 Jan 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[Its very useful to name the Debug version of the exe or DLL with letter "D" appended inoder to avoid confisuion between release and debug version of binaries]]></description>
            <content:encoded><![CDATA[<p>Its very useful to name the Debug version of the exe or DLL with letter "D" appended inoder to avoid confisuion between release and debug version of binaries</p><p><strong>Steps:</strong></p><p>1<!-- -->.<!-- --> Create a console application with name "MyProject"</p><p>2<!-- -->.<!-- --> To change the output file name in debug configuration</p><p>place&nbsp;<strong>D</strong>&nbsp;as shown in below figure</p><p>Project Project Properties -&gt; Linker -&gt; General -&gt; Output File</p><p><strong>Release Version:</strong> MyProject Application Name: c:MyProjectReleaseMyProject.exe <strong>Debug Version:</strong> MyProject Application Name: c:MyProjectDebugMyProjectD.exe</p>]]></content:encoded>
            <category>cpp</category>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[Reading a file using JavaScript]]></title>
            <link>https://nagvbt.github.io/blog/2012/01/05/reading-a-file-using-javascript</link>
            <guid>https://nagvbt.github.io/blog/2012/01/05/reading-a-file-using-javascript</guid>
            <pubDate>Thu, 05 Jan 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[\[source language="javascript"\] function ReadFile(filename) { try { var fso = new ActiveXObject("Scripting.FileSystemObject"); var fh = fso.OpenTextFile(filename,1); var contents = fh.ReadAll(); fh.Close(); return contents; } catch (Exception) { var msg = "ERROR " +Exception.description; alert(msg); return msg; } } \[/source\]]]></description>
            <content:encoded><![CDATA[<p>[<!-- -->source language="javascript"<!-- -->]<!-- --> function ReadFile(filename) { try { var fso = new ActiveXObject("Scripting.FileSystemObject"); var fh = fso.OpenTextFile(filename,1); var contents = fh.ReadAll(); fh.Close(); return contents; } catch (Exception) { var msg = "ERROR:"+"""+filename+ """+ ": " +Exception.description; alert(msg); return msg; } } <!-- -->[<!-- -->/source<!-- -->]</p>]]></content:encoded>
            <category>javascript</category>
        </item>
        <item>
            <title><![CDATA[Wishing you all Merry Christmas]]></title>
            <link>https://nagvbt.github.io/blog/2011/12/24/happy-christmas</link>
            <guid>https://nagvbt.github.io/blog/2011/12/24/happy-christmas</guid>
            <pubDate>Sat, 24 Dec 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[Wish you and your family a Merry Christmas. May this good times  become the golden memories of tomorrow for all of you. Wish you lots of love, joy and happiness.]]></description>
            <content:encoded><![CDATA[<p>Wish you and your family a Merry Christmas. May this good times&nbsp; become the golden memories of tomorrow for all of you. Wish you lots of love, joy and happiness.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Single Document Interface Class Diagram]]></title>
            <link>https://nagvbt.github.io/blog/2011/10/22/sdi_classdiagra</link>
            <guid>https://nagvbt.github.io/blog/2011/10/22/sdi_classdiagra</guid>
            <pubDate>Sat, 22 Oct 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[A CSDIApp MFC application will have a single CWinApp class object. This holds a CDocManager object which is used by the MFC to handle all the CDocTemplate objects that we registered with the framework.]]></description>
            <content:encoded><![CDATA[<p>A CSDIApp MFC application will have a single CWinApp class object. This holds a CDocManager object which is used by the MFC to handle all the CDocTemplate objects that we registered with the framework.</p><p>The CWinApp object also creates a CMainFrame object which is the main window of CSDIApp application.</p><p>Every time if we open/create a document in CSDIApp application, a CDocument object of the right type will be created. A pointer to CDocument object will be stored in a list under the corresponding CDocTemplate object.</p>]]></content:encoded>
            <category>MFC</category>
            <category>vc</category>
        </item>
        <item>
            <title><![CDATA[Steve Jobs Documentary & Best videos]]></title>
            <link>https://nagvbt.github.io/blog/2011/10/09/steve-jobs-documentary-best-videos</link>
            <guid>https://nagvbt.github.io/blog/2011/10/09/steve-jobs-documentary-best-videos</guid>
            <pubDate>Sun, 09 Oct 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[Steve Jobs]]></description>
            <content:encoded><![CDATA[<p><a href="http://www.flickr.com/photos/21250037@N03/2162204493/" target="_blank" rel="noopener noreferrer" title="Steve Jobs by skitty25, on Flickr"><img loading="lazy" alt="Steve Jobs" src="/assets/images/2162204493_affe86b662-df8b18747d6fb14c932618a0425e8af9.jpg" width="388" height="500" class="img_ev3q"></a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="documentary"><strong>Documentary</strong><a href="#documentary" class="hash-link" aria-label="Direct link to documentary" title="Direct link to documentary">​</a></h3><h1>Documentary Part 1</h1><p><a href="http://www.youtube.com/watch?v=QgiEG-NsAB0&amp;feature=related" target="_blank" rel="noopener noreferrer">[<!-- -->youtube=</a><a href="http://www.youtube.com/watch?v=QgiEG-NsAB0&amp;feature=related" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?v=QgiEG-NsAB0&amp;feature=related</a>]</p><h1>Documentary Part 2</h1><p><a href="http://www.youtube.com/watch?NR=1&amp;v=3zvBLxvg7ds" target="_blank" rel="noopener noreferrer">[<!-- -->youtube=</a><a href="http://www.youtube.com/watch?NR=1&amp;v=3zvBLxvg7ds" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?NR=1&amp;v=3zvBLxvg7ds</a>]</p><h1>Documentary Part 3</h1><p><a href="http://www.youtube.com/watch?NR=1&amp;v=6tnz3NpR1xg" target="_blank" rel="noopener noreferrer">[<!-- -->youtube=</a><a href="http://www.youtube.com/watch?NR=1&amp;v=6tnz3NpR1xg" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?NR=1&amp;v=6tnz3NpR1xg</a>]</p><h1>Documentary Part 4</h1><p><a href="http://www.youtube.com/watch?NR=1&amp;v=K7tdqL_M87Y" target="_blank" rel="noopener noreferrer">[<!-- -->youtube=</a><a href="http://www.youtube.com/watch?NR=1&amp;v=K7tdqL_M87Y" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?NR=1&amp;v=K7tdqL<!-- -->_<!-- -->M87Y</a>]</p><h1>Documentary Part 5</h1><p>[<!-- -->youtube=<a href="http://www.youtube.com/watch?NR=1&amp;v=TUXUbVG-Lx8" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?NR=1&amp;v=TUXUbVG-Lx8</a>]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="stanford-commencement-address"><strong>Stanford Commencement Address</strong><a href="#stanford-commencement-address" class="hash-link" aria-label="Direct link to stanford-commencement-address" title="Direct link to stanford-commencement-address">​</a></h3><h1>Steve Jobs' Stanford Commencement Addres</h1><p><a href="http://www.youtube.com/watch?v=UF8uR6Z6KLc" target="_blank" rel="noopener noreferrer">[<!-- -->youtube=</a><a href="http://www.youtube.com/watch?v=UF8uR6Z6KLc" target="_blank" rel="noopener noreferrer">http://www.youtube.com/watch?v=UF8uR6Z6KLc</a>]</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Memory Layout of a class (C++) Object]]></title>
            <link>https://nagvbt.github.io/blog/2011/09/18/memory-layout-of-a-class-c-object</link>
            <guid>https://nagvbt.github.io/blog/2011/09/18/memory-layout-of-a-class-c-object</guid>
            <pubDate>Sun, 18 Sep 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[Let us know how the members of a class are stored in the C++ class object.]]></description>
            <content:encoded><![CDATA[<p>Let us know how the members of a class are stored in the C++ class object.</p><ol><li>All Static Members Functions, Static member variables and Non static Members Functions are hoisted outside the class object.</li><li>All non static member variables are stored in the class object.</li><li>All virtual functions are part of Virtual Table. And a pointer (vptr) to the created Virtual Table is inserted with in each class object.</li></ol><p><strong>Sample Program:</strong></p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Sample</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token function" style="color:#d73a49">Sample</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token keyword" style="color:#00009f">virtual</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">~</span><span class="token function" style="color:#d73a49">Sample</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token keyword" style="color:#00009f">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">virtualFun1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token keyword" style="color:#00009f">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">virtualFun2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">normalFun</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getCount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//static function</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> nCount</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">private</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> nCount</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Sample obj</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">source\</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>Cpp</category>
        </item>
        <item>
            <title><![CDATA[Size Matters (C++)]]></title>
            <link>https://nagvbt.github.io/blog/2011/09/18/size-matters-c</link>
            <guid>https://nagvbt.github.io/blog/2011/09/18/size-matters-c</guid>
            <pubDate>Sun, 18 Sep 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[C++ class have]]></description>
            <content:encoded><![CDATA[<p>C++ class have </p><p>A. Data Members
B. Members Functions</p><p><strong>A. Data Members</strong></p><ol><li>Static Data Member The size of a class object with only Static data members irrespective of Data Type (say float, long e.tc.) is&nbsp;equal to <a href="http://nagvbt.blogspot.com/2011/09/18/why-size-of-an-empty-c-class-not-zero/" target="_blank" rel="noopener noreferrer">one Byte (~ size of Empty class)</a> </li></ol><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">CStaticDataMemberCls</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">float</span><span class="token plain"> f</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> CStaticDataMemberCls objSDMC</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="2"><li><p>Non Static Data Member The size of a class with non static data members is equal to sum of the data type size i.e. size of int = 4 size of float = 4 so total = 8</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">CNonStaticDataMemberCls</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">float</span><span class="token plain"> f</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><p>void main() { CNonStaticDataMemberCls objNSDMC; cout<!-- -->&lt;<!-- -->} ``` <strong>B. Members Functions</strong></p><ol><li>Static Members Functions</li><li>Non Static Members Functions</li></ol><p>As Static Members Functions and Non static Members Functions are hoisted outside the class object. The size of the class will also be equal to <a href="http://nagvbt.blogspot.com/2011/09/18/why-size-of-an-empty-c-class-not-zero/" target="_blank" rel="noopener noreferrer">one Byte (~ size of Empty class)</a> </p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">CMemberFunctionsCls</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fun1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">staticFun</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        CMemberFunctionsCls objMFC</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cout</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="3"><li><p>Virtual Members Functions If a class consists of virtual functions a table of pointers(i.e. Virtual Table) to virtual functions is generated for each class. And a pointer (vptr) to the created Virtual Table is inserted with in each class object. So the size of CVirtualFunctionCls object will be 4 Bytes which is nothing but a size of vptr.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">CVirtualFunctionCls</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">virtual</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">~</span><span class="token function" style="color:#d73a49">CVirtualFunctionCls</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">virtualFun1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">virtualFun2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><p>void main() { CVirtualFunctionCls objVFC; cout<!-- -->&lt;<!-- -->} </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Let us see the class with all the above members</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```cpp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Sample</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     Sample() {};</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     virtual ~Sample() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     virtual void virtualFun1() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     virtual void virtualFun2() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     void normalFun() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     static int getCount() //static function</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       return nCount;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">private:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     int i;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     static int nCount;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">};</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">void main()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Sample obj;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cout&amp;lt;}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>cpp</category>
        </item>
        <item>
            <title><![CDATA[Variable arguments handling in C/C++]]></title>
            <link>https://nagvbt.github.io/blog/2011/09/18/variable-arguments-handling</link>
            <guid>https://nagvbt.github.io/blog/2011/09/18/variable-arguments-handling</guid>
            <pubDate>Sun, 18 Sep 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[Use va\list to accept a VARYING NUMBER OF ARGUMENTS for any function in C/C++. printf(const char\* \Format, ...) is a real time function which uses va\_list.]]></description>
            <content:encoded><![CDATA[<p>Use va<!-- -->_<!-- -->list to accept a VARYING NUMBER OF ARGUMENTS for any function in C/C++. printf(const char<!-- -->*<!-- --> <!-- -->_<!-- -->Format, ...) is a real time function which uses va<!-- -->_<!-- -->list.</p><p>For using va<!-- -->_<!-- -->list we need to know about the following macros</p><p>va<!-- -->_<!-- -->start Initialize a variable argument list (macro) va<!-- -->_<!-- -->arg Retrieve next argument (macro) va<!-- -->_<!-- -->end End using variable argument list (macro)</p><p>The sample explains how to use VARYING NUMBER OF ARGUMENTS</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">&lt;stdarg.h&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> sum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> temp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">va\_list va</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//1. Declare a va\_list</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">va\</span><span class="token function" style="color:#d73a49">_start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">va</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//2. Initialise</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> temp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> va\</span><span class="token function" style="color:#d73a49">_arg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">va</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//3. Retrieve sum = temp+sum; }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">va\</span><span class="token function" style="color:#d73a49">_end</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">va</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//4. END</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> sum</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"sum=%d n "</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//OutPut: 8 }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">source\</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>cpp</category>
        </item>
        <item>
            <title><![CDATA[Why size of an empty C++ class not zero?]]></title>
            <link>https://nagvbt.github.io/blog/2011/09/18/why-size-of-an-empty-c-class-not-zero</link>
            <guid>https://nagvbt.github.io/blog/2011/09/18/why-size-of-an-empty-c-class-not-zero</guid>
            <pubDate>Sun, 18 Sep 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[To ensure that the addresses of two different objects will be different C++ compiler will allocate one byte of memory. The below sample code explains clearly. Because of this behaviour the addresses of class X objects are not equal even though there is no data present in the class X.]]></description>
            <content:encoded><![CDATA[<p>To ensure that the addresses of two different objects will be different C++ compiler will allocate one byte of memory. The below sample code explains clearly. Because of this behaviour the addresses of class X objects are not equal even though there is no data present in the class X.</p><div class="language-cpp true codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Y</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> X objX1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> objX2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> Y objY</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cout</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token string" style="color:#e3116c">"size of objX1: "</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token keyword" style="color:#00009f">sizeof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">objX1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain">endl</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//Output: 1 cout&lt;&lt;"size of objY: "&lt;&lt;sizeof(objY)&lt;&lt;endl; //Output: 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//Addresses cout&lt;&lt;"Address of objX1: "&lt;&lt;&amp;objX1&lt;&lt;endl; cout&lt;&lt;"Address of objX2: "&lt;&lt;&amp;objX2&lt;&lt;endl;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cout</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token string" style="color:#e3116c">"Address of objY: "</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">objY</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain">endl</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">objX1 </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">objX2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> cout</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token string" style="color:#e3116c">"Never Happens"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> \</span><span class="token punctuation" style="color:#393A34">[</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">source\</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>cpp</category>
        </item>
        <item>
            <title><![CDATA[Console Application Event Handling]]></title>
            <link>https://nagvbt.github.io/blog/2011/09/03/console-application-event-handling</link>
            <guid>https://nagvbt.github.io/blog/2011/09/03/console-application-event-handling</guid>
            <pubDate>Sat, 03 Sep 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[Using SetConsoleCtrlHandler we can Add an application-defined HandlerRoutine function say myConsoleHandler.]]></description>
            <content:encoded><![CDATA[<p>Using <strong>SetConsoleCtrlHandler</strong> we can Add an application-defined HandlerRoutine function say myConsoleHandler.</p><p><strong>Note:</strong> If the second parameter is TRUE, the handler is added; if it is FALSE, the handler is removed by SetConsoleCtrlHandler function.</p><p><strong>Sample code is Shown Below</strong></p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"stdafx.h"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">"windows.h"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">myConsoleHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">DWORD ctrlEvent</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">switch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctrlEvent</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> CTRL\_CLOSE\_EVENT</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">MessageBox</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token string" style="color:#e3116c">"Program being closed!"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token string" style="color:#e3116c">"CTRL\_CLOSE\_EVENT"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">MB\_OK</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> CTRL\_C\_EVENT</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">MessageBox</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token string" style="color:#e3116c">"Copy Event!"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token string" style="color:#e3116c">"CTRL\_C\_EVENT"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">MB\_OK</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> argc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> \_TCHAR\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> argv\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SetConsoleTitle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Console Event Handler Demo"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">SetConsoleCtrlHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">PHANDLER\_ROUTINE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">myConsoleHandler</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> TRUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"nThe Control Handler is installed.n"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"n -- Now try pressing Ctrl+C or closing the console..."</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           </span><span class="token comment" style="color:#999988;font-style:italic">//Do Nothing</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"nERROR: Could not set control handler"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
        </item>
        <item>
            <title><![CDATA[How to obtain a pointer to various objects in MFC]]></title>
            <link>https://nagvbt.github.io/blog/2011/09/03/MFC-pointer</link>
            <guid>https://nagvbt.github.io/blog/2011/09/03/MFC-pointer</guid>
            <pubDate>Sat, 03 Sep 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[The Table is very Handy when writing MFC SDI or MDI Applications]]></description>
            <content:encoded><![CDATA[<p>The Table is very Handy when writing MFC SDI or MDI Applications</p><p><strong>Note:</strong> To access only the current view, the document class For SDI can call <code>AfxGetMainWnd()-&gt;GetActiveView()</code> For MDI can call <code>AfxGetMainWnd()-&gt;MDIGetActive()-&gt;GetActiveView()</code></p>]]></content:encoded>
            <category>MFC</category>
        </item>
        <item>
            <title><![CDATA[MFC:Fill Background color of the Dialog]]></title>
            <link>https://nagvbt.github.io/blog/2011/09/03/mfcdailogbckcolor</link>
            <guid>https://nagvbt.github.io/blog/2011/09/03/mfcdailogbckcolor</guid>
            <pubDate>Sat, 03 Sep 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[MFC Tip: To fill the Background color of the Dialog and get the background of the controls to look correct]]></description>
            <content:encoded><![CDATA[<p>MFC Tip: To fill the Background color of the Dialog and get the background of the controls to look correct</p><ol><li>Handle the ON_WM_ERASEBKGND Message and write the following code<div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> BOOL </span><span class="token class-name">CTNV_MFCDialogDemoDlg</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">OnEraseBkgnd</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CDC\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pDC</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> CRect r</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//GetClientRect gets the width &amp; height of the client area of the Dialog</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetClientRect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">r</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> CBrush </span><span class="token function" style="color:#d73a49">br</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">RGB</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">255</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> pDC</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">SelectObject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">br</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> pDC</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">FillRect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r</span><span class="token punctuation" style="color:#393A34">,</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">br</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//Make sure to return TRUE;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//return CDialogEx::OnEraseBkgnd(pDC);</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> TRUE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li>To &nbsp;get the background of the controls to look correct Handle the ON_WM_CTLCOLOR Message and write the following code - Make sure to return the Brush Handle which was created same as a color of Dialog Background.<div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">HBRUSH </span><span class="token class-name">CTNV_MFCDialogDemoDlg</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">OnCtlColor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CDC\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pDC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> CWnd</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pWnd</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> UINT nCtlColor</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//HBRUSH hbr = CDialogEx::OnCtlColor(pDC, pWnd, nCtlColor);</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//return hbr;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> //Make sure to return the Brush color should be same as Dialog Background color </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> CBrush br(RGB(0,255,0));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> return (HBRUSH)br; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
        </item>
        <item>
            <title><![CDATA[XAML Auto formatting in Visual Studio 2010]]></title>
            <link>https://nagvbt.github.io/blog/2011/08/24/xaml-auto-formatting-in-visual-studio-2010</link>
            <guid>https://nagvbt.github.io/blog/2011/08/24/xaml-auto-formatting-in-visual-studio-2010</guid>
            <pubDate>Wed, 24 Aug 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[To Auto format XAML code in a readable and organized way]]></description>
            <content:encoded><![CDATA[<p>To Auto format XAML code in a readable and organized way</p><ol><li>Open Visual Studio 2010</li><li>Go to Menu: Tools-&gt;Options</li><li>Select Text Editor |-&gt;XAML |-&gt;Formatting |-&gt;Spacing</li><li>Set the options 1 &amp; 2 as shown in the below image</li></ol><p><strong>Sample Code:</strong></p><div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;Window x:Class="WpfApplication1.MainWindow" xmlns="[http://schemas.microsoft.com/winfx/2006/xaml/presentation"](http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;quot); xmlns:x="[http://schemas.microsoft.com/winfx/2006/xaml"](http://schemas.microsoft.com/winfx/2006/xaml&amp;quot); Title="MainWindow" Height="350" Width="525"&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Grid</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">&lt;!--Before Auto formatting --&gt;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">Content</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">Button</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">Height</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">23</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">HorizontalAlignment</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">Left</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">Margin</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">66,52,0,0</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">Name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">button1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">VerticalAlignment</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">Top</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">Width</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">75</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">&lt;!--After Auto formatting --&gt;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">Content</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">Button</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">Height</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">23</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">HorizontalAlignment</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">Left</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">Margin</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">248,68,0,0</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">Name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">button2</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">VerticalAlignment</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">Top</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">Width</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">75</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"> </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Grid</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Window</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>WPF</category>
        </item>
        <item>
            <title><![CDATA[LightSwitch 2011]]></title>
            <link>https://nagvbt.github.io/blog/2011/07/27/lightswitch-2011</link>
            <guid>https://nagvbt.github.io/blog/2011/07/27/lightswitch-2011</guid>
            <pubDate>Wed, 27 Jul 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[Microsoft® Visual Studio® LightSwitch™ is used to build business applications for the desktop and cloud and focused on making it easy to develop line of business applications. It is based on data + screens which is common for LOB Applications.]]></description>
            <content:encoded><![CDATA[<p>Microsoft® Visual Studio® LightSwitch™ is used to build business applications for the desktop and cloud and focused on making it easy to develop line of business applications. It is based on data + screens which is common for LOB Applications.</p><p><strong>Here are important links:</strong> Download a trial of LightSwitch 2011 for 90 days :</p><p><a href="http://www.microsoft.com/download/en/confirmation.aspx?id=26830" target="_blank" rel="noopener noreferrer"></a><a href="http://www.microsoft.com/download/en/confirmation.aspx?id=26830" target="_blank" rel="noopener noreferrer">http://www.microsoft.com/download/en/confirmation.aspx?id=26830</a></p><p>IS0 format: <a href="http://go.microsoft.com/fwlink/?LinkId=216813" target="_blank" rel="noopener noreferrer"></a><a href="http://go.microsoft.com/fwlink/?LinkId=216813" target="_blank" rel="noopener noreferrer">http://go.microsoft.com/fwlink/?LinkId=216813</a> LightSwitch Developer Center: <a href="http://msdn.microsoft.com/en-US/lightswitch/ff938857" target="_blank" rel="noopener noreferrer"></a><a href="http://msdn.microsoft.com/en-US/lightswitch/ff938857" target="_blank" rel="noopener noreferrer">http://msdn.microsoft.com/en-US/lightswitch/ff938857</a></p><p>OverView: <a href="http://www.microsoft.com/visualstudio/en-us/lightswitch/overview" target="_blank" rel="noopener noreferrer"></a><a href="http://www.microsoft.com/visualstudio/en-us/lightswitch/overview" target="_blank" rel="noopener noreferrer">http://www.microsoft.com/visualstudio/en-us/lightswitch/overview</a></p>]]></content:encoded>
            <category>visual-studio</category>
        </item>
        <item>
            <title><![CDATA[Installing MS SQL Server 2008 in Windows 7 O.S]]></title>
            <link>https://nagvbt.github.io/blog/2011/05/31/mssql</link>
            <guid>https://nagvbt.github.io/blog/2011/05/31/mssql</guid>
            <pubDate>Tue, 31 May 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[INSTALL THE FOLLOWING IN ORDER for Windows 7 O.S]]></description>
            <content:encoded><![CDATA[<p>INSTALL THE FOLLOWING IN ORDER for Windows 7 O.S</p><p> <strong>1) Microsoft .NET Framework 4 (Standalone Installer) - dotNetFx40<!-- -->_<!-- -->Full<!-- -->_<!-- -->x86<!-- -->_<!-- -->x64.exe</strong> <a href="http://www.microsoft.com/downloads/en/details.aspx?FamilyID=0a391abd-25c1-4fc0-919f-b21f31ab88b7&amp;displaylang=en" target="_blank" rel="noopener noreferrer"></a><a href="http://www.microsoft.com/downloads/en/details.aspx?FamilyID=0a391abd-25c1-4fc0-919f-b21f31ab88b7&amp;displaylang=en" target="_blank" rel="noopener noreferrer">http://www.microsoft.com/downloads/en/details.aspx?FamilyID=0a391abd-25c1-4fc0-919f-b21f31ab88b7&amp;displaylang=en</a></p><p><strong>2) Install SQL Server 2008</strong> a. Throws firewall warning - Ignore it and proceed b. Don't open the sql server management studio</p><p><strong>3) Download and instal SQLServer2008SP1 -</strong> <strong>SQLServer2008SP1-KB968369-x64-ENU.exe</strong> <a href="http://www.microsoft.com/downloads/en/details.aspx?FamilyID=66ab3dbb-bf3e-4f46-9559-ccc6a4f9dc19&amp;displaylang=en" target="_blank" rel="noopener noreferrer"></a><a href="http://www.microsoft.com/downloads/en/details.aspx?FamilyID=66ab3dbb-bf3e-4f46-9559-ccc6a4f9dc19&amp;displaylang=en" target="_blank" rel="noopener noreferrer">http://www.microsoft.com/downloads/en/details.aspx?FamilyID=66ab3dbb-bf3e-4f46-9559-ccc6a4f9dc19&amp;displaylang=en</a></p><p><strong>4) Download and install SQLServer2008SP2 -</strong> <strong>SQLServer2008SP2-KB2285068-x64-ENU.exe</strong> <a href="http://www.microsoft.com/downloads/en/details.aspx?FamilyID=8fbfc1de-d25e-4790-88b5-7dda1f1d4e17" target="_blank" rel="noopener noreferrer"></a><a href="http://www.microsoft.com/downloads/en/details.aspx?FamilyID=8fbfc1de-d25e-4790-88b5-7dda1f1d4e17" target="_blank" rel="noopener noreferrer">http://www.microsoft.com/downloads/en/details.aspx?FamilyID=8fbfc1de-d25e-4790-88b5-7dda1f1d4e17</a></p>]]></content:encoded>
            <category>ms-sql-server</category>
        </item>
        <item>
            <title><![CDATA[Logging using Log4Net in ASP.Net]]></title>
            <link>https://nagvbt.github.io/blog/2011/04/30/logging-using-log4net-in-asp-net</link>
            <guid>https://nagvbt.github.io/blog/2011/04/30/logging-using-log4net-in-asp-net</guid>
            <pubDate>Sat, 30 Apr 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[Log4net is an Open Source utility used for log/report statements to various kinds of output targets Namely.]]></description>
            <content:encoded><![CDATA[<p>Log4net is an Open Source utility used for log/report statements to various kinds of output targets Namely.</p><ul><li>TextFile</li><li>EventViewer</li><li>SQL Server</li><li>Email<h2 class="anchor anchorWithStickyNavbar_LWe7" id="integrating-log4net-in-simple-4-steps"><strong>Integrating Log4net in simple 4 steps</strong><a href="#integrating-log4net-in-simple-4-steps" class="hash-link" aria-label="Direct link to integrating-log4net-in-simple-4-steps" title="Direct link to integrating-log4net-in-simple-4-steps">​</a></h2>  Step 1: Add a reference of <em>Log4net.dll</em> to the project. Step 2: Add <em>Global.asax</em> to the project and add the following code:</li></ul><p><code>cs log4net.Config.XmlConfigurator.Configure(); </code></p><p>a. In the web.config file, under Configuration-&gt;ConfigSections, add the following section:</p><p><code>xml &amp;lt;section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/&amp;gt; </code></p><p>b. Add a new section "“ &amp; add the required appenders (output target) configuration sections in the following way:</p><p><code>xml &amp;lt;configSections&amp;gt; &amp;lt;section name="&amp;lt;span class=" hiddenspellerror="" pre=""&amp;gt;log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/&amp;gt;&amp;lt;/section&amp;gt; &amp;lt;/configSections&amp;gt; &amp;lt;log4net debug="true"&amp;gt; &amp;lt;appender name="LogFileAppender" type="log4net.Appender.FileAppender"&amp;gt; &amp;lt;param name="File" value="C:\\Logs\\TestLog.log"/&amp;gt; &amp;lt;layout type="log4net.Layout.PatternLayout"&amp;gt; &amp;lt;/layout&amp;gt; &amp;lt;/appender&amp;gt; : : &amp;lt;logger name="File"&amp;gt; &amp;lt;level value="All"/&amp;gt; &amp;lt;appender-ref ref="LogFileAppender"/&amp;gt; &amp;lt;/logger&amp;gt; &amp;lt;/log4net &amp;gt; </code></p><p>Step 3: call the appropriate method in the class .<strong>cs file where we log</strong> </p><div class="language-cs true codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if (!IsPostBack) { XmlDataSource1.Data = GetMenuData(); }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log.Info("Starting page load"); log.Debug("This a test debug message"); log.Error("Page Load failed : ");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">evlog.Info("Starting page load"); evlog.Debug("This a test debug message"); evlog.Error("Page Load failed : ");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sqllog.Info("Starting page load"); sqllog.Debug("This a test debug message"); sqllog.Error("Page Load failed : ");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}&lt;/code&gt;&lt;/pre&gt; } ```</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">**Step 3: Use** **Database script**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">If you want to target the logging information in the SQL Server use the following script create Table in the existing database.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\[sourcecode language="sql"\] CREATE TABLE \[dbo\].\[Log\] ( \[Id\] \[int\] IDENTITY (1, 1) NOT NULL, \[Date\] \[datetime\] NOT NULL, \[Thread\] \[varchar\] (255) NOT NULL, \[Level\] \[varchar\] (50) NOT NULL, \[Logger\] \[varchar\] (255) NOT NULL, \[Message\] \[varchar\] (4000) NOT NULL, \[Exception\] \[varchar\] (2000) NULL ) ```</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## **OUTPUT Screens**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Download **log4Net**: [](http://logging.apache.org/log4net/download.html)[http://logging.apache.org/log4net/download.html](http://logging.apache.org/log4net/download.html)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">The Sample uses NorthWind Database download it from : [](http://www.microsoft.com/downloads/en/details.aspx?FamilyID=06616212-0356-46a0-8da2-eebc53a68034&amp;displaylang=en "http://www.microsoft.com/downloads/en/details.aspx?FamilyID=06616212-0356-46a0-8da2-eebc53a68034&amp;displaylang=en")[http://www.microsoft.com/downloads/en/details.aspx?FamilyID=06616212-0356-46a0-8da2-eebc53a68034&amp;displaylang=en](http://www.microsoft.com/downloads/en/details.aspx?FamilyID=06616212-0356-46a0-8da2-eebc53a68034&amp;amp;displaylang=en)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Code Snippets in VS2008 for C#]]></title>
            <link>https://nagvbt.github.io/blog/2011/04/29/snippets-in-vs2008</link>
            <guid>https://nagvbt.github.io/blog/2011/04/29/snippets-in-vs2008</guid>
            <pubDate>Fri, 29 Apr 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[Usage:]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="usage">Usage:<a href="#usage" class="hash-link" aria-label="Direct link to Usage:" title="Direct link to Usage:">​</a></h2><p>Enter snippet Keyword shown below and press TAB-TAB to expand the snippet</p><table class="ArticleTable"><tbody><tr><td valign="top" width="74"><strong>Snippet Keyword</strong></td><td valign="top" width="542"><strong>Expanded Snippet</strong></td></tr><tr><td valign="top" width="74"><code>#if</code></td><td valign="top" width="542">Code snippet for <code>#if</code></td></tr><tr><td valign="top" width="74"><code>#region</code></td><td valign="top" width="542">Code snippet for <code>#region</code></td></tr><tr><td valign="top" width="74"><code>attribute</code></td><td valign="top" width="542">Code snippet for attribute using recommended pattern</td></tr><tr><td valign="top" width="74"><code>checked</code></td><td valign="top" width="542">Code snippet for <code>checked</code> block</td></tr><tr><td valign="top" width="74"><code>class</code></td><td valign="top" width="542">Code snippet for <code>class</code></td></tr><tr><td valign="top" width="74"><code>ctor</code></td><td valign="top" width="542">Code snippet for constructor</td></tr><tr><td valign="top" width="74"><code>~</code></td><td valign="top" width="542">Code snippet for destructor</td></tr><tr><td valign="top" width="74"><code>cw</code></td><td valign="top" width="542">Code snippet for <code>Console.WriteLine</code></td></tr><tr><td valign="top" width="74"><code>do</code></td><td valign="top" width="542">Code snippet for <code>do…while</code> loop</td></tr><tr><td valign="top" width="74"><code>else</code></td><td valign="top" width="542">Code snippet for <code>else</code> statement</td></tr><tr><td valign="top" width="74"><code>enum</code></td><td valign="top" width="542">Code snippet for <code>enum</code></td></tr><tr><td valign="top" width="74"><code>equals</code></td><td valign="top" width="542">Code snippet for implementing <code>Equals()</code> according to guidelines</td></tr><tr><td valign="top" width="74"><code>exception</code></td><td valign="top" width="542">Code snippet for exception</td></tr><tr><td valign="top" width="74"><code>for</code></td><td valign="top" width="542">Code snippet for ‘<code>for</code>’ loop</td></tr><tr><td valign="top" width="74"><code>foreach</code></td><td valign="top" width="542">Code snippet for <code>foreach</code> statement</td></tr><tr><td valign="top" width="74"><code>forr</code></td><td valign="top" width="542">Code snippet for reverse ‘<code>for</code>’ loop</td></tr><tr><td valign="top" width="74"><code>if</code></td><td valign="top" width="542">Code snippet for <code>if</code> statement</td></tr><tr><td valign="top" width="74"><code>indexer</code></td><td valign="top" width="542">Code snippet for indexer</td></tr><tr><td valign="top" width="74"><code>interface</code></td><td valign="top" width="542">Code snippet for interface</td></tr><tr><td valign="top" width="74"><code>invoke</code></td><td valign="top" width="542">Code snippet for safely invoking an event</td></tr><tr><td valign="top" width="74"><code>iterator</code></td><td valign="top" width="542">Code snippet for a simple iterator</td></tr><tr><td valign="top" width="74"><code>iterindex</code></td><td valign="top" width="542">Code snippet for ‘named’ iterator/indexer pair using a nested class</td></tr><tr><td valign="top" width="74"><code>lock</code></td><td valign="top" width="542">Code snippet for <code>lock</code> statement</td></tr><tr><td valign="top" width="74"><code>mbox</code></td><td valign="top" width="542">Code snippet for <code>MessageBox.Show</code></td></tr><tr><td valign="top" width="74"><code>namespace</code></td><td valign="top" width="542">Code snippet for <code>namespace</code></td></tr><tr><td valign="top" width="74"><code>prop</code></td><td valign="top" width="542">Code snippet for an automatically implemented property</td></tr><tr><td valign="top" width="74"><code>propg</code></td><td valign="top" width="542">Code snippet for an automatically implemented property with a ‘<code>get</code>’ access or/and a private ‘<code>set</code>’ accessor</td></tr><tr><td valign="top" width="74"><code>sim</code></td><td valign="top" width="542">Code snippet for int Main()</td></tr><tr><td valign="top" width="74"><code>struct</code></td><td valign="top" width="542">Code snippet for <code>struct</code></td></tr><tr><td valign="top" width="74"><code>svm</code></td><td valign="top" width="542">Code snippet for ‘<code>void Main</code>’ method</td></tr><tr><td valign="top" width="74"><code>switch</code></td><td valign="top" width="542">Code snippet for <code>switch</code> statement</td></tr><tr><td valign="top" width="74"><code>try</code></td><td valign="top" width="542">Code snippet for <code>try catch</code></td></tr><tr><td valign="top" width="74"><code>tryf</code></td><td valign="top" width="542">Code snippet for <code>try finally</code></td></tr><tr><td valign="top" width="74"><code>unchecked</code></td><td valign="top" width="542">Code snippet for <code>unchecked</code> block</td></tr><tr><td valign="top" width="74"><code>unsafe</code></td><td valign="top" width="542">Code snippet for <code>unsafe</code> statement</td></tr><tr><td valign="top" width="74"><code>using</code></td><td valign="top" width="542">Code snippet for <code>using</code> statement</td></tr><tr><td valign="top" width="74"><code>while</code></td><td valign="top" width="542">Code snippet for <code>while</code> loop</td></tr></tbody></table>]]></content:encoded>
            <category>Visual Studio</category>
        </item>
        <item>
            <title><![CDATA[WCF Step by Step Tutorial]]></title>
            <link>https://nagvbt.github.io/blog/2011/04/28/wcf-step-by-step-tutorial</link>
            <guid>https://nagvbt.github.io/blog/2011/04/28/wcf-step-by-step-tutorial</guid>
            <pubDate>Thu, 28 Apr 2011 00:00:00 GMT</pubDate>
            <description><![CDATA[Windows Communication Foundation (WCF) is a framework for building service-oriented applications. Using WCF we can build secure, reliable, transacted solutions that integrate across platforms.]]></description>
            <content:encoded><![CDATA[<p>Windows Communication Foundation (WCF) is a framework for building service-oriented applications. Using WCF we can build secure, reliable, transacted solutions that integrate across platforms.</p><p>WCF is a unified framework which provides :</p><ol><li>NET Remoting </li><li>Distributed Transactions </li><li>Message Queues and </li><li>Web Services&nbsp;into a single service-oriented programming model for distributed computing.</li></ol><p><a href="/docs/articles/WCF/Tutorial">Read more</a></p>]]></content:encoded>
            <category>WCF</category>
        </item>
        <item>
            <title><![CDATA[WPF SnippetManager]]></title>
            <link>https://nagvbt.github.io/blog/2010/10/21/wpf-snippetmanager</link>
            <guid>https://nagvbt.github.io/blog/2010/10/21/wpf-snippetmanager</guid>
            <pubDate>Thu, 21 Oct 2010 00:00:00 GMT</pubDate>
            <description><![CDATA[FEATURES]]></description>
            <content:encoded><![CDATA[<p><strong><em>FEATURES</em></strong></p><p>• To use a snippet:&nbsp; Drag the title of the snippet to the desired target app.</p><p>• In order to move the app around: Drag the black bottom portion of the window.</p><p>• The topmost checkbox and load/close buttons will work as expected.</p><p><img loading="lazy" src="/assets/images/2331912497_7894e1a05f-d31a58913ebbbd20e68ba65802239a21.jpg" width="204" height="500" class="img_ev3q"></p><p>Link&nbsp;to complete article <a href="http://scorbs.com/2008/03/18/snippetmanager/comment-page-1/#comment-3479" target="_blank" rel="noopener noreferrer"></a><a href="http://scorbs.com/2008/03/18/snippetmanager/comment-page-1/#comment-3479" target="_blank" rel="noopener noreferrer">http://scorbs.com/2008/03/18/snippetmanager/comment-page-1/#comment-3479</a></p>]]></content:encoded>
            <category>Tools</category>
        </item>
        <item>
            <title><![CDATA[C FAQ]]></title>
            <link>https://nagvbt.github.io/blog/2010/10/03/c-faq</link>
            <guid>https://nagvbt.github.io/blog/2010/10/03/c-faq</guid>
            <pubDate>Sun, 03 Oct 2010 00:00:00 GMT</pubDate>
            <description><![CDATA[1\. How to write a code to count number of characters/Spaces/numbers/special characters present in a sentence.  sentence ="1. GOD IS GREAT !!!" Click me for Answer]]></description>
            <content:encoded><![CDATA[<p>1<!-- -->.<!-- --> How to write a code to count number of characters/Spaces/numbers/special characters present in a sentence.&nbsp; sentence ="1. GOD IS GREAT !!!"&nbsp;<a href="http://nagvbt.wordpress.com/c-faq/ascii-count/" target="_blank" rel="noopener noreferrer">Click me for Answer</a></p><p>2.&nbsp;How to insert space between each character in a sentence.&nbsp;sentence ="GOOD MORNING" newsentence = "G O O D&nbsp; M O R N I N G"&nbsp;<a href="http://nagvbt.wordpress.com/c-faq/insertspace/" target="_blank" rel="noopener noreferrer">Click me for Answer</a></p><p><a href="/docs/articles/C/CFaq">Click here to read complete Article</a></p>]]></content:encoded>
            <category>C</category>
        </item>
        <item>
            <title><![CDATA[MFC: Fill the Client area with a bitmap]]></title>
            <link>https://nagvbt.github.io/blog/2010/10/03/fill-the-client-area-bitmap</link>
            <guid>https://nagvbt.github.io/blog/2010/10/03/fill-the-client-area-bitmap</guid>
            <pubDate>Sun, 03 Oct 2010 00:00:00 GMT</pubDate>
            <description><![CDATA[In MFC to fill the client area with a bitmap use the following code.]]></description>
            <content:encoded><![CDATA[<p>In MFC to fill the client area with a bitmap use the following code.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">BOOL </span><span class="token class-name">CMySDIView</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">OnEraseBkgnd</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CDC\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pDC</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CDC mymem</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//Create a dc to represent display surface</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mymem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">CreateCompatibleDC</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pDC</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CBitmap bmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    bmp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">LoadBitmap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">IDB\_MYBITMAP</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mymem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">SelectObject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">bmp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//BitBlt Copyes bitbamp from source (mymem) to destination (pDC)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pDC</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">BitBlt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">740</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">520</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">mymem</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> SRCCOPY</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> TRUE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// CView::OnEraseBkgnd(pDC);</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
        </item>
        <item>
            <title><![CDATA[MFC: Fill Client area with a desired color]]></title>
            <link>https://nagvbt.github.io/blog/2010/10/03/mfc-fill-coloe-in-the-client-area</link>
            <guid>https://nagvbt.github.io/blog/2010/10/03/mfc-fill-coloe-in-the-client-area</guid>
            <pubDate>Sun, 03 Oct 2010 00:00:00 GMT</pubDate>
            <description><![CDATA[MFC Tip: To fill the Background of the client area with a desired color keeping the text in the client area unchanged]]></description>
            <content:encoded><![CDATA[<p>MFC Tip: To fill the Background of the client area with a desired color keeping the text in the client area unchanged</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">BOOL CMySDIView</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">OnEraseBkgnd</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CDC\</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pDC</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CRect r</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//GetClientRect gets the width &amp;amp; height of the client area of</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//the window</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">GetClientRect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">r</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CBrush </span><span class="token function" style="color:#d73a49">br</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">RGB</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">255</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">250</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pDC</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">SelectObject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">br</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pDC</span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">gt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token function" style="color:#d73a49">FillRect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r</span><span class="token punctuation" style="color:#393A34">,</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">amp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">br</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> TRUE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>MFC</category>
        </item>
        <item>
            <title><![CDATA[Developer to Architect]]></title>
            <link>https://nagvbt.github.io/blog/2010/09/29/software-architect</link>
            <guid>https://nagvbt.github.io/blog/2010/09/29/software-architect</guid>
            <pubDate>Wed, 29 Sep 2010 00:00:00 GMT</pubDate>
            <description><![CDATA[To become an Software Architect you can use following resources.]]></description>
            <content:encoded><![CDATA[<p>To become an Software Architect you can use following resources.</p><ol start="0"><li><a href="http://www.architecturejournal.net" target="_blank" rel="noopener noreferrer">www.architecturejournal.net</a></li><li><a href="http://en.wikipedia.org/wiki/Software_architect" target="_blank" rel="noopener noreferrer">http://en.wikipedia.org/wiki/Software<!-- -->_<!-- -->architect</a></li><li><a href="http://www.ibm.com/developerworks/library/ws-soa-proarch1.html" target="_blank" rel="noopener noreferrer">http://www.ibm.com/developerworks/library/ws-soa-proarch1.html</a></li><li>Book Search Google Books Search: <a href="http://www.google.co.in/search?hl=en&amp;tbs=bks:1&amp;&amp;sa=X&amp;ei=s7M6TOHwO8L58Aa1p4imBg&amp;ved=0CDUQBSgA&amp;q=how+to+become+software+architect&amp;spell=1" target="_blank" rel="noopener noreferrer">http://www.google.co.in/search?hl=en&amp;tbs=bks:1&amp;&amp;sa=X&amp;ei=s7M6TOHwO8L58Aa1p4imBg&amp;ved=0CDUQBSgA&amp;q=how+to+become+software+architect&amp;spell=1</a></li><li>Register for Microsoft monthly journals:<a href="http://msdn.microsoft.com/en-us/architecture/aa699369.aspx#Subscribe" target="_blank" rel="noopener noreferrer">http://msdn.microsoft.com/en-us/architecture/aa699369.aspx#Subscribe</a></li><li>An A-Z Guide to Being an Architect: <a href="http://msdn.microsoft.com/en-us/architecture/cc505969.aspx" target="_blank" rel="noopener noreferrer">http://msdn.microsoft.com/en-us/architecture/cc505969.aspx</a></li><li>Follow or learn from MSDN FORUMS : <a href="http://social.msdn.microsoft.com/Forums/en-US/category/architecture" target="_blank" rel="noopener noreferrer">http://social.msdn.microsoft.com/Forums/en-US/category/architecture</a></li><li><a href="http://www.kanneganti.com/technical/architect" target="_blank" rel="noopener noreferrer">http://www.kanneganti.com/technical/architect</a></li></ol>]]></content:encoded>
            <category>Design Patterns</category>
        </item>
        <item>
            <title><![CDATA[WPF View Switcher]]></title>
            <link>https://nagvbt.github.io/blog/2010/09/29/wpf-view-switcher</link>
            <guid>https://nagvbt.github.io/blog/2010/09/29/wpf-view-switcher</guid>
            <pubDate>Wed, 29 Sep 2010 00:00:00 GMT</pubDate>
            <description><![CDATA[A Step by Step Tutorial]]></description>
            <content:encoded><![CDATA[<p><strong><a href="/docs/articles/WPF/ViewSwitcherTutorial">A Step by Step Tutorial</a></strong></p><p>Dynamic&nbsp;Switching of views in WPF using UserControl and Grid Layout.</p><p><a href="/docs/articles/WPF/ViewSwitcherTutorial">Read More</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Introduction Post]]></title>
            <link>https://nagvbt.github.io/blog/2006/08/26/welcome</link>
            <guid>https://nagvbt.github.io/blog/2006/08/26/welcome</guid>
            <pubDate>Sat, 26 Aug 2006 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus blogging features are powered by the blog plugin.]]></description>
            <content:encoded><![CDATA[<p><a href="https://docusaurus.io/docs/blog" target="_blank" rel="noopener noreferrer">Docusaurus blogging features</a> are powered by the <a href="https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog" target="_blank" rel="noopener noreferrer">blog plugin</a>.</p><p>Simply add Markdown files (or folders) to the <code>blog</code> directory.</p><p>Regular blog authors can be added to <code>authors.yml</code>.</p><p>The blog post date can be extracted from filenames, such as:</p><ul><li><code>2019-05-30-welcome.md</code></li><li><code>2019-05-30-welcome/index.md</code></li></ul><p>A blog post folder can be convenient to co-locate blog post images:</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/docusaurus-plushie-banner-a60f7593abca1e3eef26a9afa244e4fb.jpeg" width="1500" height="500" class="img_ev3q"></p><p>The blog supports tags as well!</p><p><strong>And if you don't want a blog</strong>: just delete this directory, and use <code>blog: false</code> in your Docusaurus config.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Interactive MDX Post]]></title>
            <link>https://nagvbt.github.io/blog/2006/08/01/Interactive-post-MDX</link>
            <guid>https://nagvbt.github.io/blog/2006/08/01/Interactive-post-MDX</guid>
            <pubDate>Tue, 01 Aug 2006 00:00:00 GMT</pubDate>
            <description><![CDATA[Blog posts support Docusaurus Markdown features, such as MDX.]]></description>
            <content:encoded><![CDATA[<p>Blog posts support <a href="https://docusaurus.io/docs/markdown-features" target="_blank" rel="noopener noreferrer">Docusaurus Markdown features</a>, such as <a href="https://mdxjs.com/" target="_blank" rel="noopener noreferrer">MDX</a>.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>Use the power of React to create interactive blog posts.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">button onClick</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"button clicked!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Click</span><span class="token plain"> me</span><span class="token operator" style="color:#393A34">!</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">button</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><button>Click me!</button></div></div>]]></content:encoded>
        </item>
    </channel>
</rss>