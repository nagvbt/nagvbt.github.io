"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["57197"],{50065:function(e,r,n){n.d(r,{Z:()=>a,a:()=>i});var o=n(67294);let t={},s=o.createContext(t);function i(e){let r=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(s.Provider,{value:r},e.children)}},84711:function(e,r,n){n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var o=n(84898),t=n(85893),s=n(50065);let i={tags:["Ionic"]},a="How to Add Providers in Ionic3+ apps",c={authorsImageUrls:[]},d=[];function l(e){let r={a:"a",br:"br",code:"code",em:"em",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:"Providers are special classes which decorated with @Injectable decorator. Providers are used to a specific work.\xa0 We can organize the code and code can be reused in multiple places e.g in pages, other providers too."}),"\n",(0,t.jsxs)(r.p,{children:["We will added now simple Local StorageProvider by using the command",(0,t.jsx)(r.br,{}),"\n","ionic g provider Storage"]}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["The command creates the StorageProvider in",(0,t.jsx)(r.br,{}),"\n","providers/storage/storage.ts"]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"import { Injectable } from '@angular/core';  \r\n@Injectable()  \r\nexport class StorageProvider {  \r\n constructor() {  \r\n }  \r\n}  \n"})}),"\n",(0,t.jsxs)(r.ol,{start:"2",children:["\n",(0,t.jsx)(r.li,{children:"Adds the StorageProvider in the provider's array of app.module.ts"}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:"FILES"})}),(0,t.jsx)(r.br,{}),"\n","Refer the code files in ",(0,t.jsx)(r.a,{href:"https://github.com/nagvbt/IonicTemplate/commit/da1dba6fe3e42bcc383ea84d190a8dafebf1d108",children:"Github"})]})]})}function p(e={}){let{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},84898:function(e){e.exports=JSON.parse('{"permalink":"/blog/2018/06/02/how-to-add-providers-in-ionic3-apps","source":"@site/blog/2018-06-02-how-to-add-providers-in-ionic3-apps.md","title":"How to Add Providers in Ionic3+ apps","description":"Providers are special classes which decorated with @Injectable decorator. Providers are used to a specific work.\xa0 We can organize the code and code can be reused in multiple places e.g in pages, other providers too.","date":"2018-06-02T00:00:00.000Z","tags":[{"inline":true,"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":0.54,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["Ionic"]},"unlisted":false,"prevItem":{"title":"Temporary Storage which persists only when the app is live for Ionic3+ Apps","permalink":"/blog/2018/06/16/ionic-temporary-storage"},"nextItem":{"title":"How to Add Constants and use across Ionic3+ Apps","permalink":"/blog/2018/05/13/ionic-add-constants"}}')}}]);