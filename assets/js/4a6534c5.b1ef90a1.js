"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[91564],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var t=s(96540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},55965:e=>{e.exports=JSON.parse('{"permalink":"/blog/2012/07/08/basics-of-atl","source":"@site/blog/2012-07-08-basics-of-atl.md","title":"Basics of ATL","description":"What you will Learn Here\u2026","date":"2012-07-08T00:00:00.000Z","tags":[{"inline":true,"label":"ATL","permalink":"/blog/tags/atl"}],"readingTime":1.8,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["ATL"]},"unlisted":false,"prevItem":{"title":"Basics of ActiveX Controls","permalink":"/blog/2012/07/08/basics-of-activex-controls"},"nextItem":{"title":"C-Pointers What is the output","permalink":"/blog/2012/07/08/c-pointers-what-is-the-output"}}')},67550:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>l});var t=s(55965),i=s(74848),r=s(28453);const o={tags:["ATL"]},c="Basics of ATL",a={authorsImageUrls:[]},l=[];function h(e){const n={em:"em",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"What you will Learn Here\u2026"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Definition of ATL"}),"\n",(0,i.jsx)(n.li,{children:"ATL Features"}),"\n",(0,i.jsx)(n.li,{children:"Basic Definitions of ATL"}),"\n",(0,i.jsx)(n.li,{children:"ATL's Component Class Hierarchy"}),"\n",(0,i.jsx)(n.li,{children:"FAQ"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"1. Definition of ATL"})," The Active Template Library (ATL) is a set of template-based C++ classes that allows to create small, fast Component Object Model (COM) objects."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"2. ATL Features"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"ATL provides two types of wizards"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"a. AppWizard: AppWizard creates the initial ATL project.\r\nb. Object Wizard: Object Wizard produces code for basic COM components."}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Built-in support for basic COM functionality such as IUnknown, class factories, IDispatch (automation), dual interfaces and self-registration."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Inbuilt Support for Microsoft\u2019s Interface Definition Language (IDL) which provides marshaling support for custom Vtable interfaces as well as component self-description through a type library."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Aggregation of objects and Automation support"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Support for developing ActiveX controls."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"3. Basic Definitions of ATL"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Marshaling:"})})," Marshaling is the process of transferring function arguments and return values across process and machine boundaries."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"proxy/stub"})})," DLL implements standard marshaling for each of the component interfaces."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"COM will use the IPC to communicate between client and server."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"LPC is used when both reside on the same machine."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"RPC is used in a distributed networked\xa0environment"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"4. ATL's Component Class Hierarchy"})}),"\n",(0,i.jsx)(n.p,{children:"ATL never Creates the instance of the CoClass Directly. Instead ATL uses CComObject template class with 'CMathComp' object type as a parameter to create our Object."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"CComObject * pMath = new ComObject"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"CComObjectRootEx"})})," - Handles object reference count management. ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"CComCoClass"})})," - Provides methods for creating instances of a class and obtaining its properties it has createInstance() method which creates the instance of a COM Object through ClassFactory ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"CComObject"})})," - Implements IUnknown for an COM object."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"5. FAQ"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"What is ATL ? check - 1. Definition of ATL"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"What is MIDL ? check - 2. ATL Features - 3 point"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"What are the featurs of ATL ? check - 2. ATL Feature"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"What is Marshiling ? check - 3. Basic Definitions of ATL - 1 point"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Explain about\xa0ATL's Class Hierarchy? check - 4.ATL's Component Class Hierarchy"}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);