"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[68836],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(a),c=r,g=m["".concat(o,".").concat(c)]||m[c]||d[c]||s;return a?n.createElement(g,l(l({ref:t},p),{},{components:a})):n.createElement(g,l({ref:t},p))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,l=new Array(s);l[0]=c;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<s;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},1973:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var n=a(87462),r=(a(67294),a(3905));const s={},l=void 0,i={unversionedId:"articles/MFC/GeneralFaq",id:"articles/MFC/GeneralFaq",title:"GeneralFaq",description:"MFC & VC++ Version Numbers",source:"@site/docs/articles/MFC/GeneralFaq.md",sourceDirName:"articles/MFC",slug:"/articles/MFC/GeneralFaq",permalink:"/docs/articles/MFC/GeneralFaq",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DocViewFaq",permalink:"/docs/articles/MFC/DocViewFaq"},next:{title:"Quick Tips",permalink:"/docs/articles/MFC/Quick"}},o={},u=[{value:"MFC &amp; VC++ Version Numbers",id:"mfc--vc-version-numbers",level:2},{value:"What is a message map, and what is the purpose of message map instead of virtual function?",id:"what-is-a-message-map-and-what-is-the-purpose-of-message-map-instead-of-virtual-function",level:2},{value:"Explain about PostMessage/SendMessage ?",id:"explain-about-postmessagesendmessage-",level:2},{value:"Message Map vs Virtual Functions ?",id:"message-map-vs-virtual-functions-",level:2}],p={toc:u},m="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"#FAQ"),(0,r.kt)("h2",{id:"mfc--vc-version-numbers"},"MFC & VC++ Version Numbers"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"MFC version"),(0,r.kt)("th",{parentName:"tr",align:null},"Visual C++ version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1.0"),(0,r.kt)("td",{parentName:"tr",align:null},"Microsoft C/C++ 7.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2.0"),(0,r.kt)("td",{parentName:"tr",align:null},"Visual C++ 1.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2.5"),(0,r.kt)("td",{parentName:"tr",align:null},"Visual C++ 1.5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3.0"),(0,r.kt)("td",{parentName:"tr",align:null},"Visual C++ 2.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3.1"),(0,r.kt)("td",{parentName:"tr",align:null},"Visual C++ 2.1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3.2"),(0,r.kt)("td",{parentName:"tr",align:null},"Visual C++ 2.2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4.0"),(0,r.kt)("td",{parentName:"tr",align:null},"Visual C++ 4.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4.1"),(0,r.kt)("td",{parentName:"tr",align:null},"Visual C++ 4.1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4.2"),(0,r.kt)("td",{parentName:"tr",align:null},"Visual C++ 4.2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4.21 (mfc42.dll)"),(0,r.kt)("td",{parentName:"tr",align:null},"Visual C++ 5.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"6.0 (mfc42.dll)"),(0,r.kt)("td",{parentName:"tr",align:null},"Visual C++ 6.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7.0 (mfc70.dll)"),(0,r.kt)("td",{parentName:"tr",align:null},"Visual C++ .NET 2002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7.1 (mfc71.dll)"),(0,r.kt)("td",{parentName:"tr",align:null},"Visual C++ .NET 2003")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"8.0 (mfc80.dll)"),(0,r.kt)("td",{parentName:"tr",align:null},"Visual C++ 2005")))),(0,r.kt)("h2",{id:"what-is-a-message-map-and-what-is-the-purpose-of-message-map-instead-of-virtual-function"},"What is a message map, and what is the purpose of message map instead of virtual function?"),(0,r.kt)("p",null,"Message Map is a logical table that maps the windows messages to the member functions of the class.\nMessage map is to avoid following drawbacks:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Most windows only process a small number of messages, yet each window require to giant virtual function table with the entries of each message."),(0,r.kt)("li",{parentName:"ol"},"more efficient and use less space then virtual functions"),(0,r.kt)("li",{parentName:"ol"},"Virtual functions don't handle user defined messages and other custom cases.")),(0,r.kt)("h2",{id:"explain-about-postmessagesendmessage-"},"Explain about PostMessage/SendMessage ?"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"PostMessage")),(0,r.kt)("p",null,"Places (posts) a message in the message queue associated with the thread that created the specified window and returns without waiting for the thread to process the message.\nTo post a message in the message queue associated with a thread, use the PostThreadMessage function.\nSyntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"BOOL WINAPI PostMessage(\n  __in_opt  HWND hWnd,\n  __in      UINT Msg,\n  __in      WPARAM wParam,\n  __in      LPARAM lParam\n);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"SendMessage")),(0,r.kt)("p",null,"Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.\nTo send a message and return immediately, use the SendMessageCallback or SendNotifyMessage function. To post a message to a thread's message queue and return immediately, use the PostMessage or PostThreadMessage function.\nSyntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"LRESULT WINAPI SendMessage(\n  __in  HWND hWnd,\n  __in  UINT Msg,\n  __in  WPARAM wParam,\n  __in  LPARAM lParam\n);\n")),(0,r.kt)("h2",{id:"message-map-vs-virtual-functions-"},"Message Map vs Virtual Functions ?"),(0,r.kt)("p",null,"Message Map is a logical table that maps the windows messages to the member functions of the class. Message map is to avoid following drawbacks:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Most windows only process a small number of messages, yet each window require to giant virtual function table with the entries of each message.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"more efficient and use less space then virtual functions.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Virtual functions don't handle user defined messages and other custom cases."))))}d.isMDXComponent=!0}}]);