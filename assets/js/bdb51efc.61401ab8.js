"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["22274"],{33130:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>i,default:()=>h,toc:()=>l,metadata:()=>r,assets:()=>a,contentTitle:()=>c});var r=JSON.parse('{"id":"UIFrameworks/Classes","title":"ES6 Classes","description":"Definition of Class","source":"@site/docs/UIFrameworks/Classes.md","sourceDirName":"UIFrameworks","slug":"/UIFrameworks/Classes","permalink":"/docs/UIFrameworks/Classes","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/UIFrameworks/Introduction"},"next":{"title":"Arrow Functions","permalink":"/docs/UIFrameworks/ArrowFunctions"}}'),s=t(85893),o=t(50065);let i={sidebar_position:2},c="ES6 Classes",a={},l=[{value:"Definition of Class",id:"definition-of-class",level:2},{value:"<strong>React</strong>",id:"react",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Example",id:"example",level:3},{value:"Example Explanation",id:"example-explanation",level:3},{value:"<strong>Svelte</strong>",id:"svelte",level:2},{value:"Definition of Svelte components",id:"definition-of-svelte-components",level:3},{value:"Syntax (Props + Reactive State + Event Handling)",id:"syntax-props--reactive-state--event-handling",level:3},{value:"Example Usage (Parent Component)",id:"example-usage-parent-component",level:3}];function d(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"es6-classes",children:"ES6 Classes"})}),"\n",(0,s.jsx)(n.h2,{id:"definition-of-class",children:"Definition of Class"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"ES6 Classes"})," are a way to create objects and work with ",(0,s.jsx)(n.strong,{children:"inheritance"})," in JavaScript\r\n(and TypeScript), introduced in ECMAScript 2015 (ES6)."]}),"\n",(0,s.jsx)(n.h2,{id:"react",children:(0,s.jsx)(n.strong,{children:"React"})}),"\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.strong,{children:"React"}),", class components are built using ES6 classes by extending ",(0,s.jsx)(n.code,{children:"React.Component"}),".\r\nThese classes have ",(0,s.jsx)(n.strong,{children:"constructor functions"}),", ",(0,s.jsx)(n.strong,{children:"state"}),", and ",(0,s.jsx)(n.strong,{children:"lifecycle methods"}),"."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["TypeScript enhances ES6 classes by allowing you to add ",(0,s.jsx)(n.strong,{children:"types"})," to props, state, and methods for\r\nbetter code safety."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// Import React and Component\r\nimport React, { Component } from 'react';\r\n\r\n// Define the props type\r\ntype MyProps = {\r\n  name: string;\r\n};\r\n\r\n// Define the state type\r\ntype MyState = {\r\n  count: number;\r\n};\r\n\r\n// Create a class component using TypeScript\r\nclass MyComponent extends Component<MyProps, MyState> {\r\n  // Initialize state\r\n  state: MyState = {\r\n    count: 0,\r\n  };\r\n\r\n  // Class method to handle click\r\n  handleClick = () => {\r\n    this.setState({ count: this.state.count + 1 });\r\n  };\r\n\r\n  // The render method returns JSX\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Hello, {this.props.name}!</h2>\r\n        <p>Count: {this.state.count}</p>\r\n        <button onClick={this.handleClick}>Increase</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyComponent;\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'// File: Counter.tsx\r\nimport React, { Component } from \'react\';\r\n\r\n// Define the props type\r\ntype CounterProps = {\r\n  title: string; // The title to display\r\n};\r\n\r\n// Define the state type\r\ntype CounterState = {\r\n  count: number; // Counter state\r\n};\r\n\r\n// Create a class-based React component\r\nclass Counter extends Component<CounterProps, CounterState> {\r\n  // Initialize state\r\n  state: CounterState = {\r\n    count: 0,\r\n  };\r\n\r\n  // Method to increment the count\r\n  handleIncrement = () => {\r\n    this.setState({ count: this.state.count + 1 });\r\n  };\r\n\r\n  // Method to decrement the count\r\n  handleDecrement = () => {\r\n    this.setState({ count: this.state.count - 1 });\r\n  };\r\n\r\n  // Render method returns JSX\r\n  render() {\r\n    return (\r\n      <div style={{ border: "1px solid #ccc", padding: "1rem", width: "200px" }}>\r\n        {/* Display title from props */}\r\n        <h3>{this.props.title}</h3>\r\n\r\n        {/* Display current count from state */}\r\n        <p>Count: {this.state.count}</p>\r\n\r\n        {/* Buttons to update the state */}\r\n        <button onClick={this.handleIncrement}>\u2795 Increment</button>\r\n        <button onClick={this.handleDecrement} style={{ marginLeft: "0.5rem" }}>\r\n          \u2796 Decrement\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n\r\n\r\n// File: App.tsx\r\nimport React from \'react\';\r\nimport Counter from \'./Counter\';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <h1>React ES6 Class Component with TypeScript</h1>\r\n      <Counter title="My Counter" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["Perfect! Based on your reference, here\u2019s the ",(0,s.jsx)(n.strong,{children:"\uD83E\uDDEA Example Explanation"})," for the ES6 class component\r\nwe discussed:"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"example-explanation",children:"Example Explanation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"type CounterProps"})," defines what props the component expects (in this case, a ",(0,s.jsx)(n.code,{children:"title"})," of type ",(0,s.jsx)(n.code,{children:"string"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"type CounterState"})," defines the internal state used by the component (in this case, a ",(0,s.jsx)(n.code,{children:"count"})," of\r\ntype ",(0,s.jsx)(n.code,{children:"number"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"class Counter"})," is a ",(0,s.jsx)(n.strong,{children:"React class component"})," that extends ",(0,s.jsx)(n.code,{children:"React.Component"})," and uses the above\r\ntypes for ",(0,s.jsx)(n.code,{children:"props"})," and ",(0,s.jsx)(n.code,{children:"state"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"state = { count: 0 }"})," initializes the local state with a count of 0."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"handleIncrement"})," and ",(0,s.jsx)(n.code,{children:"handleDecrement"})," are ",(0,s.jsx)(n.strong,{children:"arrow functions"})," that update the count using ",(0,s.jsx)(n.code,{children:"this.setState()"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"this.props.title"})," accesses the value passed from the parent component as a prop."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"this.state.count"})," accesses the component\u2019s current count value."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"render()"})," returns the ",(0,s.jsx)(n.strong,{children:"JSX UI"}),", which displays the title, the count, and the two buttons."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["When a button is clicked, ",(0,s.jsx)(n.code,{children:"this.setState()"})," updates the state, which automatically re-renders the\r\ncomponent with the new count."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"svelte",children:(0,s.jsx)(n.strong,{children:"Svelte"})}),"\n",(0,s.jsx)(n.h3,{id:"definition-of-svelte-components",children:"Definition of Svelte components"}),"\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.strong,{children:"Svelte"}),", we don\u2019t use classes for components. Instead, Svelte uses a\r\n",(0,s.jsx)(n.strong,{children:"simple script + markup"})," approach, making it lightweight and easy to read."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Props are defined using ",(0,s.jsx)(n.code,{children:"export let"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["State is managed using ",(0,s.jsx)(n.strong,{children:"reactive variables"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["No need for ",(0,s.jsx)(n.code,{children:"this"}),", ",(0,s.jsx)(n.code,{children:"constructor"}),", or lifecycle methods in most cases."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reactivity"})," is automatic when values change."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"syntax-props--reactive-state--event-handling",children:"Syntax (Props + Reactive State + Event Handling)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-svelte",children:'\x3c!-- Counter.svelte --\x3e\r\n<script lang="ts">\r\n  // Accept a prop from parent\r\n  export let title: string;\r\n\r\n  // Reactive variable (like state)\r\n  let count: number = 0;\r\n\r\n  // Function to increase count\r\n  const increment = () => {\r\n    count += 1; // Automatically updates UI\r\n  };\r\n\r\n  // Function to decrease count\r\n  const decrement = () => {\r\n    count -= 1;\r\n  };\r\n<\/script>\r\n\r\n\x3c!-- Template to render the UI --\x3e\r\n<div style="border: 1px solid #ccc; padding: 1rem; width: 200px;">\r\n  <h3>{title}</h3> \x3c!-- Displaying prop --\x3e\r\n  <p>Count: {count}</p> \x3c!-- Reactive display --\x3e\r\n\r\n  \x3c!-- Click events --\x3e\r\n  <button on:click={increment}>\u2795 Increment</button>\r\n  <button on:click={decrement} style="margin-left: 0.5rem;">\u2796 Decrement</button>\r\n</div>\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"example-usage-parent-component",children:"Example Usage (Parent Component)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-svelte",children:'\x3c!-- App.svelte --\x3e\r\n<script lang="ts">\r\n  // Import the child component\r\n  import Counter from \'./Counter.svelte\';\r\n<\/script>\r\n\r\n\x3c!-- Use the Counter component and pass a prop --\x3e\r\n<main>\r\n  <h1>Svelte Counter Example</h1>\r\n  <Counter title="My Counter" />\r\n</main>\n'})}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},50065:function(e,n,t){t.d(n,{Z:()=>c,a:()=>i});var r=t(67294);let s={},o=r.createContext(s);function i(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);