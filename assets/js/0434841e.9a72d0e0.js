"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[53850],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=s(t),p=o,u=m["".concat(l,".").concat(p)]||m[p]||g[p]||r;return t?a.createElement(u,i(i({ref:n},d),{},{components:t})):a.createElement(u,i({ref:n},d))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=p;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[m]="string"==typeof e?e:o,i[1]=c;for(var s=2;s<r;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},41332:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var a=t(87462),o=(t(67294),t(3905));const r={},i="Upload in DB",c={unversionedId:"articles/Csharp/UploadInDB",id:"articles/Csharp/UploadInDB",title:"Upload in DB",description:"Image Upload in DB",source:"@site/docs/articles/Csharp/UploadInDB.md",sourceDirName:"articles/Csharp",slug:"/articles/Csharp/UploadInDB",permalink:"/docs/articles/Csharp/UploadInDB",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SMS Sender",permalink:"/docs/articles/Csharp/SmsSender"},next:{title:"Design Patterns",permalink:"/docs/category/design-patterns"}},l={},s=[{value:"Image Upload in DB",id:"image-upload-in-db",level:2},{value:"Class",id:"class",level:3},{value:"DB script",id:"db-script",level:3},{value:"File Upload in DB",id:"file-upload-in-db",level:2},{value:"Class",id:"class-1",level:3}],d={toc:s},m="wrapper";function g(e){let{components:n,...t}=e;return(0,o.kt)(m,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"upload-in-db"},"Upload in DB"),(0,o.kt)("h2",{id:"image-upload-in-db"},"Image Upload in DB"),(0,o.kt)("h3",{id:"class"},"Class"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'using System;\nusing System.Configuration;\nusing System.Data.SqlClient;\nusing System.IO;\nusing System.Data;\npublic partial class ImageUploader : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n    }\n    protected void btnView_Click(object sender, EventArgs e)\n    {\n        if (Session["CUR_PAT_ID"] != null)\n        {\n            SqlConnection cn = null;\n            SqlCommand cmd = null;\n            string connectionString = ConfigurationManager.ConnectionStrings["TSDBConnectionString"].ConnectionString;\n            cn = new SqlConnection(connectionString);\n            cmd = new SqlCommand();\n            cmd.Connection = cn;\n            cmd.CommandType = CommandType.Text;\n            string query = string.Format("Select Photo from PatientImages where PAT_ID = \'{0}\'", Session["CUR_PAT_ID"].ToString());\n            cmd.CommandText = query;\n            if (cn.State == ConnectionState.Closed)\n                cn.Open();\n            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);\n           \n            if (reader.FieldCount > 0)\n            {\n                while (reader.Read())\n                {\n                    var imgage = reader["Photo"];\n                    if (imgage != null)\n                    {\n                      //satish  imgPatient.Value = imgage;\n                    }\n                }\n            }\n        }\n    }\n\n    private int SaveImage(byte[] image)\n    {\n        int rowsAffected = 0;\n        string connectionString = ConfigurationManager.ConnectionStrings["TSDBConnectionString"].ConnectionString;\n        try\n        {\n            using (SqlConnection connection = new SqlConnection(connectionString))\n            {\n                using (SqlCommand command = connection.CreateCommand())\n                {\n                    command.CommandText = "INSERT INTO PatientImages (Photo, PAT_ID, ENT_ID, SITE_ID) VALUES (@Photo, @PAT_ID, @ENT_ID, @SITE_ID)";\n                    command.Parameters.AddWithValue("@Photo", image);\n                    command.Parameters.AddWithValue("@PAT_ID", Session["CUR_PAT_ID"].ToString());\n                    command.Parameters.AddWithValue("@ENT_ID", Session["ENT_ID"].ToString());\n                    command.Parameters.AddWithValue("@SITE_ID", Session["SITE_ID"].ToString());\n                    connection.Open();\n                    rowsAffected = command.ExecuteNonQuery();\n                }\n            }\n        }\n        catch (Exception ex)\n        {\n            //Message.Text = ex.Message;\n            Message.Text = "Image alredy uploaded for patient";\n            return rowsAffected;\n        }\n        Message.Text = "Image saved Sucessfully";\n        return rowsAffected;\n    }\n    protected void btnUpload_Click(object sender, EventArgs e)\n    {\n         if (FileUpload1.HasFile)\n            {            \n                using (BinaryReader reader = new BinaryReader(FileUpload1.PostedFile.InputStream))\n                {\n                    byte[] image = reader.ReadBytes(FileUpload1.PostedFile.ContentLength);\n                    SaveImage(image);\n                }\n            }          \n        }   \n}\n')),(0,o.kt)("h3",{id:"db-script"},"DB script"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE [dbo].[PatientImages](\n     [PAT_ID] [varchar](30) NOT NULL,\n     [PAT_IMG_ID] [varchar](30) NOT NULL,\n     [Photo] [image] NULL,\n     [BarCode] [image] NULL,\n     [Vitals] [image] NULL,\n     [C1] [image] NULL,\n     [C2] [image] NULL,\n     [C3] [image] NULL,\n     [C4] [image] NULL,\n     [SITE_ID] [nchar](10) NOT NULL,\n     [ENT_ID] [nchar](10) NOT NULL,\n     [Doc] [varbinary](max) NULL,\n     [FileType] [varchar](20) NULL,\n     [FileName] [varchar](20) NULL)\n")),(0,o.kt)("h2",{id:"file-upload-in-db"},"File Upload in DB"),(0,o.kt)("h3",{id:"class-1"},"Class"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'using System;\nusing System.IO;\nusing System.Configuration;\nusing System.Data.SqlClient;\nusing System.Data;\n\npublic partial class Document : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n    }\n    private int SaveDoc(byte[] Doc, string FileType, string FileName)\n    //private int SaveImage(byte[] Doc)\n    {\n        int rowsAffected = 0;\n        string connectionString = ConfigurationManager.ConnectionStrings["TSDBConnectionString"].ConnectionString;\n        try\n        {\n            using (SqlConnection connection = new SqlConnection(connectionString))\n            {\n                using (SqlCommand command = connection.CreateCommand())\n                {\n                    command.CommandText = "INSERT INTO PatientImages (PAT_ID, ENT_ID, SITE_ID,Doc, FileType, FileName) VALUES (@PAT_ID, @ENT_ID, @SITE_ID, @Doc, @FileType, @FileName)";\n                    command.Parameters.AddWithValue("@Doc", Doc);\n                    command.Parameters.AddWithValue("@PAT_ID", Session["CUR_PAT_ID"].ToString());\n                    command.Parameters.AddWithValue("@ENT_ID", Session["ENT_ID"].ToString());\n                    command.Parameters.AddWithValue("@SITE_ID", Session["SITE_ID"].ToString());\n                    command.Parameters.AddWithValue("@FileType", FileType);\n                    command.Parameters.AddWithValue("@FileName", FileName);\n                    connection.Open();\n                    rowsAffected = command.ExecuteNonQuery();\n                }\n               \n            }\n        }\n        catch (Exception ex)\n        {\n            //Message.Text = ex.Message;\n            Message.Text = "Doc alredy uploaded for patient";\n            return rowsAffected;\n        }\n        Message.Text = "Doc saved Sucessfully";\n        return rowsAffected;\n    }\n    protected void btnUpload_Click(object sender, EventArgs e)\n    {\n        if (FileUpload1.HasFile)\n        {\n                   \n            int len = FileUpload1.PostedFile.ContentLength;\n            string fileType = FileUpload1.PostedFile.ContentType;\n            string fileName = FileUpload1.PostedFile.FileName;\n            byte[] doc = new byte[len];\n            FileUpload1.PostedFile.InputStream.Read(doc, 0, len);\n            SaveDoc(doc, fileType, fileName);\n        }\n     }\n    protected void DownLoadFile_Click(object sender, EventArgs e)\n    {\n        if (Session["CUR_PAT_ID"] != null)\n        {\n            SqlConnection cn = null;\n            SqlCommand cmd = null;\n            string connectionString = ConfigurationManager.ConnectionStrings["TSDBConnectionString"].ConnectionString;\n            cn = new SqlConnection(connectionString);\n            cmd = new SqlCommand();\n            cmd.Connection = cn;\n            cmd.CommandType = CommandType.Text;\n            string query = string.Format("Select Doc from PatientImages where PAT_ID = \'{0}\'", Session["CUR_PAT_ID"].ToString());\n            cmd.CommandText = query;\n            //Satish//\n            //byte[] getContent = new byte[(int)FileSize];\n            //sourceFile.Read(getContent, 0, (int)sourceFile.Length);\n            //sourceFile.Close();\n            //Response.BinaryWrite(getContent);\n            if (cn.State == ConnectionState.Closed)\n            cn.Open();\n            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);\n            if (reader.FieldCount > 0)\n            {\n                while (reader.Read())\n                {\n                    var Doc = reader["Doc"];\n                    if (Doc != null)\n                    {\n                       \n                    }\n                }\n            }\n        }\n    }\n}\n\n//byte[] getContent = new byte[(int)FileSize];\n//sourceFile.Read(getContent, 0, (int)sourceFile.Length);        \n//sourceFile.Close();        \n//Response.BinaryWrite(getContent);\n\n')))}g.isMDXComponent=!0}}]);