"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[19539],{27457:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(85893),i=n(11151);const o={tags:["C++","MFC"]},r="Unit Testing Native C++ App with out clr",s={permalink:"/blog/2012/06/18/unit-testing-nativE-C++",source:"@site/blog/2012-06-18-unit-testing-nativE-C++.md",title:"Unit Testing Native C++ App with out clr",description:"Unit Testing Native C++ Applications with out \u201c/clr\u201d flag or fall back to 3rd party frameworks",date:"2012-06-18T00:00:00.000Z",formattedDate:"June 18, 2012",tags:[{label:"C++",permalink:"/blog/tags/c"},{label:"MFC",permalink:"/blog/tags/mfc"}],readingTime:.415,hasTruncateMarker:!1,authors:[],frontMatter:{tags:["C++","MFC"]},unlisted:!1,prevItem:{title:"COM Threading Model vs Win32/MFC Threads",permalink:"/blog/2012/06/18/com-threading-model-vs-win32mfc-threads"},nextItem:{title:"COM Containment and Aggregation",permalink:"/blog/2012/06/17/com-containment-and-aggregation"}},l={authorsImageUrls:[]},c=[];function p(t){const e={a:"a",p:"p",...(0,i.a)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"Unit Testing Native C++ Applications with out \u201c/clr\u201d flag or fall back to 3rd party frameworks"}),"\n",(0,a.jsx)(e.p,{children:"Visual Studio 11 provides the ability to do\xa0Unit Testing Native C++ Applications with a new C++ unit testing framework shipping with VS 11."}),"\n",(0,a.jsx)(e.p,{children:"So the C++ developers no longer need to use the \u201c/clr\u201d flag or fall back to 3rd party frameworks."}),"\n",(0,a.jsxs)(e.p,{children:["To learn more about native unit testing in Visual Studio 11, please visit\xa0",(0,a.jsx)(e.a,{href:"http://aka.ms/vs11-unit-testing-native-code",children:"MSDN"}),"."]})]})}function u(t={}){const{wrapper:e}={...(0,i.a)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(p,{...t})}):p(t)}},11151:(t,e,n)=>{n.d(e,{Z:()=>s,a:()=>r});var a=n(67294);const i={},o=a.createContext(i);function r(t){const e=a.useContext(o);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:r(t.components),a.createElement(o.Provider,{value:e},t.children)}}}]);