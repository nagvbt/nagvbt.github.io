"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["24249"],{92969:function(n,e,a){a.r(e),a.d(e,{frontMatter:()=>l,default:()=>u,toc:()=>c,metadata:()=>r,assets:()=>d,contentTitle:()=>t});var r=JSON.parse('{"id":"Languages/Functions","title":"Functions","description":"A function is a reusable block of code that performs a specific task. Breaking code into","source":"@site/docs/Languages/Functions.md","sourceDirName":"Languages","slug":"/Languages/Functions","permalink":"/docs/Languages/Functions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"Methods and Overloading","permalink":"/docs/Languages/Methods"},"next":{"title":"Classes and Objects","permalink":"/docs/Languages/ClassesObjects"}}'),i=a(85893),s=a(50065);let l={sidebar_position:9},t="Functions",d={},c=[{value:"<strong>C++ Functions</strong>",id:"c-functions",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Example",id:"example",level:3},{value:"Anonymous Function (Lambda)",id:"anonymous-function-lambda",level:3},{value:"<strong>C# Functions</strong>",id:"c-functions-1",level:2},{value:"Syntax",id:"syntax-1",level:3},{value:"Example",id:"example-1",level:3},{value:"Anonymous Function (Lambda)",id:"anonymous-function-lambda-1",level:3},{value:"<strong>Java Functions</strong>",id:"java-functions",level:2},{value:"Syntax",id:"syntax-2",level:3},{value:"Example",id:"example-2",level:3},{value:"Anonymous Function (Lambda \u2013 Java 8+)",id:"anonymous-function-lambda--java-8",level:3},{value:"<strong>Python Functions</strong>",id:"python-functions",level:2},{value:"Definition",id:"definition",level:3},{value:"Syntax",id:"syntax-3",level:3},{value:"Example",id:"example-3",level:3},{value:"Default Arguments \u2013 Syntax",id:"default-arguments--syntax",level:3},{value:"Example",id:"example-4",level:3},{value:"Keyword Arguments \u2013 Syntax",id:"keyword-arguments--syntax",level:3},{value:"Example",id:"example-5",level:3},{value:"Positional Arguments \u2013 Syntax",id:"positional-arguments--syntax",level:3},{value:"Example",id:"example-6",level:3},{value:"Arbitrary Arguments \u2013 Syntax",id:"arbitrary-arguments--syntax",level:3},{value:"Example",id:"example-7",level:3},{value:"Nested Functions \u2013 Syntax",id:"nested-functions--syntax",level:3},{value:"Example",id:"example-8",level:3},{value:"Anonymous Function (Lambda) \u2013 Syntax",id:"anonymous-function-lambda--syntax",level:3},{value:"Example",id:"example-9",level:3},{value:"<strong>JavaScript Functions</strong>",id:"javascript-functions",level:2},{value:"Syntax",id:"syntax-4",level:3},{value:"Example",id:"example-10",level:3},{value:"Anonymous Function (Arrow Function)",id:"anonymous-function-arrow-function",level:3},{value:"<strong>TypeScript Functions</strong>",id:"typescript-functions",level:2},{value:"Definition",id:"definition-1",level:3},{value:"Syntax",id:"syntax-5",level:3},{value:"Example",id:"example-11",level:3},{value:"Anonymous Function (Typed Arrow Function)",id:"anonymous-function-typed-arrow-function",level:3}];function o(n){let e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"functions",children:"Functions"})}),"\n",(0,i.jsxs)(e.p,{children:["A ",(0,i.jsx)(e.strong,{children:"function"})," is a reusable block of code that performs a specific task. Breaking code into\r\nfunctions improves readability, reusability, and modularity."]}),"\n",(0,i.jsx)(e.h2,{id:"c-functions",children:(0,i.jsx)(e.strong,{children:"C++ Functions"})}),"\n",(0,i.jsx)(e.h3,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:"returnType functionName(dataType param1, dataType param2) {\r\n    // function body\r\n    return value;\r\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:"int add(int i, int j, int k) {\r\n    return i + j + k;\r\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"anonymous-function-lambda",children:"Anonymous Function (Lambda)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:"auto add = [](int x, int y) {\r\n    return x + y;\r\n};\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"c-functions-1",children:(0,i.jsx)(e.strong,{children:"C# Functions"})}),"\n",(0,i.jsx)(e.h3,{id:"syntax-1",children:"Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"accessModifier returnType FunctionName(dataType param1, dataType param2) {\r\n    // function body\r\n    return value;\r\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public int Add(int i, int j, int k) {\r\n    return i + j + k;\r\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"anonymous-function-lambda-1",children:"Anonymous Function (Lambda)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"Func<int, int, int> add = (x, y) => x + y;\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"java-functions",children:(0,i.jsx)(e.strong,{children:"Java Functions"})}),"\n",(0,i.jsx)(e.h3,{id:"syntax-2",children:"Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// Inside a class\r\nreturnType functionName(dataType param1, dataType param2) {\r\n    // function body\r\n    return value;\r\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"example-2",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public int add(int i, int j, int k) {\r\n    return i + j + k;\r\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"anonymous-function-lambda--java-8",children:"Anonymous Function (Lambda \u2013 Java 8+)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"interface Add {\r\n    int operation(int a, int b);\r\n}\r\n\r\nAdd add = (a, b) -> a + b;\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"python-functions",children:(0,i.jsx)(e.strong,{children:"Python Functions"})}),"\n",(0,i.jsx)(e.h3,{id:"definition",children:"Definition"}),"\n",(0,i.jsxs)(e.p,{children:["A ",(0,i.jsx)(e.strong,{children:"function"})," in Python is created using the ",(0,i.jsx)(e.code,{children:"def"})," keyword. Functions can be nested, support\r\nmultiple argument types, and allow anonymous (lambda) expressions."]}),"\n",(0,i.jsx)(e.h3,{id:"syntax-3",children:"Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"def function_name(parameters):\r\n    # function body\r\n    return value\n"})}),"\n",(0,i.jsx)(e.h3,{id:"example-3",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"def add_numbers(i, j, k):\r\n    return i + j + k\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"default-arguments--syntax",children:"Default Arguments \u2013 Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"def func_name(param=defaultValue):\r\n    # body\n"})}),"\n",(0,i.jsx)(e.h3,{id:"example-4",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'def greet(name="User"):\r\n    print("Hello", name)\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"keyword-arguments--syntax",children:"Keyword Arguments \u2013 Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"def func_name(param1, param2):\r\n    # body\n"})}),"\n",(0,i.jsx)(e.h3,{id:"example-5",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'def profile(name, age):\r\n    print(name, age)\r\n\r\nprofile(age=30, name="Alice")\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"positional-arguments--syntax",children:"Positional Arguments \u2013 Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"def func_name(param1, param2):\r\n    # body\n"})}),"\n",(0,i.jsx)(e.h3,{id:"example-6",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'def person(name, age):\r\n    print(name, age)\r\n\r\nperson("Alice", 30)\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"arbitrary-arguments--syntax",children:"Arbitrary Arguments \u2013 Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"def func_name(*args):   # Non-keyword\r\ndef func_name(**kwargs):  # Keyword\n"})}),"\n",(0,i.jsx)(e.h3,{id:"example-7",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'def many_args(*args):\r\n    for arg in args:\r\n        print(arg)\r\n\r\ndef many_kwargs(**kwargs):\r\n    for k, v in kwargs.items():\r\n        print(f"{k} = {v}")\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"nested-functions--syntax",children:"Nested Functions \u2013 Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"def outer():\r\n    def inner():\r\n        # body\r\n    inner()\n"})}),"\n",(0,i.jsx)(e.h3,{id:"example-8",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'def outer():\r\n    msg = "Nested"\r\n    def inner():\r\n        print(msg)\r\n    inner()\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"anonymous-function-lambda--syntax",children:"Anonymous Function (Lambda) \u2013 Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"lambda arguments: expression\n"})}),"\n",(0,i.jsx)(e.h3,{id:"example-9",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"add = lambda x, y: x + y\r\nprint(add(2, 3))  # Output: 5\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"javascript-functions",children:(0,i.jsx)(e.strong,{children:"JavaScript Functions"})}),"\n",(0,i.jsx)(e.h3,{id:"syntax-4",children:"Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"function functionName(param1, param2) {\r\n    // body\r\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"example-10",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"function add(i, j, k) {\r\n    return i + j + k;\r\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"anonymous-function-arrow-function",children:"Anonymous Function (Arrow Function)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"const add = (x, y) => x + y;\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"typescript-functions",children:(0,i.jsx)(e.strong,{children:"TypeScript Functions"})}),"\n",(0,i.jsx)(e.h3,{id:"definition-1",children:"Definition"}),"\n",(0,i.jsxs)(e.p,{children:["TypeScript functions are like JavaScript functions but with ",(0,i.jsx)(e.strong,{children:"type annotations"})," for parameters and\r\nreturn values."]}),"\n",(0,i.jsx)(e.h3,{id:"syntax-5",children:"Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:"function functionName(param1: type, param2: type): returnType {\r\n    // body\r\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"example-11",children:"Example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:"function add(i: number, j: number, k: number): number {\r\n    return i + j + k;\r\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"anonymous-function-typed-arrow-function",children:"Anonymous Function (Typed Arrow Function)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:"const add = (x: number, y: number): number => x + y;\n"})}),"\n",(0,i.jsx)(e.hr,{})]})}function u(n={}){let{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(o,{...n})}):o(n)}},50065:function(n,e,a){a.d(e,{Z:()=>t,a:()=>l});var r=a(67294);let i={},s=r.createContext(i);function l(n){let e=r.useContext(s);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);