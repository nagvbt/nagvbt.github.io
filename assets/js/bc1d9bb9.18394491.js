"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[14383],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var t=s(96540);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}},70775:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>a});var t=s(93282),r=s(74848),i=s(28453);const l={tags:["React","Front End","Project Setup"]},c="Setting Up a Modern React Project with Linting, Formatting, Styling and Spell Checking**",o={authorsImageUrls:[]},a=[{value:"<strong>Step 1: Create a New React App</strong>",id:"step-1-create-a-new-react-app",level:2},{value:"<strong>Step 2: Initialize Git</strong>",id:"step-2-initialize-git",level:2},{value:"<strong>Step 3: Install Dependencies</strong>",id:"step-3-install-dependencies",level:2},{value:"<strong>Step 4: Configure ESLint</strong>",id:"step-4-configure-eslint",level:2},{value:"<strong>Add ESLint Scripts to <code>package.json</code></strong>",id:"add-eslint-scripts-to-packagejson",level:3},{value:"<strong>Step 5: Configure Prettier</strong>",id:"step-5-configure-prettier",level:2},{value:"<strong>Add Prettier Scripts to <code>package.json</code></strong>",id:"add-prettier-scripts-to-packagejson",level:3},{value:"<strong>Step 6: Configure Stylelint</strong>",id:"step-6-configure-stylelint",level:2},{value:"<strong>Add Stylelint Scripts to <code>package.json</code></strong>",id:"add-stylelint-scripts-to-packagejson",level:3},{value:"<strong>Step 7: Configure Lint-Staged</strong>",id:"step-7-configure-lint-staged",level:2},{value:"<strong>Step 8: Configure Husky for Pre-Commit Hooks</strong>",id:"step-8-configure-husky-for-pre-commit-hooks",level:2},{value:"<strong>Step 9: Configure cspell (Spell Checker)</strong>",id:"step-9-configure-cspell-spell-checker",level:2},{value:"<strong>Add cspell Script to <code>package.json</code></strong>",id:"add-cspell-script-to-packagejson",level:3},{value:"<strong>Step 10: Run the Setup</strong>",id:"step-10-run-the-setup",level:2},{value:"<strong>Conclusion</strong>",id:"conclusion",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["When working on a React project, maintaining clean and consistent code is essential. This guide will walk you through setting up a ",(0,r.jsx)(n.strong,{children:"React"})," project with ",(0,r.jsx)(n.strong,{children:"ESLint, Prettier, Stylelint, Husky, lint-staged, and cspell"})," to automate code formatting, linting, and spell checking."]}),"\n",(0,r.jsx)(n.h2,{id:"step-1-create-a-new-react-app",children:(0,r.jsx)(n.strong,{children:"Step 1: Create a New React App"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"npx create-react-app my-app --use-npm\r\ncd my-app\n"})}),"\n",(0,r.jsx)(n.p,{children:"This sets up a new React project."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"step-2-initialize-git",children:(0,r.jsx)(n.strong,{children:"Step 2: Initialize Git"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"git init\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"step-3-install-dependencies",children:(0,r.jsx)(n.strong,{children:"Step 3: Install Dependencies"})}),"\n",(0,r.jsx)(n.p,{children:"Install necessary development dependencies:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"yarn add -D eslint prettier stylelint husky lint-staged stylelint-config-standard cspell stylelint-config-standard\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"step-4-configure-eslint",children:(0,r.jsx)(n.strong,{children:"Step 4: Configure ESLint"})}),"\n",(0,r.jsx)(n.p,{children:"Initialize ESLint:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"npx eslint --init\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Modify ",(0,r.jsx)(n.code,{children:".eslintrc.json"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "extends": ["react-app", "eslint:recommended", "plugin:prettier/recommended"],\r\n  "rules": {\r\n    "prettier/prettier": "error"\r\n  }\r\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"add-eslint-scripts-to-packagejson",children:(0,r.jsxs)(n.strong,{children:["Add ESLint Scripts to ",(0,r.jsx)(n.code,{children:"package.json"})]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"scripts": {\r\n    "lint:ts": "eslint \\"./src/**/*.{ts,tsx}\\" --max-warnings 0",\r\n    "lint:ts:fix": "eslint --fix \\"./src/**/*.{ts,tsx}\\" --max-warnings 0"\r\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"step-5-configure-prettier",children:(0,r.jsx)(n.strong,{children:"Step 5: Configure Prettier"})}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:".prettierrc"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "singleQuote": true,\r\n  "semi": false\r\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"add-prettier-scripts-to-packagejson",children:(0,r.jsxs)(n.strong,{children:["Add Prettier Scripts to ",(0,r.jsx)(n.code,{children:"package.json"})]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"scripts": {\r\n     "format": "prettier --write .",\r\n    "format:diff": "prettier --list-different ."\r\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"step-6-configure-stylelint",children:(0,r.jsx)(n.strong,{children:"Step 6: Configure Stylelint"})}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:".stylelintrc"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "extends": "stylelint-config-standard"\r\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"add-stylelint-scripts-to-packagejson",children:(0,r.jsxs)(n.strong,{children:["Add Stylelint Scripts to ",(0,r.jsx)(n.code,{children:"package.json"})]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"scripts": {\r\n   "lint:style": "stylelint \\"**/*.css\\"",\r\n   "lint:style:fix": "yarn lint:style --fix"\r\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"step-7-configure-lint-staged",children:(0,r.jsx)(n.strong,{children:"Step 7: Configure Lint-Staged"})}),"\n",(0,r.jsxs)(n.p,{children:["Modify ",(0,r.jsx)(n.code,{children:"package.json"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"lint-staged": {\r\n  "src/**/*.{js,jsx,ts,tsx}": ["eslint --fix", "prettier --write"],\r\n  "src/**/*.{css,scss}": ["stylelint --fix"]\r\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"step-8-configure-husky-for-pre-commit-hooks",children:(0,r.jsx)(n.strong,{children:"Step 8: Configure Husky for Pre-Commit Hooks"})}),"\n",(0,r.jsx)(n.p,{children:"Initialize Husky:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"npx husky init\n"})}),"\n",(0,r.jsx)(n.p,{children:"Add pre-commit hook:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'npx husky add .husky/pre-commit "npx lint-staged"\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"step-9-configure-cspell-spell-checker",children:(0,r.jsx)(n.strong,{children:"Step 9: Configure cspell (Spell Checker)"})}),"\n",(0,r.jsx)(n.p,{children:"Initialize cspell:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"npx cspell --init\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Modify ",(0,r.jsx)(n.code,{children:".cspell.json"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "version": "0.2",\r\n  "language": "en",\r\n  "ignorePaths": ["node_modules", "build", "static", ".docusaurus", "i18n"],\r\n  "dictionaryDefinitions": [\r\n    {\r\n      "name": "project-words",\r\n      "path": "./project-words.txt",\r\n      "noSuggest": true\r\n    }\r\n  ],\r\n  "dictionaries": [\r\n    "css",\r\n    "html",\r\n    "fonts",\r\n    "typescript",\r\n    "softwareTerms",\r\n    "companies",\r\n    "lorem-ipsum",\r\n    "project-words"\r\n  ]\r\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:"project-words.txt"})," file to store custom words."]}),"\n",(0,r.jsx)(n.h3,{id:"add-cspell-script-to-packagejson",children:(0,r.jsxs)(n.strong,{children:["Add cspell Script to ",(0,r.jsx)(n.code,{children:"package.json"})]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"scripts": {\r\n "lint:spelling": "cspell \\"docs/**/*.md\\" \\"blog/**/*.md\\" \\"src/**/*.js\\" \\"src/**/*.tsx\\" \\"docusaurus.config.js\\" --no-progress --show-context --show-suggestions"\r\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"step-10-run-the-setup",children:(0,r.jsx)(n.strong,{children:"Step 10: Run the Setup"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"yarn lint:ts\r\nyarn format\r\nyarn lint:style\r\nyarn lint:spelling\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:(0,r.jsx)(n.strong,{children:"Conclusion"})}),"\n",(0,r.jsx)(n.p,{children:"By following these steps, your React project is now set up with:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ESLint"})," for code linting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Prettier"})," for code formatting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Stylelint"})," for CSS linting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"cspell"})," for spell checking"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Husky & lint-staged"})," for pre-commit checks"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This ensures cleaner, more readable, and error-free code throughout your development process. \ud83d\ude80"})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},93282:e=>{e.exports=JSON.parse('{"permalink":"/blog/2025/04/03/setup-static-code","source":"@site/blog/2025-04-03-setup-static-code.md","title":"Setting Up a Modern React Project with Linting, Formatting, Styling and Spell Checking**","description":"When working on a React project, maintaining clean and consistent code is essential. This guide will walk you through setting up a React project with ESLint, Prettier, Stylelint, Husky, lint-staged, and cspell to automate code formatting, linting, and spell checking.","date":"2025-04-03T00:00:00.000Z","tags":[{"inline":true,"label":"React","permalink":"/blog/tags/react"},{"inline":true,"label":"Front End","permalink":"/blog/tags/front-end"},{"inline":true,"label":"Project Setup","permalink":"/blog/tags/project-setup"}],"readingTime":2.075,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["React","Front End","Project Setup"]},"unlisted":false,"nextItem":{"title":"Static Code Analysis in a React App","permalink":"/blog/2025/04/02/react-static-code-analysis"}}')}}]);