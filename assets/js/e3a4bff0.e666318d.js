"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["94970"],{7961:function(n,r,e){e.r(r),e.d(r,{frontMatter:()=>t,default:()=>h,toc:()=>a,metadata:()=>s,assets:()=>d,contentTitle:()=>l});var s=JSON.parse('{"id":"Languages/Loops","title":"Loops","description":"---","source":"@site/docs/Languages/Loops.md","sourceDirName":"Languages","slug":"/Languages/Loops","permalink":"/docs/Languages/Loops","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Conditional Statements","permalink":"/docs/Languages/ConditionalStatements"},"next":{"title":"Arrays","permalink":"/docs/Languages/Arrays"}}'),i=e(85893),o=e(50065);let t={sidebar_position:7},l="Loops",d={},a=[{value:"<strong>Definition :</strong>",id:"definition-",level:3},{value:"<strong>C#</strong>",id:"c",level:2},{value:"<strong>Syntax &amp; Examples:</strong>",id:"syntax--examples",level:3},{value:"<strong>Java</strong>",id:"java",level:2},{value:"<strong>Syntax &amp; Examples:</strong>",id:"syntax--examples-1",level:3},{value:"<strong>Python</strong>",id:"python",level:2},{value:"<strong>Syntax &amp; Examples:</strong>",id:"syntax--examples-2",level:3},{value:"<strong>JavaScript</strong>",id:"javascript",level:2},{value:"<strong>Syntax &amp; Examples:</strong>",id:"syntax--examples-3",level:3},{value:"<strong>C++</strong>",id:"c-1",level:2},{value:"<strong>Syntax &amp; Examples:</strong>",id:"syntax--examples-4",level:3},{value:"TypeScript",id:"typescript",level:2},{value:"<strong>Summary Table</strong>",id:"summary-table",level:3}];function c(n){let r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"loops",children:"Loops"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"definition-",children:(0,i.jsx)(r.strong,{children:"Definition :"})}),"\n",(0,i.jsxs)(r.p,{children:["A ",(0,i.jsx)(r.strong,{children:"loop"})," lets you repeat a block of code multiple times. It's useful when you want to perform an\r\naction again and again, like going through a list or counting numbers. You can also ",(0,i.jsx)(r.strong,{children:"skip"})," or ",(0,i.jsx)(r.strong,{children:"stop"}),"\r\na loop using ",(0,i.jsx)(r.code,{children:"continue"})," and ",(0,i.jsx)(r.code,{children:"break"}),"."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"c",children:(0,i.jsx)(r.strong,{children:"C#"})}),"\n",(0,i.jsx)(r.h3,{id:"syntax--examples",children:(0,i.jsx)(r.strong,{children:"Syntax & Examples:"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:'// For loop\r\nfor (int i = 0; i < 5; i++) {\r\n    Console.WriteLine(i);\r\n}\r\n\r\n// Foreach loop (used for collections)\r\nstring[] names = { "Alice", "Bob" };\r\nforeach (string name in names) {\r\n    Console.WriteLine(name);\r\n}\r\n\r\n// While loop\r\nint i = 0;\r\nwhile (i < 3) {\r\n    Console.WriteLine(i);\r\n    i++;\r\n}\r\n\r\n// Do-While loop\r\nint j = 0;\r\ndo {\r\n    Console.WriteLine(j);\r\n    j++;\r\n} while (j < 3);\r\n\r\n// Break and Continue\r\nfor (int k = 0; k < 5; k++) {\r\n    if (k == 2) continue;  // Skips 2\r\n    if (k == 4) break;     // Stops before 4\r\n    Console.WriteLine(k);\r\n}\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"java",children:(0,i.jsx)(r.strong,{children:"Java"})}),"\n",(0,i.jsx)(r.h3,{id:"syntax--examples-1",children:(0,i.jsx)(r.strong,{children:"Syntax & Examples:"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-java",children:'// For loop\r\nfor (int i = 0; i < 5; i++) {\r\n    System.out.println(i);\r\n}\r\n\r\n// For-each loop (for arrays/lists)\r\nString[] names = {"Alice", "Bob"};\r\nfor (String name : names) {\r\n    System.out.println(name);\r\n}\r\n\r\n// While loop\r\nint i = 0;\r\nwhile (i < 3) {\r\n    System.out.println(i);\r\n    i++;\r\n}\r\n\r\n// Do-while loop\r\nint j = 0;\r\ndo {\r\n    System.out.println(j);\r\n    j++;\r\n} while (j < 3);\r\n\r\n// Break and Continue\r\nfor (int k = 0; k < 5; k++) {\r\n    if (k == 2) continue;  // Skip number 2\r\n    if (k == 4) break;     // Stop loop when k == 4\r\n    System.out.println(k);\r\n}\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"python",children:(0,i.jsx)(r.strong,{children:"Python"})}),"\n",(0,i.jsx)(r.h3,{id:"syntax--examples-2",children:(0,i.jsx)(r.strong,{children:"Syntax & Examples:"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'# For loop (range-based)\r\nfor i in range(5):\r\n    print(i)\r\n\r\n# For-each loop (in Python, regular `for` acts like foreach)\r\nnames = ["Alice", "Bob"]\r\nfor name in names:\r\n    print(name)\r\n\r\n# While loop\r\ni = 0\r\nwhile i < 3:\r\n    print(i)\r\n    i += 1\r\n\r\n# Python has no do-while, but you can simulate it\r\nj = 0\r\nwhile True:\r\n    print(j)\r\n    j += 1\r\n    if j >= 3:\r\n        break\r\n\r\n# Break and Continue\r\nfor k in range(5):\r\n    if k == 2:\r\n        continue  # Skip 2\r\n    if k == 4:\r\n        break     # Exit before 4\r\n    print(k)\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"javascript",children:(0,i.jsx)(r.strong,{children:"JavaScript"})}),"\n",(0,i.jsx)(r.h3,{id:"syntax--examples-3",children:(0,i.jsx)(r.strong,{children:"Syntax & Examples:"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:'// For loop\r\nfor (let i = 0; i < 5; i++) {\r\n    console.log(i);\r\n}\r\n\r\n// For-of (used for arrays)\r\nlet names = ["Alice", "Bob"];\r\nfor (let name of names) {\r\n    console.log(name);\r\n}\r\n\r\n// For-in (used for object keys)\r\nlet person = {name: "Alice", age: 25};\r\nfor (let key in person) {\r\n    console.log(key + ": " + person[key]);\r\n}\r\n\r\n// While loop\r\nlet i = 0;\r\nwhile (i < 3) {\r\n    console.log(i);\r\n    i++;\r\n}\r\n\r\n// Do-while loop\r\nlet j = 0;\r\ndo {\r\n    console.log(j);\r\n    j++;\r\n} while (j < 3);\r\n\r\n// Break and Continue\r\nfor (let k = 0; k < 5; k++) {\r\n    if (k === 2) continue;  // Skip 2\r\n    if (k === 4) break;     // Stop at 4\r\n    console.log(k);\r\n}\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"c-1",children:(0,i.jsx)(r.strong,{children:"C++"})}),"\n",(0,i.jsx)(r.h3,{id:"syntax--examples-4",children:(0,i.jsx)(r.strong,{children:"Syntax & Examples:"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-cpp",children:'#include <iostream>\r\n#include <string>\r\n\r\nint main() {\r\n    // For loop\r\n    for (int i = 0; i < 5; i++) {\r\n        std::cout << i << std::endl;\r\n    }\r\n\r\n    // Foreach-style loop using range-based for (C++11 and later)\r\n    std::string names[] = { "Alice", "Bob" };\r\n    for (const std::string& name : names) {\r\n        std::cout << name << std::endl;\r\n    }\r\n\r\n    // While loop\r\n    int i = 0;\r\n    while (i < 3) {\r\n        std::cout << i << std::endl;\r\n        i++;\r\n    }\r\n\r\n    // Do-While loop\r\n    int j = 0;\r\n    do {\r\n        std::cout << j << std::endl;\r\n        j++;\r\n    } while (j < 3);\r\n\r\n    // Break and Continue\r\n    for (int k = 0; k < 5; k++) {\r\n        if (k == 2) continue;  // Skips 2\r\n        if (k == 4) break;     // Stops before 4\r\n        std::cout << k << std::endl;\r\n    }\r\n\r\n    return 0;\r\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"typescript",children:"TypeScript"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Types:"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-typescript",children:'// For loop\r\nfor (let i = 0; i < 5; i++) {\r\n    console.log(i);\r\n}\r\n\r\n// For-of loop (equivalent to foreach)\r\nlet names: string[] = ["Alice", "Bob"];\r\nfor (let name of names) {\r\n    console.log(name);\r\n}\r\n\r\n// While loop\r\nlet i: number = 0;\r\nwhile (i < 3) {\r\n    console.log(i);\r\n    i++;\r\n}\r\n\r\n// Do-While loop\r\nlet j: number = 0;\r\ndo {\r\n    console.log(j);\r\n    j++;\r\n} while (j < 3);\r\n\r\n// Break and Continue\r\nfor (let k = 0; k < 5; k++) {\r\n    if (k === 2) continue;  // Skips 2\r\n    if (k === 4) break;     // Stops before 4\r\n    console.log(k);\r\n}\r\n\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"summary-table",children:(0,i.jsx)(r.strong,{children:"Summary Table"})}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Loop Type"}),(0,i.jsx)(r.th,{children:"C#"}),(0,i.jsx)(r.th,{children:"Java"}),(0,i.jsx)(r.th,{children:"Python"}),(0,i.jsx)(r.th,{children:"JavaScript"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"for"})}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Yes (range/iter)"}),(0,i.jsx)(r.td,{children:"Yes"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"foreach"})}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsxs)(r.td,{children:["\u2796 (uses ",(0,i.jsx)(r.code,{children:"for"}),")"]}),(0,i.jsxs)(r.td,{children:["(",(0,i.jsx)(r.code,{children:"for...of"}),")"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"for-in"})}),(0,i.jsx)(r.td,{children:"\u2796"}),(0,i.jsx)(r.td,{children:"\u2796"}),(0,i.jsx)(r.td,{children:"\u2796"}),(0,i.jsx)(r.td,{children:"Yes (for objects)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"for-of"})}),(0,i.jsx)(r.td,{children:"\u2796"}),(0,i.jsx)(r.td,{children:"\u2796"}),(0,i.jsx)(r.td,{children:"\u2796"}),(0,i.jsx)(r.td,{children:"Yes (for arrays)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"while"})}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Yes"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"do-while"})}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"(manual only)"}),(0,i.jsx)(r.td,{children:"Yes"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"break"})}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Yes"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"continue"})}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Yes"}),(0,i.jsx)(r.td,{children:"Yes"})]})]})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"#loops",children:"Back to Top"})})]})}function h(n={}){let{wrapper:r}={...(0,o.a)(),...n.components};return r?(0,i.jsx)(r,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},50065:function(n,r,e){e.d(r,{Z:()=>l,a:()=>t});var s=e(67294);let i={},o=s.createContext(i);function t(n){let r=s.useContext(o);return s.useMemo(function(){return"function"==typeof n?n(r):{...r,...n}},[r,n])}function l(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:t(n.components),s.createElement(o.Provider,{value:r},n.children)}}}]);