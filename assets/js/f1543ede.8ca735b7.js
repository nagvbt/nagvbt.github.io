"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[65477],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),f=a,g=u["".concat(c,".").concat(f)]||u[f]||m[f]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},58137:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const i={title:"Variable arguments handling in C/C++",date:"2011-09-18",categories:["c-cpp-mfc-vcpp"],tags:["cpp"]},o=void 0,l={permalink:"/blog/2011/09/18/variable-arguments-handling",source:"@site/blog/2011-09-18-variable-arguments-handling.md",title:"Variable arguments handling in C/C++",description:"Use va\\list to accept a VARYING NUMBER OF ARGUMENTS for any function in C/C++. printf(const char\\* \\Format, ...) is a real time function which uses va\\_list.",date:"2011-09-18T00:00:00.000Z",formattedDate:"September 18, 2011",tags:[{label:"cpp",permalink:"/blog/tags/cpp"}],readingTime:.65,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Variable arguments handling in C/C++",date:"2011-09-18",categories:["c-cpp-mfc-vcpp"],tags:["cpp"]},prevItem:{title:"Size Matters (C++)",permalink:"/blog/2011/09/18/size-matters-c"},nextItem:{title:"Why size of an empty C++ class not zero?",permalink:"/blog/2011/09/18/why-size-of-an-empty-c-class-not-zero"}},c={authorsImageUrls:[]},s=[],p={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Use va","_","list to accept a VARYING NUMBER OF ARGUMENTS for any function in C/C++. printf(const char","*"," ","_","Format, ...) is a real time function which uses va","_","list."),(0,a.kt)("p",null,"For using va","_","list we need to know about the following macros"),(0,a.kt)("p",null,"va","_","start Initialize a variable argument list (macro) va","_","arg Retrieve next argument (macro) va","_","end End using variable argument list (macro)"),(0,a.kt)("p",null,"The sample explains how to use VARYING NUMBER OF ARGUMENTS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'\n# include <stdarg.h>\n\nint Add(int args, ...) { int sum = 0; int temp = 0;\n\nva\\_list va; //1. Declare a va\\_list\n\nva\\_start(va, args); //2. Initialise\n\nfor(int i = 0; i<=args; i++) { temp = va\\_arg(va, int); //3. Retrieve sum = temp+sum; }\n\nva\\_end(va); //4. END\n\nreturn sum; }\n\nvoid main() { printf("sum=%d n ", Add(2, 1, 2, 5)); //OutPut: 8 }\n\n\\[/source\\]\n')))}m.isMDXComponent=!0}}]);