"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[26615],{25089:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=e(85893),s=e(11151);const a={tags:["C++","Design Patterns"]},o="'Singleton' Design Pattern using simple program",i={permalink:"/blog/2012/04/06/singleton-design-pattern-using-simple-program",source:"@site/blog/2012-04-06-singleton-design-pattern-using-simple-program.md",title:"'Singleton' Design Pattern using simple program",description:"Definition: Ensure a class only has one instance and provide a global point of access to it.",date:"2012-04-06T00:00:00.000Z",formattedDate:"April 6, 2012",tags:[{label:"C++",permalink:"/blog/tags/c"},{label:"Design Patterns",permalink:"/blog/tags/design-patterns"}],readingTime:.5,hasTruncateMarker:!1,authors:[],frontMatter:{tags:["C++","Design Patterns"]},unlisted:!1,prevItem:{title:"'Factory Method' Design Pattern using simple program",permalink:"/blog/2012/04/06/factorymethod"},nextItem:{title:"\u2018AbstractFactory\u2019 Design Pattern using simple program",permalink:"/blog/2012/04/04/abstractfactory-designpatter"}},l={authorsImageUrls:[]},c=[];function g(n){const t={code:"code",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Definition:"})," Ensure a class only has one instance and provide a global point of access to it."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Program:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",children:'#include "iostream"\r\nusing namespace std;\r\n\r\nclass Singleton\r\n{\r\nprivate:\r\n    static Singleton* instance;\r\n    Singleton() {}\r\n\r\npublic:\r\n    static Singleton* Instance()\r\n    {\r\n        if(instance == NULL)\r\n        {\r\n            instance = new Singleton();\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    void Show()\r\n    {\r\n        cout&lt;&lt;"Singleton Class"&lt;&lt;endl;\r\n    }\r\n};\r\n\r\nSingleton* Singleton::instance = NULL;\r\n\r\nint main()\r\n{\r\n    Singleton* obj1 = Singleton::Instance();\r\n    obj1->Show();\r\n\r\n    Singleton* obj2 = Singleton::Instance();\r\n    obj2->Show();\r\n\r\n    getchar();\r\n\r\n    return 0;\r\n}\r\n\r\n/*\r\nOUT PUT\r\n-------\r\nSingleton Class\r\nSingleton Class\r\n*/\n'})})]})}function p(n={}){const{wrapper:t}={...(0,s.a)(),...n.components};return t?(0,r.jsx)(t,{...n,children:(0,r.jsx)(g,{...n})}):g(n)}},11151:(n,t,e)=>{e.d(t,{Z:()=>i,a:()=>o});var r=e(67294);const s={},a=r.createContext(s);function o(n){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function i(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),r.createElement(a.Provider,{value:t},n.children)}}}]);