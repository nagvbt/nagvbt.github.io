"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[32824],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,b=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(b,i(i({ref:t},c),{},{components:n})):a.createElement(b,i({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},47995:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={},i="WCF Step by Step Tutorial",l={unversionedId:"articles/WCF/Tutorial",id:"articles/WCF/Tutorial",title:"WCF Step by Step Tutorial",description:"Basics of WCF",source:"@site/docs/articles/WCF/Tutorial.md",sourceDirName:"articles/WCF",slug:"/articles/WCF/Tutorial",permalink:"/docs/articles/WCF/Tutorial",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Random FAQ (SQL)",permalink:"/docs/articles/SQL/RandomFaq"},next:{title:"WPF View Switcher Tutorial",permalink:"/docs/articles/WPF/ViewSwitcherTutorial"}},s={},p=[{value:"Basics of WCF",id:"basics-of-wcf",level:2},{value:"Definition of WCF",id:"definition-of-wcf",level:3},{value:"Features of WCF",id:"features-of-wcf",level:3},{value:"Terms of WCF",id:"terms-of-wcf",level:3},{value:"Types of Contracts:",id:"types-of-contracts",level:3},{value:"<strong>WCF Step by Step Tutorial</strong>",id:"wcf-step-by-step-tutorial-1",level:2},{value:"Steps for creating ConsoleMathClient",id:"steps-for-creating-consolemathclient",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"wcf-step-by-step-tutorial"},"WCF Step by Step Tutorial"),(0,r.kt)("h2",{id:"basics-of-wcf"},"Basics of WCF"),(0,r.kt)("h3",{id:"definition-of-wcf"},"Definition of WCF"),(0,r.kt)("p",null,"Windows Communication Foundation (WCF) is a framework for building service-oriented applications. Using WCF we can build secure, reliable, transacted solutions that integrate across platforms."),(0,r.kt)("p",null,"WCF is a unified framework which provides :"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"NET Remoting "),(0,r.kt)("li",{parentName:"ol"},"Distributed Transactions "),(0,r.kt)("li",{parentName:"ol"},"Message Queues and "),(0,r.kt)("li",{parentName:"ol"},"Web Services\xa0into a single service-oriented programming model for distributed computing.")),(0,r.kt)("p",null,"WCF\xa0interoperate\xa0between WCF-based applications and any other processes that communicate via SOAP (Simple Object Access Protocol) messages."),(0,r.kt)("h3",{id:"features-of-wcf"},"Features of WCF"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Service Orientation"),(0,r.kt)("li",{parentName:"ol"},"Interoperability"),(0,r.kt)("li",{parentName:"ol"},"Multiple Message Patterns"),(0,r.kt)("li",{parentName:"ol"},"Service Metadata"),(0,r.kt)("li",{parentName:"ol"},"Data Contracts"),(0,r.kt)("li",{parentName:"ol"},"Security"),(0,r.kt)("li",{parentName:"ol"},"Multiple Transports and Encodings"),(0,r.kt)("li",{parentName:"ol"},"Reliable and Queued Messages"),(0,r.kt)("li",{parentName:"ol"},"Durable Messages"),(0,r.kt)("li",{parentName:"ol"},"Transactions"),(0,r.kt)("li",{parentName:"ol"},"AJAX and REST Support"),(0,r.kt)("li",{parentName:"ol"},"Extensibility")),(0,r.kt)("p",null,"To know more about features of WCF see:\xa0",(0,r.kt)("a",{parentName:"p",href:"http://msdn.microsoft.com/en-us/library/ms733103.aspx"},"http://msdn.microsoft.com/en-us/library/ms733103.aspx")),(0,r.kt)("h3",{id:"terms-of-wcf"},"Terms of WCF"),(0,r.kt)("p",null,"A\xa0WCF service is exposed to the outside world as a collection of endpoints."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"1","."," Endpoint:")," Endpoint is a construct at which messages are sent or received (or both). Endpoint\xa0comprises of\xa0",(0,r.kt)("strong",{parentName:"p"},"ABC's")," "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"What are ABC's of WCF ?"))," "),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"A. Address")),"\xa0- Address is a location that defines where messages can be sent"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"B. Binding")),"\xa0- Binding is a specification of the communication mechanism (a binding) that described how messages should be sent"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"C. Contract")),"\xa0- Contract is a definition for a set of messages that can be sent or received (or both) at that location (a service contract) that describes what message can be sent."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"2","."," Service:")," A construct that exposes one or more endpoints, with each endpoint exposing one or more service operations."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"3","."," Contracts:")," A contract is a agreement between two or more parties for common understanding and it is a\xa0is a platform-neutral and standard\xa0way of describing what the service does.\xa0In WCF, all services expose contracts."),(0,r.kt)("h3",{id:"types-of-contracts"},"Types of Contracts:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Operation Contract: An operation contract defines the parameters and return type of an operation.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"[OperationContract]\ndouble Add(double i, double j);\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Service Contract: Ties together multiple related operations contracts into a single functional unit.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"[ServiceContract] //System.ServiceModel\npublic interface IMath\n{\n[OperationContract]\ndouble Add(double i, double j);\n[OperationContract]\ndouble Sub(double i, double j);\n[OperationContract]\nComplex AddComplexNo(Complex i, Complex j);\n[OperationContract]\nComplex SubComplexNo(Complex i, Complex j);\n}\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Data Contract: The descriptions in metadata of the data types that a service uses.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"// Use a data contract\n[DataContract] //using System.Runtime.Serialization\npublic class Complex\n{\nprivate int real;\nprivate int imaginary;\n\n[DataMember]\npublic int Real { get; set; }\n\n[DataMember]\npublic int Imaginary { get; set; }\n}\n")),(0,r.kt)("h2",{id:"wcf-step-by-step-tutorial-1"},(0,r.kt)("strong",{parentName:"h2"},"WCF Step by Step Tutorial")),(0,r.kt)("p",null,"This is the Basic WCF Tutorial 'wcfMathSerLib' will be created in a step by step approach. This 'wcfMathSerLib' will be tested by 'ConsoleMathClient' and with 'WCF Test Client'"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Steps for creating wcfMathSerLib")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open Visual Studio 2010 and File->NewProject "),(0,r.kt)("li",{parentName:"ol"},"select WCF in 'Recent Templates' "),(0,r.kt)("li",{parentName:"ol"},"select 'WCF Service Library'"),(0,r.kt)("li",{parentName:"ol"},"Give Name as wcfMathServiceLibrary "),(0,r.kt)("li",{parentName:"ol"},"Click OK"),(0,r.kt)("li",{parentName:"ol"},"Delete IService1.cs and Service1.cs"),(0,r.kt)("li",{parentName:"ol"},"Add IMath.cs and MathService.cs and add the code listed below")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"IMath.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"using System.Runtime.Serialization;\nusing System.ServiceModel;\n \nnamespace WcfMathServLib\n{\n[ServiceContract] //System.ServiceModel\npublic interface IMath\n{\n[OperationContract]\ndouble Add(double i, double j);\n[OperationContract]\ndouble Sub(double i, double j);\n[OperationContract]\nComplex AddComplexNo(Complex i, Complex j);\n[OperationContract]\nComplex SubComplexNo(Complex i, Complex j);\n}\n// Use a data contract\n[DataContract] //using System.Runtime.Serialization\npublic class Complex\n{\n    private int real;\n    private int imaginary;\n \n    [DataMember]\n    public int Real { get; set; }\n \n    [DataMember]\n    public int Imaginary { get; set; }\n}&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;\n \n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"MathService.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"namespace WcfMathServLib\n{\n  public class MathService : IMath\n  {\n        public double Add(double i, double j)\n        {\n            return (i + j);\n        }\n\n        public double Sub(double i, double j)\n        {\n            return (i - j);\n        }\n\n        public Complex AddComplexNo(Complex i, Complex j)\n        {\n            Complex result = new Complex();\n            result.Real = i.Real + j.Real;\n            result.Imaginary = i.Imaginary + j.Imaginary;\n            return result;\n        }\n\n        public Complex SubComplexNo(Complex i, Complex j)\n        {\n            Complex result = new Complex();\n            result.Real = i.Real - j.Real;\n            result.Imaginary = i.Imaginary - j.Imaginary;\n            return result;\n        }\n  }\n}\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Modify the App.config file as shown")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"App.config")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8" ?>\n<configuration>\n\n<system.web>\n<compilation debug="true" />\n</system.web>\n\n<system.sericeModel>\n<services>\n<service name="WcfMathServLib.MathService">\n  <host>\n      <baseAddresses>\n        <add baseAddress = "http://localhost:8732/Design\\_Time\\_Addresses/WcfMathServLib/MathService/" />\n      </baseAddresses>\n    </host>\n\n    \x3c!-- Service Endpoints --\x3e\n    <endpoint address ="" binding="wsHttpBinding" contract="WcfMathServLib.IMath">\n      <identity>\n        <dns value="localhost"/>\n      </identity>\n    </endpoint>\n\n    \x3c!-- Metadata Endpoints --\x3e\n    <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>\n  </service>\n</services>\n<behaviors>\n\n  <serviceBehaviors>\n    <behavior>\n       <serviceMetadata httpGetEnabled="True"/>\n      <serviceDebug includeExceptionDetailInFaults="False" />\n    </behavior>\n  </serviceBehaviors>\n</behaviors>\n</system.sericeModel>\n\n</configuration>\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Result Using WCF Test Client")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Run the WcfMathServLib project you will get the \u2018WCF Test Client\u2019"),(0,r.kt)("li",{parentName:"ol"},"Select each method say \u2018AddComplexNo\u2019 Give the values in \u2018Request\u2019"),(0,r.kt)("li",{parentName:"ol"},"Click on Invoke button"),(0,r.kt)("li",{parentName:"ol"},"See the results in \u201cResponse\u201d")),(0,r.kt)("h2",{id:"steps-for-creating-consolemathclient"},"Steps for creating ConsoleMathClient"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open Visual Studio 2010 and File->NewProject"),(0,r.kt)("li",{parentName:"ol"},"select Visual C#->Windows in \u2018Installed Templates\u2019"),(0,r.kt)("li",{parentName:"ol"},"select \u2018Console Application\u2019"),(0,r.kt)("li",{parentName:"ol"},"Give Name as ConsoleMathClient"),(0,r.kt)("li",{parentName:"ol"},"Click OK"),(0,r.kt)("li",{parentName:"ol"},"Go to \u2018Solution Explorer\u2019 Right click on ConsoleMathClient -> Select \u2018Add Service Reference\u2019 the below dialog will be displayed"),(0,r.kt)("li",{parentName:"ol"},"Click on Discover button"),(0,r.kt)("li",{parentName:"ol"},"Give namespace as \u2018MathServiceReference\u2019 and click OK")),(0,r.kt)("p",null,"The service reference will be added now modify the program.cs as shown below."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Program.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"using System;\nusing ConsoleMathClient.MathServiceReference;\n\nnamespace ConsoleMathClient\n{\n  class Program\n  {\n    static void Main(string\\[\\] args)\n    {\n        Console.WriteLine(Press Enter to run the client....);\n        Console.ReadLine();\n\n        MathClient math = new MathClient();\n        Console.WriteLine(Add of 3 and 2 = {0}, math.Add(3, 2));\n        Console.WriteLine(Sub of 3 and 2 = {0}, math.Sub(3, 2));\n\n        Complex no1 = new Complex();\n        no1.Real = 3;\n        no1.Imaginary = 3;\n\n        Complex no2 = new Complex();\n        no2.Real = 2;\n        no2.Imaginary = 2;\n\n        Complex result = new Complex();\n        result = math.AddComplexNo(no1, no2);\n        Console.WriteLine(Add of 3+3i and 2+2i = {0}+{1}i, result.Real, result.Imaginary);\n\n        result = math.SubComplexNo(no1, no2);\n        Console.WriteLine(Sub of 3+3i and 2+2i = {0}+{1}i, result.Real, result.Imaginary);\n\n        Console.ReadLine();\n    }\n  }\n\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Result")),(0,r.kt)("p",null,"Compile and Run the project to see the Result"))}u.isMDXComponent=!0}}]);