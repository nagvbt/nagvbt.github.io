"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["89369"],{27421:function(e,n,r){r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});var t=r(66684),s=r(85893),o=r(50065);let a={tags:["CSharp"]},i="Sending SMS using C",l={authorsImageUrls:[]},c=[];function p(e){let n={code:"code",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Step 1:"})," Create a new project in Microsoft Visual Studio 2008 (File -> New -> Project -> Visual C# -> Console Application). Give SMS_Sender name and also specify the location where to store the project."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Step 2:"})," Now add a new item to the project we just created (Project -> Add New Item -> Class). Specify a name to the class as \u2018SMSHelper\u2019. The code now looks like as follows. The namespace used is"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"using System.IO; \r\nusing System.Net; \n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"SMSHelper.cs"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:' public class SMSHelper { \r\n  private WebResponse myResponse = null; \r\n  private string result = string.Empty; \r\n  private string formatUrl(string ToMobileNo, string Message) {\r\n     DateTime mydate = System.DateTime.Now; \r\n     string url = ""; url += "method=sendMessage"; \r\n     url += "&userid=2000053959"; // your loginId - 1 \r\n     url += "&password=Gdgek2yiY";//password - 2 \r\n     url += "&msg=" + mydate.ToString(); \r\n     url += Message; \r\n     url += "&send_to="; // a valid 10 digit phone no. \r\n     url += ToMobileNo; url += "&v=1.1"; \r\n     url += "&msg_type=TEXT";  // Can be "FLASH" or "UNICODE\\_TEXT" or "BINARY" \r\n     url += "&auth_scheme=PLAIN"; \r\n     return url; \r\n     }\r\n\r\n    public string SendSms(string ToMobileNo , string Message)\r\n    {\r\n        try\r\n          {\r\n            string finalUrl = "http://enterprise.smsgupshup.com/GatewayAPI/rest?" + formatUrl(ToMobileNo, Message);\r\n            HttpWebRequest myRequest = (HttpWebRequest)WebRequest.Create(finalUrl);\r\n            myResponse = myRequest.GetResponse();\r\n            Stream st = myResponse.GetResponseStream();\r\n\r\n            Encoding ec = System.Text.Encoding.GetEncoding("utf-8");\r\n            StreamReader reader = new System.IO.StreamReader(st, ec);\r\n\r\n            result = reader.ReadToEnd();\r\n\r\n            reader.Close();\r\n            st.Close();\r\n            return result;\r\n        }\r\n        catch (Exception exp)\r\n        {\r\n           return result;\r\n        }\r\n        finally\r\n        {\r\n            if (myResponse != null) myResponse.Close();\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Step 3:"})," Open Program.cs and in Main write the following lines to send the SMS"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:' class Program { \r\n  static void Main(string[] args) { \r\n    SMSHelper smsObj = new SMSHelper(); \r\n    string Text = smsObj.SendSms("1234567890", "HelloWorld"); \r\n    Console.WriteLine(Text); \r\n    } \r\n} \n'})})]})}function u(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},50065:function(e,n,r){r.d(n,{Z:()=>i,a:()=>a});var t=r(67294);let s={},o=t.createContext(s);function a(e){let n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}},66684:function(e){e.exports=JSON.parse('{"permalink":"/blog/2012/01/23/sending-sms-using-c","source":"@site/blog/2012-01-23-sending-sms-using-c.md","title":"Sending SMS using C","description":"Step 1: Create a new project in Microsoft Visual Studio 2008 (File -> New -> Project -> Visual C# -> Console Application). Give SMS_Sender name and also specify the location where to store the project.","date":"2012-01-23T00:00:00.000Z","tags":[{"inline":true,"label":"CSharp","permalink":"/blog/tags/c-sharp"}],"readingTime":1.24,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["CSharp"]},"unlisted":false,"prevItem":{"title":"Get back the Recent Documents Menu in Windows 7","permalink":"/blog/2012/01/23/get-back-recent-documents-menu-win7"},"nextItem":{"title":"Message Map vs Virtual Functions","permalink":"/blog/2012/01/21/message-map-vs-virtual-functions"}}')}}]);