"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["58366"],{50065:function(n,e,r){r.d(e,{Z:()=>s,a:()=>o});var t=r(67294);let a={},i=t.createContext(a);function o(n){let e=t.useContext(i);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),t.createElement(i.Provider,{value:e},n.children)}},71387:function(n,e,r){r.r(e),r.d(e,{frontMatter:()=>o,default:()=>m,contentTitle:()=>s,assets:()=>c,toc:()=>d,metadata:()=>t});var t=JSON.parse('{"id":"CSharp/UploadInDB","title":"Upload in DB","description":"Image Upload in DB","source":"@site/docs/CSharp/UploadInDB.md","sourceDirName":"CSharp","slug":"/CSharp/UploadInDB","permalink":"/docs/CSharp/UploadInDB","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"CSharp","previous":{"title":"SMS Sender","permalink":"/docs/CSharp/SmsSender"}}'),a=r(85893),i=r(50065);let o={},s="Upload in DB",c={},d=[{value:"Image Upload in DB",id:"image-upload-in-db",level:2},{value:"Class",id:"class",level:3},{value:"DB script",id:"db-script",level:3},{value:"File Upload in DB",id:"file-upload-in-db",level:2},{value:"Class",id:"class-1",level:3}];function l(n){let e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",pre:"pre",...(0,i.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"upload-in-db",children:"Upload in DB"})}),"\n",(0,a.jsx)(e.h2,{id:"image-upload-in-db",children:"Image Upload in DB"}),"\n",(0,a.jsx)(e.h3,{id:"class",children:"Class"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:'using System;\r\nusing System.Configuration;\r\nusing System.Data.SqlClient;\r\nusing System.IO;\r\nusing System.Data;\r\npublic partial class ImageUploader : System.Web.UI.Page\r\n{\r\n    protected void Page_Load(object sender, EventArgs e)\r\n    {\r\n    }\r\n    protected void btnView_Click(object sender, EventArgs e)\r\n    {\r\n        if (Session["CUR_PAT_ID"] != null)\r\n        {\r\n            SqlConnection cn = null;\r\n            SqlCommand cmd = null;\r\n            string connectionString = ConfigurationManager.ConnectionStrings["TSDBConnectionString"].ConnectionString;\r\n            cn = new SqlConnection(connectionString);\r\n            cmd = new SqlCommand();\r\n            cmd.Connection = cn;\r\n            cmd.CommandType = CommandType.Text;\r\n            string query = string.Format("Select Photo from PatientImages where PAT_ID = \'{0}\'", Session["CUR_PAT_ID"].ToString());\r\n            cmd.CommandText = query;\r\n            if (cn.State == ConnectionState.Closed)\r\n                cn.Open();\r\n            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);\r\n           \r\n            if (reader.FieldCount > 0)\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                    var imgage = reader["Photo"];\r\n                    if (imgage != null)\r\n                    {\r\n                      //Satish  imgPatient.Value = imgage;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private int SaveImage(byte[] image)\r\n    {\r\n        int rowsAffected = 0;\r\n        string connectionString = ConfigurationManager.ConnectionStrings["TSDBConnectionString"].ConnectionString;\r\n        try\r\n        {\r\n            using (SqlConnection connection = new SqlConnection(connectionString))\r\n            {\r\n                using (SqlCommand command = connection.CreateCommand())\r\n                {\r\n                    command.CommandText = "INSERT INTO PatientImages (Photo, PAT_ID, ENT_ID, SITE_ID) VALUES (@Photo, @PAT_ID, @ENT_ID, @SITE_ID)";\r\n                    command.Parameters.AddWithValue("@Photo", image);\r\n                    command.Parameters.AddWithValue("@PAT_ID", Session["CUR_PAT_ID"].ToString());\r\n                    command.Parameters.AddWithValue("@ENT_ID", Session["ENT_ID"].ToString());\r\n                    command.Parameters.AddWithValue("@SITE_ID", Session["SITE_ID"].ToString());\r\n                    connection.Open();\r\n                    rowsAffected = command.ExecuteNonQuery();\r\n                }\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            //Message.Text = ex.Message;\r\n            Message.Text = "Image already uploaded for patient";\r\n            return rowsAffected;\r\n        }\r\n        Message.Text = "Image saved successfully";\r\n        return rowsAffected;\r\n    }\r\n    protected void btnUpload_Click(object sender, EventArgs e)\r\n    {\r\n         if (FileUpload1.HasFile)\r\n            {            \r\n                using (BinaryReader reader = new BinaryReader(FileUpload1.PostedFile.InputStream))\r\n                {\r\n                    byte[] image = reader.ReadBytes(FileUpload1.PostedFile.ContentLength);\r\n                    SaveImage(image);\r\n                }\r\n            }          \r\n        }   \r\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"db-script",children:"DB script"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",children:"CREATE TABLE [dbo].[PatientImages](\r\n     [PAT_ID] [varchar](30) NOT NULL,\r\n     [PAT_IMG_ID] [varchar](30) NOT NULL,\r\n     [Photo] [image] NULL,\r\n     [BarCode] [image] NULL,\r\n     [Vitals] [image] NULL,\r\n     [C1] [image] NULL,\r\n     [C2] [image] NULL,\r\n     [C3] [image] NULL,\r\n     [C4] [image] NULL,\r\n     [SITE_ID] [nchar](10) NOT NULL,\r\n     [ENT_ID] [nchar](10) NOT NULL,\r\n     [Doc] [varbinary](max) NULL,\r\n     [FileType] [varchar](20) NULL,\r\n     [FileName] [varchar](20) NULL)\n"})}),"\n",(0,a.jsx)(e.h2,{id:"file-upload-in-db",children:"File Upload in DB"}),"\n",(0,a.jsx)(e.h3,{id:"class-1",children:"Class"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:'using System;\r\nusing System.IO;\r\nusing System.Configuration;\r\nusing System.Data.SqlClient;\r\nusing System.Data;\r\n\r\npublic partial class Document : System.Web.UI.Page\r\n{\r\n    protected void Page_Load(object sender, EventArgs e)\r\n    {\r\n    }\r\n    private int SaveDoc(byte[] Doc, string FileType, string FileName)\r\n    //private int SaveImage(byte[] Doc)\r\n    {\r\n        int rowsAffected = 0;\r\n        string connectionString = ConfigurationManager.ConnectionStrings["TSDBConnectionString"].ConnectionString;\r\n        try\r\n        {\r\n            using (SqlConnection connection = new SqlConnection(connectionString))\r\n            {\r\n                using (SqlCommand command = connection.CreateCommand())\r\n                {\r\n                    command.CommandText = "INSERT INTO PatientImages (PAT_ID, ENT_ID, SITE_ID,Doc, FileType, FileName) VALUES (@PAT_ID, @ENT_ID, @SITE_ID, @Doc, @FileType, @FileName)";\r\n                    command.Parameters.AddWithValue("@Doc", Doc);\r\n                    command.Parameters.AddWithValue("@PAT_ID", Session["CUR_PAT_ID"].ToString());\r\n                    command.Parameters.AddWithValue("@ENT_ID", Session["ENT_ID"].ToString());\r\n                    command.Parameters.AddWithValue("@SITE_ID", Session["SITE_ID"].ToString());\r\n                    command.Parameters.AddWithValue("@FileType", FileType);\r\n                    command.Parameters.AddWithValue("@FileName", FileName);\r\n                    connection.Open();\r\n                    rowsAffected = command.ExecuteNonQuery();\r\n                }\r\n               \r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            //Message.Text = ex.Message;\r\n            Message.Text = "Doc already uploaded for patient";\r\n            return rowsAffected;\r\n        }\r\n        Message.Text = "Doc saved successfully";\r\n        return rowsAffected;\r\n    }\r\n    protected void btnUpload_Click(object sender, EventArgs e)\r\n    {\r\n        if (FileUpload1.HasFile)\r\n        {\r\n                   \r\n            int len = FileUpload1.PostedFile.ContentLength;\r\n            string fileType = FileUpload1.PostedFile.ContentType;\r\n            string fileName = FileUpload1.PostedFile.FileName;\r\n            byte[] doc = new byte[len];\r\n            FileUpload1.PostedFile.InputStream.Read(doc, 0, len);\r\n            SaveDoc(doc, fileType, fileName);\r\n        }\r\n     }\r\n    protected void DownLoadFile_Click(object sender, EventArgs e)\r\n    {\r\n        if (Session["CUR_PAT_ID"] != null)\r\n        {\r\n            SqlConnection cn = null;\r\n            SqlCommand cmd = null;\r\n            string connectionString = ConfigurationManager.ConnectionStrings["TSDBConnectionString"].ConnectionString;\r\n            cn = new SqlConnection(connectionString);\r\n            cmd = new SqlCommand();\r\n            cmd.Connection = cn;\r\n            cmd.CommandType = CommandType.Text;\r\n            string query = string.Format("Select Doc from PatientImages where PAT_ID = \'{0}\'", Session["CUR_PAT_ID"].ToString());\r\n            cmd.CommandText = query;\r\n            //Satish//\r\n            //byte[] getContent = new byte[(int)FileSize];\r\n            //sourceFile.Read(getContent, 0, (int)sourceFile.Length);\r\n            //sourceFile.Close();\r\n            //Response.BinaryWrite(getContent);\r\n            if (cn.State == ConnectionState.Closed)\r\n            cn.Open();\r\n            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);\r\n            if (reader.FieldCount > 0)\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                    var Doc = reader["Doc"];\r\n                    if (Doc != null)\r\n                    {\r\n                       \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//byte[] getContent = new byte[(int)FileSize];\r\n//sourceFile.Read(getContent, 0, (int)sourceFile.Length);        \r\n//sourceFile.Close();        \r\n//Response.BinaryWrite(getContent);\r\n\n'})})]})}function m(n={}){let{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(l,{...n})}):l(n)}}}]);