"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["82441"],{75072:function(e,n,t){t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var o=t(4808),s=t(85893),r=t(50065);let a={tags:["C++"]},l="Why size of an empty C++ class not zero?",i={authorsImageUrls:[]},c=[];function d(e){let n={code:"code",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"To ensure that the addresses of two different objects will be different C++ compiler will allocate one byte of memory. The below sample code explains clearly. Because of this behaviour the addresses of class X objects are not equal even though there is no data present in the class X."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:'class X {\r\n\r\n};\r\n\r\nclass Y {\r\n\r\n};\r\n\r\nvoid main() { \r\n  X objX1, objX2; Y objY;\r\n\r\ncout<<"size of objX1: "<<sizeof(objX1)<<endl; //Output: 1 \r\ncout<<"size of objY: "<<sizeof(objY)<<endl; //Output: 1\r\n\r\n//Addresses\r\n cout<<"Address of objX1: "<<&objX1<<endl; \r\n cout<<"Address of objX2: "<<&objX2<<endl;\r\n\r\ncout<<"Address of objY: "<<&objY<<endl;\r\n\r\nif(&objX1 == &objX2) { \r\n  cout<<"Never Happens"; \r\n  }\r\n}\n'})})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},50065:function(e,n,t){t.d(n,{Z:()=>l,a:()=>a});var o=t(67294);let s={},r=o.createContext(s);function a(e){let n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(r.Provider,{value:n},e.children)}},4808:function(e){e.exports=JSON.parse('{"permalink":"/blog/2011/09/18/why-size-of-an-empty-c-class-not-zero","source":"@site/blog/2011-09-18-why-size-of-an-empty-c-class-not-zero.md","title":"Why size of an empty C++ class not zero?","description":"To ensure that the addresses of two different objects will be different C++ compiler will allocate one byte of memory. The below sample code explains clearly. Because of this behaviour the addresses of class X objects are not equal even though there is no data present in the class X.","date":"2011-09-18T00:00:00.000Z","tags":[{"inline":true,"label":"C++","permalink":"/blog/tags/c"}],"readingTime":0.59,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++"]},"unlisted":false,"prevItem":{"title":"Variable arguments handling in C/C++","permalink":"/blog/2011/09/18/variable-arguments-handling"},"nextItem":{"title":"Console Application Event Handling","permalink":"/blog/2011/09/03/console-application-event-handling"}}')}}]);