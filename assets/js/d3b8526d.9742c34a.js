"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[7206],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function u(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?u(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},u=Object.keys(e);for(r=0;r<u.length;r++)t=u[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(r=0;r<u.length;r++)t=u[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,u=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=l(t),f=a,m=s["".concat(c,".").concat(f)]||s[f]||d[f]||u;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var u=t.length,i=new Array(u);i[0]=f;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[s]="string"==typeof e?e:a,i[1]=o;for(var l=2;l<u;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},33807:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>u,metadata:()=>o,toc:()=>l});var r=t(87462),a=(t(67294),t(3905));const u={},i="Queue",o={unversionedId:"articles/Cpp/DataStructures/Queue",id:"articles/Cpp/DataStructures/Queue",title:"Queue",description:"",source:"@site/docs/articles/Cpp/DataStructures/Queue.md",sourceDirName:"articles/Cpp/DataStructures",slug:"/articles/Cpp/DataStructures/Queue",permalink:"/docs/articles/Cpp/DataStructures/Queue",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Linked List",permalink:"/docs/articles/Cpp/DataStructures/LinkedList"},next:{title:"Stack",permalink:"/docs/articles/Cpp/DataStructures/Stack"}},c={},l=[],p={toc:l},s="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(s,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"queue"},"Queue"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'\n#include "iostream"\nusing namespace std;\n\n#define MAX 10\n\nclass Queue\n{\nprivate:\n    int arr[MAX];\n    int front, rear;\n\npublic:\n    Queue()\n    {\n        front = -1;\n        rear = -1;\n\n    }\n\n    void Add(int item)\n    {\n        if (rear == MAX - 1)\n        {\n            cout << endl << "Queue is full";\n            return;\n        }\n\n        rear++;\n        arr[rear] = item;\n\n        if (front == -1)\n            front = 0;\n    }\n\n    int Delete()\n    {\n        if (front == -1)\n        {\n            cout << endl << "Queue is empty";\n            return NULL;\n        }\n\n        int data = arr[front];\n\n        if (front == rear)\n            front = rear = -1;\n        else\n            front++;\n\n        return data;\n    }\n};\n\nint main()\n{\n    Queue q;\n\n    q.Add(1);\n    q.Add(2);\n    q.Add(3);\n\n    int i = q.Delete();\n    cout << endl << "Item deleted = " << i << endl;\n\n    i = q.Delete();\n    cout << endl << "Item deleted = " << i << endl;\n\n    return 0;\n}\n\n/*\nOUTPUT\n----------------\nItem deleted = 1\n\nItem deleted = 2\n*/\n\n')))}d.isMDXComponent=!0}}]);