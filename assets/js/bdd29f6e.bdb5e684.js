"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[37950],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>u});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(t),f=i,u=m["".concat(p,".").concat(f)]||m[f]||d[f]||a;return t?r.createElement(u,o(o({ref:n},s),{},{components:t})):r.createElement(u,o({ref:n},s))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=f;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},18433:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=t(87462),i=(t(67294),t(3905));const a={tags:["MFC"]},o=void 0,l={permalink:"/blog/2012/03/13/change-a-windows-title-of-an-sdimdi",source:"@site/blog/2012-03-13-change-a-windows-title-of-an-sdimdi.md",title:"change-a-windows-title-of-an-sdimdi",description:"Call **SetWindowText** method by passing required title as a string in the CWinApp::InitInstance() method after\xa0ProcessShellCommand() method. Please see the below code snippet",date:"2012-03-13T00:00:00.000Z",formattedDate:"March 13, 2012",tags:[{label:"MFC",permalink:"/blog/tags/mfc"}],readingTime:.57,hasTruncateMarker:!1,authors:[],frontMatter:{tags:["MFC"]},prevItem:{title:"sdimdi-application-that-is-initially-maximized",permalink:"/blog/2012/03/14/sdimdi-application-that-is-initially-maximized"},nextItem:{title:"converting-from-cstring",permalink:"/blog/2012/03/13/converting-from-cstring"}},p={authorsImageUrls:[]},c=[],s={toc:c},m="wrapper";function d(e){let{components:n,...t}=e;return(0,i.kt)(m,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"change-a-windows-title-of-an-sdimdi-application"},"Change a Window's title of an SDI/MDI Application"),(0,i.kt)("p",null,"Call ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("strong",{parentName:"em"},"SetWindowText"))," method by passing required title as a string in the CWinApp::InitInstance() method after\xa0ProcessShellCommand() method. Please see the below code snippet"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},'m_pMainWnd->SetWindowText("My New Window Title");')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'BOOL CWindowTitleApp::InitInstance()\n{\n    INITCOMMONCONTROLSEX InitCtrls;\n    InitCtrls.dwSize = sizeof(InitCtrls);\n    InitCtrls.dwICC = ICC_WIN95_CLASSES;\n    InitCommonControlsEx(&amp;InitCtrls);\n\n    CWinApp::InitInstance();\n    SetRegistryKey(_T("Local AppWizard-Generated Applications"));\n    LoadStdProfileSettings(4);\n\n    CSingleDocTemplate\\* pDocTemplate;\n    pDocTemplate = new CSingleDocTemplate(\n        IDR_MAINFRAME,\n        RUNTIME_CLASS(CWindowTitleDoc),\n        RUNTIME_CLASS(CMainFrame),       // main SDI frame window\n        RUNTIME_CLASS(CWindowTitleView));\n    if (!pDocTemplate)\n        return FALSE;\n    AddDocTemplate(pDocTemplate);\n\n    EnableShellOpen();\n    RegisterShellFileTypes(TRUE);\n\n    CCommandLineInfo cmdInfo;\n    ParseCommandLine(cmdInfo);\n\n    if (!ProcessShellCommand(cmdInfo))\n        return FALSE;\n    ////////////////////////////////////////////////////////////////////////////\n    //                       To Change Window Title                           //\n    ////////////////////////////////////////////////////////////////////////////\n    m_pMainWnd-&gt;SetWindowText("My New Window Title");\n    ////////////////////////////////////////////////////////////////////////////\n\n    m_pMainWnd-&gt;ShowWindow(SW_SHOW);\n    m_pMainWnd-&gt;UpdateWindow();\n    m_pMainWnd-&gt;DragAcceptFiles();\n\n    return TRUE;\n}\n')))}d.isMDXComponent=!0}}]);