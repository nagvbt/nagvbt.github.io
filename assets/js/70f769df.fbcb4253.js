"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[99392],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},91064:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={title:"Basics of WCF",date:"2011-08-30",categories:["wcf"]},i=void 0,s={permalink:"/blog/2011/08/30/basics-of-wcf",source:"@site/blog/2011-08-30-basics-of-wcf.md",title:"Basics of WCF",description:"Definition of WCF",date:"2011-08-30T00:00:00.000Z",formattedDate:"August 30, 2011",tags:[],readingTime:2.095,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Basics of WCF",date:"2011-08-30",categories:["wcf"]},prevItem:{title:"MFC Tip: To fill the Background color of the Dialog and get the background of the controls to look correct",permalink:"/blog/2011/09/03/mfcdailogbckcolor"},nextItem:{title:"XAML Auto formatting in Visual Studio 2010",permalink:"/blog/2011/08/24/xaml-auto-formatting-in-visual-studio-2010"}},l={authorsImageUrls:[]},c=[],p={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Definition of WCF")," "),(0,r.kt)("p",null,"Windows Communication Foundation (WCF) is a framework for building service-oriented applications. Using WCF we can build secure, reliable, transacted solutions that integrate across platforms."),(0,r.kt)("p",null,"WCF is a unified framework which provides :"),(0,r.kt)("p",null,"1","."," NET Remoting 2.Distributed Transactions 3.Message Queues and 4.Web Services\xa0into a single service-oriented programming model for distributed computing."),(0,r.kt)("p",null,"WCF\xa0interoperate\xa0between WCF-based applications and any other processes that communicate via SOAP (Simple Object Access Protocol) messages."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Features of WCF")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Service Orientation"),(0,r.kt)("li",{parentName:"ol"},"Interoperability"),(0,r.kt)("li",{parentName:"ol"},"Multiple Message Patterns"),(0,r.kt)("li",{parentName:"ol"},"Service Metadata"),(0,r.kt)("li",{parentName:"ol"},"Data Contracts"),(0,r.kt)("li",{parentName:"ol"},"Security"),(0,r.kt)("li",{parentName:"ol"},"Multiple Transports and Encodings"),(0,r.kt)("li",{parentName:"ol"},"Reliable and Queued Messages"),(0,r.kt)("li",{parentName:"ol"},"Durable Messages"),(0,r.kt)("li",{parentName:"ol"},"Transactions"),(0,r.kt)("li",{parentName:"ol"},"AJAX and REST Support"),(0,r.kt)("li",{parentName:"ol"},"Extensibility")),(0,r.kt)("p",null,"To know more about features of WCF see: ",(0,r.kt)("a",{parentName:"p",href:"http://msdn.microsoft.com/en-us/library/ms733103.aspx"},"http://msdn.microsoft.com/en-us/library/ms733103.aspx")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Terms of WCF")),(0,r.kt)("p",null,"A\xa0WCF service is exposed to the outside world as a collection of endpoints."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"1","."," Endpoint:")," Endpoint is a construct at which messages are sent or received (or both). Endpoint\xa0comprises of\xa0",(0,r.kt)("strong",{parentName:"p"},"ABC's")," "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"What are ABC's of WCF ?"))," "),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"A. Address"))," - Address is a location that defines where messages can be sent"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"B. Binding"))," - Binding is a specification of the communication mechanism (a binding) that described how messages should be sent"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"C. Contract"))," - Contract is a definition for a set of messages that can be sent or received (or both) at that location (a service contract) that describes what message can be sent."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"2","."," Service:")," A construct that exposes one or more endpoints, with each endpoint exposing one or more service operations."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"3","."," Contracts:")," A contract is a agreement between two or more parties for common understanding and it is a is a platform-neutral and standard\xa0way of describing what the service does. In WCF, all services expose contracts. "),(0,r.kt)("p",null,"Types of Contracts: 1) Operation Contract: An operation contract defines the parameters and return type of an operation."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cs \\[OperationContract\\] double Add(double i, double j); ")),(0,r.kt)("p",null,"2) Service Contract: Ties together multiple related operations contracts into a single functional unit."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cs \\[ServiceContract\\] //System.ServiceModel public interface IMath { \\[OperationContract\\] double Add(double i, double j); \\[OperationContract\\] double Sub(double i, double j); \\[OperationContract\\] Complex AddComplexNo(Complex i, Complex j); \\[OperationContract\\] Complex SubComplexNo(Complex i, Complex j); } ")),(0,r.kt)("p",null,"3) Data Contract: The descriptions in metadata of the data types that a service uses."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs true",metastring:"// Use a data contract [DataContract] //using System.Runtime.Serialization public class Complex { private int real; private int imaginary;","//":!0,Use:!0,a:!0,data:!0,contract:!0,"[DataContract]":!0,"//using":!0,"System.Runtime.Serialization":!0,public:!0,Complex:!0,"{":!0,private:!0,int:!0,"real;":!0,"imaginary;":!0},"\n\\[DataMember\\] public int Real { get; set; }\n\n\\[DataMember\\] public int Imaginary { get; set; } } ```\n\n**\\*\\*[Click here to read step by step tutorial with complete source code !](http://nagvbt.blogspot.com/articles/wcf-tutorials/)\xa0\\*\\***\n")))}u.isMDXComponent=!0}}]);