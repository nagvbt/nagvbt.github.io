"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["23166"],{50841:function(n,e,r){r.r(e),r.d(e,{frontMatter:()=>s,default:()=>h,toc:()=>a,metadata:()=>i,assets:()=>c,contentTitle:()=>l});var i=JSON.parse('{"id":"UIFrameworks/ArrowFunctions","title":"Arrow Functions","description":"REACT","source":"@site/docs/UIFrameworks/ArrowFunctions.md","sourceDirName":"UIFrameworks","slug":"/UIFrameworks/ArrowFunctions","permalink":"/docs/UIFrameworks/ArrowFunctions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"ES6 Classes","permalink":"/docs/UIFrameworks/Classes"},"next":{"title":"ES6 Variables","permalink":"/docs/UIFrameworks/Variables"}}'),t=r(85893),o=r(50065);let s={sidebar_position:3},l="Arrow Functions",c={},a=[{value:"<strong>REACT</strong>",id:"react",level:2},{value:"Definition",id:"definition",level:3},{value:"Syntax of Array Functions in React",id:"syntax-of-array-functions-in-react",level:3},{value:"Arrow Function Highlights",id:"arrow-function-highlights",level:2},{value:"Example of Array Functions in React",id:"example-of-array-functions-in-react",level:3},{value:"Example Explanation",id:"example-explanation",level:3},{value:"<strong>SVELTE</strong>",id:"svelte",level:2},{value:"Definition of Svelte",id:"definition-of-svelte",level:3},{value:"Syntax of Arrow Functions in React",id:"syntax-of-arrow-functions-in-react",level:3},{value:"Highlights",id:"highlights",level:3},{value:"Example of Arrow functions in Svelte",id:"example-of-arrow-functions-in-svelte",level:3},{value:"Example Explanation of Arrow Functions in Svelte",id:"example-explanation-of-arrow-functions-in-svelte",level:3}];function d(n){let e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"arrow-functions",children:"Arrow Functions"})}),"\n",(0,t.jsx)(e.h2,{id:"react",children:(0,t.jsx)(e.strong,{children:"REACT"})}),"\n",(0,t.jsx)(e.h3,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Arrow functions"})," are a shorter way to write functions in ES6 (ECMAScript 2015).\r\nThey don\u2019t have their own ",(0,t.jsx)(e.code,{children:"this"})," context \u2014 instead, they use ",(0,t.jsx)(e.code,{children:"this"})," from their surrounding scope."]}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["In React, arrow functions are often used in event handlers and class methods to automatically bind\r\n",(0,t.jsx)(e.code,{children:"this"}),"."]}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h3,{id:"syntax-of-array-functions-in-react",children:"Syntax of Array Functions in React"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:'// Traditional function\r\nfunction greet(name: string): void {\r\n  console.log("Hello, " + name);\r\n}\r\n\r\n// Arrow function (equivalent)\r\nconst functionName = (parameters) => {\r\n  // function body\r\n};\n'})}),"\n",(0,t.jsx)(e.h2,{id:"arrow-function-highlights",children:"Arrow Function Highlights"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Shorter syntax"}),"\n",(0,t.jsxs)(e.li,{children:["No ",(0,t.jsx)(e.code,{children:"function"})," keyword"]}),"\n",(0,t.jsxs)(e.li,{children:["Automatically binds ",(0,t.jsx)(e.code,{children:"this"})]}),"\n",(0,t.jsx)(e.li,{children:"Useful inside React components for handlers and inline functions"}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h3,{id:"example-of-array-functions-in-react",children:"Example of Array Functions in React"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"// File: Greeting.tsx\r\nimport React from 'react';\r\n\r\n// Props type\r\ntype GreetingProps = {\r\n  name: string;\r\n};\r\n\r\nconst Greeting = ({ name }):Greeting Props => {\r\n  // Arrow function to handle click\r\n  const handleClick = (): void => {\r\n    alert(`Hello, ${name}!`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Welcome, {name}</h2>\r\n      {/* Button uses arrow function handler */}\r\n      <button onClick={handleClick}>Say Hello</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Greeting;\n"})}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h3,{id:"example-explanation",children:"Example Explanation"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"type GreetingProps"})," defines the prop ",(0,t.jsx)(e.code,{children:"name"}),"."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"handleClick"})," is an arrow function that shows an alert."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"onClick={handleClick}"})," connects the button to the function."]}),"\n",(0,t.jsxs)(e.li,{children:["The arrow function keeps the correct ",(0,t.jsx)(e.code,{children:"this"})," context, so no need for ",(0,t.jsx)(e.code,{children:".bind(this)"})," like in class components."]}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"svelte",children:(0,t.jsx)(e.strong,{children:"SVELTE"})}),"\n",(0,t.jsx)(e.h3,{id:"definition-of-svelte",children:"Definition of Svelte"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Arrow functions"})," in Svelte (just like in JavaScript/TypeScript) are a ",(0,t.jsx)(e.strong,{children:"shorter way to define\r\nfunctions"}),", and they ",(0,t.jsxs)(e.strong,{children:["inherit ",(0,t.jsx)(e.code,{children:"this"})," from their surrounding scope"]}),"."]}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["In Svelte, they\u2019re commonly used for ",(0,t.jsx)(e.strong,{children:"event handlers"})," and ",(0,t.jsx)(e.strong,{children:"simple methods"})," inside ",(0,t.jsx)(e.code,{children:"<script>"}),"."]}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h3,{id:"syntax-of-arrow-functions-in-react",children:"Syntax of Arrow Functions in React"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:'// Traditional function\r\nfunction g(name: string): void {\r\n  console.log("Hello, " + name);\r\n}\r\n\r\n// Arrow function (equivalent)\r\nconst functionName = (parameters) => {\r\n  // function body\r\n};\r\n\n'})}),"\n",(0,t.jsx)(e.h3,{id:"highlights",children:"Highlights"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Cleaner, shorter syntax"}),"\n",(0,t.jsxs)(e.li,{children:["No ",(0,t.jsx)(e.code,{children:"function"})," keyword"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"this"})," is lexically scoped"]}),"\n",(0,t.jsx)(e.li,{children:"Used for event handlers, callbacks, etc."}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h3,{id:"example-of-arrow-functions-in-svelte",children:"Example of Arrow functions in Svelte"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-svelte",children:'\x3c!-- File: Greeting.svelte --\x3e\r\n<script lang="ts">\r\n  // Prop from parent\r\n  export let name: string;\r\n\r\n  // Arrow function for event handling\r\n  const handleClick = (): void => {\r\n    alert(`Hello, ${name}!`);\r\n  };\r\n<\/script>\r\n\r\n\x3c!-- HTML Template --\x3e\r\n<div>\r\n  <h2>Welcome, {name}</h2>\r\n\r\n  \x3c!-- Button with arrow function handler --\x3e\r\n  <button on:click={handleClick}>Say Hello</button>\r\n</div>\n'})}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h3,{id:"example-explanation-of-arrow-functions-in-svelte",children:"Example Explanation of Arrow Functions in Svelte"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"export let name"})," \u2192 Accepts a ",(0,t.jsx)(e.strong,{children:"prop"})," from the parent."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"handleClick"})," \u2192 Defined as an ",(0,t.jsx)(e.strong,{children:"arrow function"})," for simplicity."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"on:click={handleClick}"})," \u2192 Binds the function to the button click."]}),"\n",(0,t.jsxs)(e.li,{children:["Arrow functions are useful when there's ",(0,t.jsxs)(e.strong,{children:["no need to manage ",(0,t.jsx)(e.code,{children:"this"})]}),", which Svelte handles\r\nautomatically anyway."]}),"\n"]})]})}function h(n={}){let{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},50065:function(n,e,r){r.d(e,{Z:()=>l,a:()=>s});var i=r(67294);let t={},o=i.createContext(t);function s(n){let e=i.useContext(o);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:s(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);