"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[70228],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>m});var r=t(67294);function c(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){c(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,r,c=function(n,e){if(null==n)return{};var t,r,c={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(c[t]=n[t]);return c}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(c[t]=n[t])}return c}var s=r.createContext({}),l=function(n){var e=r.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},u=function(n){var e=l(n.components);return r.createElement(s.Provider,{value:e},n.children)},p="mdxType",b={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,c=n.mdxType,a=n.originalType,s=n.parentName,u=i(n,["components","mdxType","originalType","parentName"]),p=l(t),d=c,m=p["".concat(s,".").concat(d)]||p[d]||b[d]||a;return t?r.createElement(m,o(o({ref:e},u),{},{components:t})):r.createElement(m,o({ref:e},u))}));function m(n,e){var t=arguments,c=e&&e.mdxType;if("string"==typeof n||c){var a=t.length,o=new Array(a);o[0]=d;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=n,i[p]="string"==typeof n?n:c,o[1]=i;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},30801:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>b,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=t(87462),c=(t(67294),t(3905));const a={},o="Inheritance Program",i={unversionedId:"articles/Cpp/InheritanceProgram",id:"articles/Cpp/InheritanceProgram",title:"Inheritance Program",description:"",source:"@site/docs/articles/Cpp/InheritanceProgram.md",sourceDirName:"articles/Cpp",slug:"/articles/Cpp/InheritanceProgram",permalink:"/docs/articles/Cpp/InheritanceProgram",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Calculate Salary",permalink:"/docs/articles/Cpp/CalculateSalary"},next:{title:"Operator Overloading Date Class",permalink:"/docs/articles/Cpp/OperatorOverloadingDateClass"}},s={},l=[],u={toc:l},p="wrapper";function b(n){let{components:e,...t}=n;return(0,c.kt)(p,(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"inheritance-program"},"Inheritance Program"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},'//Base-class access control\nclass Base\n{\npublic:\n int m_i;\n Base()\n {\n    m_i = 0;\n   m_j = 1;\n   m_k = 2;\n }\n \nprivate:\n int m_j;\nprotected:\n int m_k;\n};\n \nclass D1:public Base\n{\n \n};\n \nvoid main()\n{\n  D1 obj;\n  \n cout<<obj.m_i;\n  //cout<<obj.m_j;\n //cout<<obj.m_k;\n}\n \n// Constructors, Destructors Execution order\nclass B\n{\npublic:        \n B()\n {\n   cout<<"constructor B"<<endl;\n }\n \n ~B()\n {\n   cout<<"Destructor B"<<endl;\n }\n};\n \nclass D1: public B\n{\npublic:        \n D1()\n {\n   cout<<"constructor D1"<<endl;\n }\n \n ~D1()\n {\n   cout<<"Destructor D1"<<endl;\n }\n};\n \nclass D2: public D1\n{\npublic:        \n D2()\n {\n   cout<<"constructor D2"<<endl;\n }\n \n ~D2()\n {\n   cout<<"Destructor D2"<<endl;\n }\n};\n \n \nvoid main()\n{\n  D2 obj;        \n}\n \n//Granting Access\nclass B\n{\n public:\n int i; // public in base\n B()\n {\n  i = 10;\n }\n};\n// Inherit base as private.\nclass D: private B\n{\n public:\n // here is access declaration\n B::i; // make i public again\n};\n \nvoid main()\n{\n  D obj;        \n cout<<obj.i;\n  int z;        cin>>z;\n}\n \n //Passing parameters to base-class Constructors\nclass B\n{\n int m;\n protected:\n int i;\n public:\n B(int x)\n {\n  i=x;\n  cout << "Constructing base : B\\n";\n }\n ~B()\n {\n  cout << "Destructing base : B\\n";\n   \n  }\n  };\nclass D: public B\n{\n int j;\n public:\n // derived uses x; y is passed along to base.\n D(int x, int y): B(y)\n {\n  j=x;\n  cout << "Constructing derived : D\\n";\n }\n ~D()\n {\n  cout << "Destructing derived : D\\n";\n }\n void show()\n {\n  cout << i << " " << j<<"\\n";\n }\n};\nint main()\n{\n D obj(1, 2);        \n obj.show(); // displays 2 1\n return 0;\n}\nVirtual Base Classes / Diamond problem\nclass B\n{\npublic:\n int i;\n B()\n {\n i = 10;\n }\n};\n \nclass D1: virtual public B\n{\n};\n \nclass D2: virtual public B\n{\n};\n \nclass C: public D1, public D2\n{\n};\n \nvoid main()\n{\nC obj;\ncout<<obj.i;//error: ambiguous access of \'i\'   \n}\n \n//Virtual Destructor\nclass B\n{\npublic:\n virtual ~B()\n {\n  cout<<"destructor B"<<endl;\n }\n};\n \nclass D: public B\n{\npublic:\n int *p;\n D()\n {\n  p = new int;\n  *p = 10;                 \n }\n  \n ~D()\n {\n  cout<<"destructor D"<<endl;\n  delete p;\n }\n \n};\n \nvoid main()\n{\n int z;\n B *pobjB;\n  \n D *pobjD = new D();\n \n pobjB = pobjD;\n //cout<<*((D*)objB)->p;\n delete pobjB;\n \n cin>>z;\n}\n')))}b.isMDXComponent=!0}}]);