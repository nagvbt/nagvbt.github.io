"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[11477],{30010:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2023/04/27/web-resources","metadata":{"permalink":"/blog/2023/04/27/web-resources","source":"@site/blog/2023-04-27-web-resources.md","title":"Web Frontend Developer in 2023","description":"To become an Web Frontend Developer in 2023 you need to know the following skiils.","date":"2023-04-27T00:00:00.000Z","formattedDate":"April 27, 2023","tags":[{"label":"Web","permalink":"/blog/tags/web"}],"readingTime":0.38,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["Web"]},"nextItem":{"title":"React Native minimal app component","permalink":"/blog/2022/06/08/rn-minimal-app"}},"content":"To become an Web Frontend Developer in 2023 you need to know the following skiils.\\r\\n\\r\\n### Basic Skills\\r\\nIf you decide to become an web developer. Then you should have understanding of the following technologies.\\r\\n1. [HTML: HyperText Markup Language | MDN](https://developer.mozilla.org/en-US/docs/Web/HTML)\\r\\n2. [CSS: Cascading Style Sheets | MDN](https://developer.mozilla.org/en-US/docs/Web/CSS)\\r\\n3. [JavaScript | MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript)   \\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n   \\r\\n### Advanced Skills\\r\\n\\r\\nSpecilaize any one of the UI Frameworks\\r\\n\\r\\n1. [React](https://react.dev/)\\r\\n2. [Angular](https://angular.io/)\\r\\n3. [Vue](https://vuejs.org/)\\r\\n\\r\\nI prefer to go with React."},{"id":"/2022/06/08/rn-minimal-app","metadata":{"permalink":"/blog/2022/06/08/rn-minimal-app","source":"@site/blog/2022-06-08-rn-minimal-app.md","title":"React Native minimal app component","description":"Minimal code required to start a React-Native component is","date":"2022-06-08T00:00:00.000Z","formattedDate":"June 8, 2022","tags":[{"label":"React Native","permalink":"/blog/tags/react-native"}],"readingTime":0.36,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["React Native"]},"prevItem":{"title":"Web Frontend Developer in 2023","permalink":"/blog/2023/04/27/web-resources"},"nextItem":{"title":"Using Flow in React Native project","permalink":"/blog/2022/06/04/using-flow"}},"content":"Minimal code required to start a React-Native component is\\r\\n\\r\\na. An App Class which extends from React.Component\\r\\n\\r\\nb. styles that are created from StyleSheet.Create({})\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n```jsx\\r\\nimport React from \\"react\\";\\r\\nimport { StyleSheet, Text, View } from \\"react-native\\";\\r\\n\\r\\nexport default class App extends React.Component {\\r\\n  render() {\\r\\n    return (\\r\\n      <View style={styles.container}>\\r\\n        <Text>Hello World</Text>\\r\\n      </View>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nconst styles = StyleSheet.create({\\r\\n  container: {\\r\\n    flex: 1,\\r\\n    alignItems: \'center\',\\r\\n    justifyContent: \'center\'\\r\\n  }\\r\\n\\r\\n});\\r\\n```"},{"id":"/2022/06/04/using-flow","metadata":{"permalink":"/blog/2022/06/04/using-flow","source":"@site/blog/2022-06-04-using-flow.md","title":"Using Flow in React Native project","description":"Flow is used for static type checking in javascript. Flow works best when installed per-project with explicit versioning rather than globally.","date":"2022-06-04T00:00:00.000Z","formattedDate":"June 4, 2022","tags":[{"label":"React","permalink":"/blog/tags/react"}],"readingTime":0.28,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["React"]},"prevItem":{"title":"React Native minimal app component","permalink":"/blog/2022/06/08/rn-minimal-app"},"nextItem":{"title":"Books For Personal Growth & Wealth","permalink":"/blog/2021/07/06/books-for-personal-growth-wealth"}},"content":"Flow is used for static type checking in javascript. Flow works best when installed per-project with explicit versioning rather than globally.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\nSteps:\\r\\n\\r\\n1.   ***Add a devDependency on the\xa0flow-bin\xa0npm package:***\\r\\n`yarn add \u2013dev flow-bin`\\r\\n\\r\\n2.   ***Run\xa0below command***\\r\\n`yarn run flow init`\xa0\\r\\n\\r\\n\\r\\n3.   ***To run Flow***\\r\\n`yarn run flow`\\r\\n\\r\\n4.   Add \u2018.flowconfig\u2019 and add ./node\\\\_modules/.\\\\\\\\\\\\* \xa0under \\\\[ignore\\\\]"},{"id":"/2021/07/06/books-for-personal-growth-wealth","metadata":{"permalink":"/blog/2021/07/06/books-for-personal-growth-wealth","source":"@site/blog/2021-07-06-books-for-personal-growth-wealth.md","title":"Books For Personal Growth & Wealth","description":"Recently I had completed the set of four books which are worlds greatest books on personal Growth and Wealth.","date":"2021-07-06T00:00:00.000Z","formattedDate":"July 6, 2021","tags":[{"label":"Books","permalink":"/blog/tags/books"}],"readingTime":0.475,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["Books"]},"prevItem":{"title":"Using Flow in React Native project","permalink":"/blog/2022/06/04/using-flow"},"nextItem":{"title":"React Native App using Expo","permalink":"/blog/2021/06/06/react-native-app-using-expo"}},"content":"Recently I had completed the set of four books which are worlds greatest books on personal Growth and Wealth.\\nLets have a look which books are contained in this set.\\n\\n\x3c!--truncate--\x3e\\n\\n## Personal Growth\\n\\n1. [How to Win Friends and Influence People\xa0by Dale Carnegie](https://amzn.to/3hh4p0u)\\n\\n\\n## Wealth Creation\\n\\n1. [The Richest Man in Babylon by George S. Clason](https://amzn.to/3qOXWwM)\\n\\n2. [Think and Grow Rich by Napoleon Hill](https://amzn.to/3jS33uH)\\n\\n\\nWanted to buy the set of 4 books use below Links:\\n\\n- Amazon Link for Paperback: [https://amzn.to/3AwekXB](https://amzn.to/3AwekXB)\\n\\n- Amazon Link for Harcover: [https://amzn.to/2TJpgAp](https://amzn.to/2TJpgAp)\\n\\n- Amazon Link for Kindle version: [https://amzn.to/3hDwLAU](https://amzn.to/3hDwLAU)"},{"id":"/2021/06/06/react-native-app-using-expo","metadata":{"permalink":"/blog/2021/06/06/react-native-app-using-expo","source":"@site/blog/2021-06-06-react-native-app-using-expo.md","title":"React Native App using Expo","description":"React Native","date":"2021-06-06T00:00:00.000Z","formattedDate":"June 6, 2021","tags":[{"label":"React Native","permalink":"/blog/tags/react-native"}],"readingTime":1.39,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["React Native"]},"prevItem":{"title":"Books For Personal Growth & Wealth","permalink":"/blog/2021/07/06/books-for-personal-growth-wealth"},"nextItem":{"title":"Component Library With Ionic+Angular","permalink":"/blog/2021/06/02/ionic-lib"}},"content":"React Native\\r\\n------------\\r\\n\\r\\nCreate native apps for Android and iOS using React\\r\\n\\r\\nReact Native combines the best parts of native development with React, a best-in-class JavaScript library for building user interfaces.\\r\\n\\r\\n[Refer](https://reactnative.dev/)\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\nExpo:\\r\\n-----\\r\\n\\r\\nExpo is a platform built around React Native and native platforms which enable you to develop, build, deploy, and quickly iterate on iOS, Android, and web apps from the same JavaScript/TypeScript codebase.\\r\\n\\r\\n[Refer](https://docs.expo.io/)\\r\\n\\r\\n### Install Expo\\r\\n\\r\\n`npm install --global expo-cli`\\r\\n\\r\\n### Create new project\\r\\n\\r\\n`expo init nag-rn`\\r\\n\\r\\nSelection of Template\\r\\n\\r\\n    >expo init nag-rn\\r\\n    ? Choose a template: \xbb - Use arrow-keys. Return to submit.\\r\\n        ----- Managed workflow -----\\r\\n    >   blank                 a minimal app as clean as an empty canvas\\r\\n        blank (TypeScript)    same as blank but with TypeScript configuration\\r\\n        tabs (TypeScript)     several example screens and tabs using react-navigation and TypeScript\\r\\n        ----- Bare workflow -----\\r\\n        minimal               bare and minimal, just the essentials to get you started\\r\\n        minimal (TypeScript)  same as minimal but with TypeScript configuration\\r\\n    \\r\\n\\r\\nSelected the Tabs Template\\r\\n\\r\\n    \u221a Choose a template: \xbb tabs (TypeScript)     several example screens and tabs using react-navigation and TypeScript\\r\\n    \u221a Downloaded and extracted project files.\\r\\n    \ufffd Using Yarn to install packages. Pass --npm to use npm instead.\\r\\n    \u221a Installed JavaScript dependencies.\\r\\n    \\r\\n    &#x2705; Your project is ready!\\r\\n    \\r\\n    To run your project, navigate to the directory and run one of the following yarn commands.\\r\\n    \\r\\n    - cd nag-rn\\r\\n    - yarn start # you can open iOS, Android, or web from here, or run them directly with the commands below.\\r\\n    - yarn android\\r\\n    - yarn ios # requires an iOS device or macOS for access to an iOS s\\r\\n    - yarn web\\r\\n    \\r\\n\\r\\nChange the directory and Start the app.\\r\\n\\r\\n`cd nag-rn` \\r\\n\\r\\n`yarn start`"},{"id":"/2021/06/02/ionic-lib","metadata":{"permalink":"/blog/2021/06/02/ionic-lib","source":"@site/blog/2021-06-02-ionic-lib.md","title":"Component Library With Ionic+Angular","description":"1\\\\. Summary","date":"2021-06-02T00:00:00.000Z","formattedDate":"June 2, 2021","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"},{"label":"Angular","permalink":"/blog/tags/angular"}],"readingTime":1.965,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["Ionic","Angular"]},"prevItem":{"title":"React Native App using Expo","permalink":"/blog/2021/06/06/react-native-app-using-expo"},"nextItem":{"title":"Building A Component Library With React","permalink":"/blog/2021/05/30/building-a-component-library-with-react"}},"content":"1\\\\. Summary\\r\\n-----------\\r\\n\\r\\nA component library is a collection of logically group components so that one can explore, select components and helps in maintaining consistent design across projects. nag-ionic-lib built using following components.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n1.  Angular cli (ng generate library)\\r\\n2.  Ionic cli\\r\\n3.  Storybook\\r\\n\\r\\n2\\\\. How to Create a Ionic Library [Refer Code:](https://github.com/nagvbt/nag-ionic-lib/commit/773b8a681b655a705648fe43d4a887f6143cbf19)\\r\\n----------------------------------------------------------------------------------------------------------------------------------------\\r\\n\\r\\n1.  Generate library skeleton in a new workspace with the following commands.\\r\\n```\\r\\n    ng new nag-workspace --create-application=false\\r\\n    cd nag-workspace\\r\\n    ng generate library nag-ionic-lib\\r\\n````\\r\\n    \\r\\n\\r\\n1.  Add a custom component\\r\\n\\r\\n    `ng g component customCard`\\r\\n    \\r\\n\\r\\n2.  Add symlink between your local node modules folder and this dist folder [Refer Code:](https://github.com/nagvbt/nag-ionic-lib/commit/4e2430e9812dd8e45d252e68ed294ed69524de51)\\r\\n\\r\\nYou can now run `yarn link \\"nag-ionic-lib\\"` in the projects where you want to use this package and it will be used instead.\\r\\n```js\\r\\n    ng build\\r\\n    cd dist/nag-ionic-lib\\r\\n    yarn link\\r\\n    \\r\\n    ****** Command output ******\\r\\n    yarn link\\r\\n    yarn link v1.22.4\\r\\n    warning package.json: No license field\\r\\n    warning package.json: No license field\\r\\n    success Registered \\"nag-ionic-lib\\".\\r\\n    info You can now run yarn link <span class=\\"hljs-string\\">\\"nag-ionic-lib\\"</span> in the projects where you want to use this package and it will be used instead. Done in 0.09s. \\r\\n````\\r\\n\\r\\n3.  Adding Ionic to your Library\\r\\n    ```\\r\\n        cd projects/nag-ionic-lib\\r\\n        yarn add --dev @ionic/angular\\r\\n    ```    \\r\\n    \\r\\n\\r\\n4. And Modify the \'nag-ionic-lib.module.ts\'\\r\\n```jsx\\r\\n    import { NgModule, ModuleWithProviders, InjectionToken } from \'@angular/core\';\\r\\n    import { NagIonicLibComponent } from \'./nag-ionic-lib.component\';\\r\\n    import { CustomCardComponent } from \'./custom-card/custom-card.component\';\\r\\n    \\r\\n    import { CommonModule } from \'@angular/common\';\\r\\n    import { IonicModule } from \'@ionic/angular\';\\r\\n    import { HttpClientModule } from \'@angular/common/http\';\\r\\n    import { NagIonicLibService } from \'nag-ionic-lib\';\\r\\n    \\r\\n    export interface LibConfig {\\r\\n      apiUrl: string;\\r\\n    }\\r\\n    \\r\\n    export const LibConfigService = new InjectionToken<LibConfig>(\'LibConfig\');\\r\\n    \\r\\n    @NgModule({\\r\\n      declarations: [\\r\\n        NagIonicLibComponent,\\r\\n        CustomCardComponent\\r\\n      ],\\r\\n      imports: [\\r\\n        CommonModule,\\r\\n        HttpClientModule,\\r\\n        IonicModule\\r\\n      ],\\r\\n      exports: [\\r\\n        NagIonicLibComponent, CustomCardComponent\\r\\n      ]\\r\\n    })\\r\\n    export class NagIonicLibModule {\\r\\n    static forRoot(config: LibConfig): ModuleWithProviders<NagIonicLibModule> {\\r\\n        return {\\r\\n          ngModule: NagIonicLibModule,\\r\\n          providers: [\\r\\n            NagIonicLibService,\\r\\n            {\\r\\n              provide: LibConfigService,\\r\\n              useValue: config\\r\\n            }\\r\\n          ]\\r\\n        };\\r\\n      }\\r\\n     }\\r\\n```    \\r\\n\\r\\n[Refer Code](https://github.com/nagvbt/nag-ionic-lib/commit/5afea14b8bfd457cf7396a56d96fb361ee4f7850)\\r\\n\\r\\n#### Modify the Custom-Card [Refer Code](https://github.com/nagvbt/nag-ionic-lib/commit/ca6bdf5d2f1f6b4555095fa7e6d72a17de4167bc)\\r\\n```jsx\\r\\n    // custom-card.component.ts\\r\\n    import { Component, OnInit, Input } from \'@angular/core\';\\r\\n    \\r\\n    @Component({\\r\\n      selector: \'custom-card\',\\r\\n      templateUrl: \'./custom-card.component.html\',\\r\\n      styleUrls: [\'./custom-card.component.css\']\\r\\n    })\\r\\n    export class CustomCardComponent implements OnInit {\\r\\n      @Input() title: string = \\"\\";\\r\\n      @Input() content: string = \\"\\";\\r\\n    \\r\\n      constructor() { }\\r\\n    \\r\\n      ngOnInit(): void {\\r\\n      }\\r\\n    \\r\\n    }\\r\\n    \\r\\n    \x3c!-- custom-card.component.html --\x3e\\r\\n    <ion-card>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>{{ title }}</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        {{ content }}\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n  ```  \\r\\n\\r\\n3\\\\. Publish the Lib to npm\\r\\n--------------------------\\r\\n\\r\\nUse the below commands\\r\\n```\\r\\n    ng build --prod\\r\\n    cd dist/nag-ionic-lib\\r\\n    npm publish\\r\\n```"},{"id":"/2021/05/30/building-a-component-library-with-react","metadata":{"permalink":"/blog/2021/05/30/building-a-component-library-with-react","source":"@site/blog/2021-05-30-building-a-component-library-with-react.md","title":"Building A Component Library With React","description":"Docusaurus Plushie","date":"2021-05-30T00:00:00.000Z","formattedDate":"May 30, 2021","tags":[{"label":"React","permalink":"/blog/tags/react"}],"readingTime":5.99,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["React"]},"prevItem":{"title":"Component Library With Ionic+Angular","permalink":"/blog/2021/06/02/ionic-lib"},"nextItem":{"title":"How to Create a New React App","permalink":"/blog/2020/12/25/create-react-app"}},"content":"![Docusaurus Plushie](./img/nag-rlib.png)\\r\\n\\r\\n\\r\\n1\\\\. Summary\\r\\n-----------\\r\\n\\r\\nA component library is a collection of logically group components so that one can explore, select components and helps in maintaining consistent design across projects. nag-rlib built usng following components.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n1.  create-react-library\\r\\n2.  Storybook\\r\\n3.  react-testing-library\\r\\n\\r\\n2\\\\. How to Create a React Library\\r\\n---------------------------------\\r\\n\\r\\nYou can create a React Library using the create-react-library ([](https://github.com/transitive-bullshit/create-react-library)[https://github.com/transitive-bullshit/create-react-library](https://github.com/transitive-bullshit/create-react-library)) CLI which uses Rollup.js and create-react-app.\\r\\n\\r\\n[Rollup.js](https://rollupjs.org/guide/en/#overview) is a module bundler for JavaScript which compiles small pieces of code into something larger and more complex, such as a library.\\r\\n\\r\\n**_Steps:_**\\r\\n\\r\\n**1.Install create-react-library globally** \\r\\n\\r\\nThis package requires node >= 10.\\r\\n\\r\\n`npm install -g create-react-library`\\r\\n\\r\\n**2.Create Library**\\r\\n\\r\\nFire up the command prompt and use the below commandcd\\r\\n\\r\\n`npx create-react-library`\\r\\n\\r\\n    Microsoft Windows [Version 10.0.19042.985]\\r\\n    \\r\\n    (c) Microsoft Corporation. All rights reserved.\\r\\n    \\r\\n    C:\\\\Nag\\\\myDrive\\\\blog\\\\React\\\\NagLib>npx create-react-library\\r\\n    npx: installed 150 in 21.621s\\r\\n    ? Package Name nag-rlib\\r\\n    ? Package Description Nag React Library\\r\\n    ? Author\'s GitHub Handle nagvbt\\r\\n    ? GitHub Repo Path nagvbt/nag-rlib\\r\\n    ? License NAG VBT\\r\\n    ? Package Manager yarn\\r\\n    ? Template default\\r\\n    \\r\\n\\r\\n**3\\\\. Install RollupJs and configure**\\r\\n\\r\\n**a. Install Babel Preset**\\r\\n\\r\\n`yarn add --dev @babel/preset-react`\\r\\n\\r\\n`yarn add --dev @babel/preset-env`\\r\\n\\r\\nadd `.babelrc` file with below contents\\r\\n\\r\\n    {\\r\\n      \\"presets\\": [\\"@babel/env\\", \\"@babel/preset-react\\"]\\r\\n    }\\r\\n    \\r\\n\\r\\n**b. Install Rollupjs**\\r\\n\\r\\n`yarn add --dev rollup`\\r\\n\\r\\n`yarn add --dev rollup-plugin-delete`\\r\\n\\r\\n`yarn add --dev rollup-plugin-peer-deps-external`\\r\\n\\r\\n**c. Install Rollupjs Plugins**\\r\\n\\r\\n`yarn add rollup-plugin-commonjs`\\r\\n\\r\\n`yarn add rollup-plugin-node-resolve`\\r\\n\\r\\n`yarn add @rollup/plugin-json`\\r\\n\\r\\n`yarn add --dev @rollup/plugin-babel`\\r\\n\\r\\n`yarn add --dev rollup-plugin-scss`\\r\\n\\r\\n**c. Add rollup.config.js**\\r\\n\\r\\n    import babel from \'@rollup/plugin-babel\';\\r\\n    import external from \'rollup-plugin-peer-deps-external\';\\r\\n    import del from \'rollup-plugin-delete\';\\r\\n    import resolve from \'rollup-plugin-node-resolve\';\\r\\n    import commonjs from \'rollup-plugin-commonjs\';\\r\\n    import json from \'@rollup/plugin-json\';\\r\\n    import pkg from \'./package.json\';\\r\\n    \\r\\n    const extensions = [\'.js\', \'.jsx\'];\\r\\n    \\r\\n    export default {\\r\\n      input: pkg.source,\\r\\n      output: [\\r\\n        { file: pkg.main, format: \'cjs\' },\\r\\n        { file: pkg.module, format: \'esm\' }\\r\\n      ],\\r\\n      plugins: [\\r\\n        resolve({\\r\\n          extensions,\\r\\n          modulesOnly: true\\r\\n        }),\\r\\n        json({\\r\\n          compact: true\\r\\n        }),\\r\\n        commonjs(),\\r\\n        external(),\\r\\n        babel({\\r\\n          exclude: \'node_modules/**\'\\r\\n        }),\\r\\n        del({ targets: [\'dist/*\'] })\\r\\n      ],\\r\\n      external: Object.keys(pkg.peerDependencies || {})\\r\\n    };\\r\\n    \\r\\n\\r\\n**d. Update the commands**\\r\\n\\r\\nAdd below commands in scripts section of package.json\\r\\n\\r\\n    \\"build\\": \\"rollup -c\\",\\r\\n    \\"build:dev\\": \\"rollup -c -w\\",\\r\\n    \\r\\n\\r\\n3\\\\. Build and Launch the example site\\r\\n-------------------------------------\\r\\n\\r\\nTo get started, in one tab, run:\\r\\n\\r\\n`$ cd nag-rlib && yarn build`\\r\\n\\r\\nAnd in another command window, run the create-react-app dev server:\\r\\n\\r\\n`$ cd nag-rlib\\\\example && yarn start`\\r\\n\\r\\n\\r\\n4\\\\. Create Github Repo and push the code\\r\\n----------------------------------------\\r\\n\\r\\nSteps: Refer Code changes [here](https://github.com/nagvbt/nag-rlib/commit/03e8a144f5afa4edf43b8e47f3dd1facf8d63a6b)\\r\\n\\r\\na. Open command prompt and Fire up the command\\r\\n\\r\\n`cd nag-rlib`\\r\\n\\r\\nUse the below Git Commands to set the email and user name of the github\\r\\n\\r\\n1.Update email and username using:\\r\\n\\r\\n        a.git config user.email \\"[email\xa0protected]\\"\\r\\n        b.git config user.name \\"nagvbt\\"\\r\\n    \\r\\n\\r\\n2.Check if they are updated correctly:\\r\\n\\r\\n        a.git config user.email\\r\\n        b.git config user.name\\r\\n    \\r\\n\\r\\nb. Create a new repository in Github with the same project name say nag-rlib\\r\\n\\r\\nCreate a new repository  \\r\\n\u2026or push an existing repository from the command line\\r\\n\\r\\n    git remote add origin https://github.com/nagvbt/nag-rlib.git\\r\\n    git branch -M main\\r\\n    git push -u origin main\\r\\n    \\r\\n\\r\\n5\\\\. Upgrade Packages\\r\\n--------------------\\r\\n\\r\\nTo upgrade the Packages to latest by using the command `yarn upgrade --latest`\\r\\n\\r\\nSteps: Refer Code changes [here](https://github.com/nagvbt/nag-rlib/commit/0243b0a59267e9798502abf72705f6d1b02f7768)\\r\\n\\r\\n6\\\\. Export Multiple Components\\r\\n------------------------------\\r\\n\\r\\nSteps: Refer Code changes [here](https://github.com/nagvbt/nag-rlib/commit/021a6cefe46e436333b0d7fdadb9b30573addf95)\\r\\n\\r\\n1.  Create Two componentsa. src\\\\\\\\ExampleComponent1\\\\\\\\ExampleComponent1.jsx\\r\\n    \\r\\n        import React from \'react\';\\r\\n        import styles from \'../../styles.module.css\';\\r\\n        \\r\\n        function ExampleComponent1({ text }) {\\r\\n          return <div className={styles.test}>Example Component 1: {text}</div>;\\r\\n        }\\r\\n        \\r\\n        export default ExampleComponent1;\\r\\n        \\r\\n    \\r\\n    b. src\\\\\\\\ExampleComponent2\\\\\\\\ExampleComponent2.jsx\\r\\n    \\r\\n        import React from \'react\';\\r\\n        import styles from \'../../styles.module.css\';\\r\\n        \\r\\n        function ExampleComponent2({ text }) {\\r\\n          return <div className={styles.test}>Example Component 2: {text}</div>;\\r\\n        }\\r\\n        \\r\\n        export default ExampleComponent2;\\r\\n        \\r\\n    \\r\\n2.  Rename src\\\\\\\\index.js to src\\\\\\\\index.jsx\\r\\n3.  Change the extension of index.js to index.jsx in package.json`\\"source\\": \\"src/index.jsx\\",`\\r\\n4.  Import the ExampleComponent1 and ExampleComponent2 in index.jsx and export them so that the example component can consume the two components\\r\\n\\r\\n    import ExampleComponent1 from \'./components/ExampleComponent1/ExampleComponent1\';\\r\\n    import ExampleComponent2 from \'./components/ExampleComponent2/ExampleComponent2\';\\r\\n    \\r\\n    export { ExampleComponent1, ExampleComponent2 };\\r\\n    \\r\\n\\r\\n7\\\\. Install Storybook\\r\\n---------------------\\r\\n\\r\\nStorybook makes development faster and easier by isolating components with business logic. Install Storybook using below command.\\r\\n\\r\\n`npx sb init`\\r\\n\\r\\n**_Addons_**\\r\\n\\r\\nInstall Addons.\\r\\n\\r\\nBy Default you will get two Addons  \\r\\na. Essential addons [Refer](https://storybook.js.org/docs/react/essentials/introduction)  \\r\\nb. addon-links\\r\\n\\r\\n1.  Add Aditional addons [Refer Code](https://github.com/nagvbt/nag-rlib/commit/076bb5062ef90720cf6741b2a257ad244865b883)\\r\\n\\r\\n| S# | Addon | Command | Description |\\r\\n|----|------|--------|------|\\r\\n|1 | [a11y](https://github.com/storybookjs/storybook/tree/next/addons/a11y)| yarn add @storybook/addon-a11y \u2013dev | Test components for user accessibility in Storybook|\\r\\n| 2 | [storysource](https://github.com/storybookjs/storybook/tree/next/addons/storysource)| yarn add @storybook/addon-storysource \u2013dev | View the code of your stories within the Storybook UI |\\r\\n\\r\\n8\\\\. Unit Testing and Code Coverage\\r\\n----------------------------------\\r\\n\\r\\n[Refer Code](https://github.com/nagvbt/nag-rlib/commit/5e2778980b9da0a02e43b5e3b69e753f4d35e238)\\r\\n\\r\\n**a. Add React Testing Library** [Refer](https://github.com/testing-library/react-testing-library)\\r\\n\\r\\nIt is a very lightweight solution for testing React components. It provides light utility functions on top of react-dom and react-dom/test-utils, in a way that encourages better testing practices. To install react-testing-library use the below command.\\r\\n\\r\\n`yarn add --dev @testing-library/react`\\r\\n\\r\\n**b. Add DOM Testing Library** [Refer](https://github.com/testing-library/dom-testing-library#readme)\\r\\n\\r\\nThe DOM Testing Library is a very light-weight solution for testing DOM nodes. To install DOM Testing Library use the below command.\\r\\n\\r\\n`yarn add --dev @testing-library/dom`\\r\\n\\r\\n**c. Add Jest-Dom** [Refer](https://github.com/testing-library/jest-dom#readme)\\r\\n\\r\\nThe @testing-library/jest-dom library provides a set of custom jest matchers that you can use to extend jest. These will make your tests more declarative, clear to read and to maintain. To install Jest-Dom use the below command.\\r\\n\\r\\n`yarn add --dev @testing-library/jest-dom`\\r\\n\\r\\n**d. Add user-event** [Refer](https://github.com/testing-library/user-event)\\r\\n\\r\\nuser-event tries to simulate the real events that would happen in the browser as the user interacts with it. For example userEvent.click(checkbox) would change the state of the checkbox. To install user-event use the below command.\\r\\n\\r\\n`yarn add --dev @testing-library/user-event`\\r\\n\\r\\n**e. Add below code in package.json under scripts section to run the tests and generate the code coverage.**\\r\\n\\r\\n`\\"test:dev\\": \\"react-scripts test --coverage --coverageDirectory=\'coverage\' --env=jsdom --watchAll\\",`\\r\\n\\r\\n**f. Install jest-fail-on-console** [Refer](https://github.com/ricardo-ch/jest-fail-on-console)\\r\\n\\r\\nUtility to make jest tests fail when console.error() or console.warn() are used. To install user-event use the below command.\\r\\n\\r\\n`yarn add --dev jest-fail-on-console`\\r\\n\\r\\n9\\\\. Eslint\\r\\n----------\\r\\n\\r\\n[Refer Code](https://github.com/nagvbt/nag-rlib/commit/d3c74d49b9f346a6d15e7d5bfaf1379dee724959)\\r\\n\\r\\n**a. Install airbnb**  \\r\\nThis package provides Airbnb\u2019s .eslintrc as an extensible shared config. [Refer](https://github.com/airbnb/javascript)\\r\\n\\r\\n`npx install-peerdeps --dev eslint-config-airbnb`\\r\\n\\r\\n**b. Install prop-types**\\r\\n\\r\\nRuntime type checking for React props and similar objects. [Refer](https://github.com/facebook/prop-types)\\r\\n\\r\\n`yarn add prop-types`\\r\\n\\r\\n**c. Install eslint-plugin-react-hooks**  \\r\\nThis ESLint plugin enforces the [Rules](https://reactjs.org/docs/hooks-rules.html) of Hooks.\\r\\n\\r\\n`yarn add --dev eslint-plugin-react-hooks`\\r\\n\\r\\nThen extend the recommended eslint config:\\r\\n\\r\\n    {\\r\\n      \\"extends\\": [\\r\\n        // ...\\r\\n        \\"plugin:react-hooks/recommended\\"\\r\\n      ]\\r\\n    }\\r\\n    \\r\\n\\r\\n**d. Install eslint-plugin-testing-library**  \\r\\nESLint plugin to follow best practices and anticipate common mistakes when writing tests with Testing Library  \\r\\n[Refer](https://github.com/testing-library/eslint-plugin-testing-library)\\r\\n\\r\\n`yarn add --dev eslint-plugin-testing-library`\\r\\n\\r\\n**e. Install eslint-plugin-jest-dom**\\r\\n\\r\\nESLint plugin to follow best practices and anticipate common mistakes when writing tests with jest-dom.  \\r\\n[Refer](https://github.com/testing-library/eslint-plugin-jest-dom)\\r\\n\\r\\n`yarn add --dev eslint-plugin-jest-dom`\\r\\n\\r\\nThen extend the recommended eslint config:\\r\\n\\r\\n    {\\r\\n      \\"extends\\": [\\r\\n        // ...\\r\\n        \\"plugin:jest-dom/recommended\\"\\r\\n      ]\\r\\n    }\\r\\n    \\r\\n\\r\\n**f. Install eslint-config-react-app**  \\r\\nThis package includes the shareable ESLint configuration used by Create React App.\\r\\n\\r\\n`yarn add --dev eslint-config-react-app`\\r\\n\\r\\nThen extend the recommended eslint config:\\r\\n\\r\\n    {\\r\\n      \\"extends\\": [\\r\\n        // ...\\r\\n        \\"react-app\\"\\r\\n      ]\\r\\n    }\\r\\n    \\r\\n\\r\\n10\\\\. Publish the Library to npm\\r\\n-------------------------------\\r\\n\\r\\nThe command used to publish the lib as a public library you need to have a login in [](https://www.npmjs.com/)[https://www.npmjs.com/](https://www.npmjs.com/)\\r\\n\\r\\n`yarn publish --access=public`\\r\\n\\r\\nFollowing questions will be asked\\r\\n\\r\\n    yarn publish v1.22.4\\r\\n    [1/4] Bumping version...\\r\\n    info Current version: 1.0.0\\r\\n    question New version:\\r\\n    [2/4] Logging in...\\r\\n    info npm username: nagvbt\\r\\n    info npm email: [email\xa0protected]\\r\\n    question npm password:\\r\\n    success Logged in.\\r\\n    [3/4] Publishing...\\r\\n    $ run-s build\\r\\n    yarn run v1.22.4\\r\\n    $ microbundle-crl --no-compress --format modern,cjs\\r\\n    Build \\"nagRlib\\" to dist:\\r\\n            357 B: index.js.gz\\r\\n            297 B: index.js.br\\r\\n            286 B: index.modern.js.gz\\r\\n            234 B: index.modern.js.br\\r\\n    Done in 3.78s.\\r\\n    success Published.\\r\\n    [4/4] Revoking token...\\r\\n    success Revoked login token.\\r\\n    Done in 24.67s."},{"id":"/2020/12/25/create-react-app","metadata":{"permalink":"/blog/2020/12/25/create-react-app","source":"@site/blog/2020-12-25-create-react-app.md","title":"How to Create a New React App","description":"Create React App is a easy and best environment for learning React, and is the easy way to start building a new single-page application in React.","date":"2020-12-25T00:00:00.000Z","formattedDate":"December 25, 2020","tags":[{"label":"React Native","permalink":"/blog/tags/react-native"}],"readingTime":0.32,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["React Native"]},"prevItem":{"title":"Building A Component Library With React","permalink":"/blog/2021/05/30/building-a-component-library-with-react"},"nextItem":{"title":"Abstract Class","permalink":"/blog/2020/05/02/what-is-an-abstract-class"}},"content":"Create React App is a easy and best environment for learning React, and is the easy way to start building a new single-page application in React.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## Steps To create a React App\\r\\n\\r\\n1.  Install Node >= 8.10 and npm >= 5.6 on your machine.\\r\\n\\r\\n2.  To Create a Project Run\\r\\n\\r\\n`npx create-react-app my-app   cd my-app`\\r\\n\\r\\n3.  To start an App\\r\\n\\r\\n`npm start`"},{"id":"/2020/05/02/what-is-an-abstract-class","metadata":{"permalink":"/blog/2020/05/02/what-is-an-abstract-class","source":"@site/blog/2020-05-02-what-is-an-abstract-class.md","title":"Abstract Class","description":"Abstract classes are used for providing an abstraction to the code to make it reusable and extendable.","date":"2020-05-02T00:00:00.000Z","formattedDate":"May 2, 2020","tags":[{"label":"C++","permalink":"/blog/tags/c"},{"label":"CSharp","permalink":"/blog/tags/c-sharp"}],"readingTime":1.135,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["C++","CSharp"]},"prevItem":{"title":"How to Create a New React App","permalink":"/blog/2020/12/25/create-react-app"},"nextItem":{"title":"Ionic 5 setup","permalink":"/blog/2020/02/20/ionic-5-setup"}},"content":"Abstract classes are used for providing an abstraction to the code to make it reusable and extendable.\\n\\n## Abstract class in C++:\\n\\nIt is a class that has at least one pure virtual function (i.e., a function that has no definition). The classes inheriting the abstract class must provide a definition for the pure virtual function.\\n\x3c!--truncate--\x3e\\n\\n***Program***\\n```cpp\\n#include \\"iostream\\"\\nusing namespace std;\\nclass AbstractCls\\n{\\npublic:\\n\xa0\xa0\xa0\xa0\xa0\xa0virtual int Add(int a, int b) = 0;\\n\xa0\xa0\xa0\xa0\xa0\xa0\\n\xa0\xa0\xa0\xa0\xa0\xa0int Sub(int a, int b)\\n\xa0\xa0\xa0\xa0\xa0\xa0{\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0return (a-b);\\n\xa0\xa0\xa0\xa0\xa0\xa0}\\n};\\n\\nclass Math : public AbstractCls\\n{\\npublic:\\n\xa0\xa0\xa0\xa0\xa0\xa0int Add(int a, int b)\\n\xa0\xa0\xa0\xa0\xa0\xa0{\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0 return (a+b);\\n\xa0\xa0\xa0\xa0\xa0\xa0}\\n};\\nint main()\\n{\\n\xa0\xa0\xa0\xa0\xa0\xa0cout<<\\"Math Class\\"<<\\"\\\\\\\\n\\";\\n\xa0\xa0\xa0\xa0\xa0\xa0Math obj;\\n\xa0\xa0\xa0\xa0\xa0\xa0cout<<obj.Add(2, 3)<<\\"\\\\\\\\n\\";\\n\xa0\xa0\xa0\xa0\xa0\xa0cout<<obj.Sub(5, 3)<<\\"\\\\\\\\n\\";\\n\xa0\xa0\xa0\xa0\xa0\xa0return 0;\\n}\\n//OUTPUT\\n//Math Class\\n//5\\n//2\\n```\\n\\n## Abstract class in C#:\\nThe abstract modifier is used before the class or method/indexers/events and properties to declare them as abstract.\\n\\nSample\\n```cpp\\nusing System;\\n\\nnamespace Samples\\n{\\n\\n  public abstract class AbstractCls\\n  {\\n    public abstract int Add(int a, int b);\\n\\n    public int Sub(int a, int b)\\n    {\\n      return (a - b);\\n    }\\n  }\\n\\n  public class Math : AbstractCls\\n  {\\n    public override int Add(int a, int b)\\n    {\\n      return (a + b);\\n    }\\n  }\\n\\n  class Program\\n  {\\n    static void Main(string\\\\[\\\\] args)\\n    {\\n      Console.WriteLine(\\"Math Class\\");\\n      Math obj = new Math();\\n      Console.WriteLine(obj.Add(2, 3));\\n      Console.WriteLine(obj.Sub(5, 3));\\n    }\\n  }\\n}\\n//OUTPUT\\n//Math Class\\n//5\\n//2\\n```"},{"id":"/2020/02/20/ionic-5-setup","metadata":{"permalink":"/blog/2020/02/20/ionic-5-setup","source":"@site/blog/2020-02-20-ionic-5-setup.md","title":"Ionic 5 setup","description":"1. Install Ionic - Open the command prompt and run","date":"2020-02-20T00:00:00.000Z","formattedDate":"February 20, 2020","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":0.745,"hasTruncateMarker":true,"authors":[],"frontMatter":{"categories":["Ionic"],"tags":["Ionic"]},"prevItem":{"title":"Abstract Class","permalink":"/blog/2020/05/02/what-is-an-abstract-class"},"nextItem":{"title":"Ionic5 Error:\'You have to be inside an angular-cli project","permalink":"/blog/2020/02/16/have-to-be-inside"}},"content":"1. Install Ionic - Open the command prompt and run \\n`npm install -g @ionic/cli`\\n\\n2. Update the angular cli \\n`npm install -g @angular/cli@latest`\\n\\n3. Create an app ionic start nagTabs tabs syntax: _ionic start_ app types are a. tabs: A tabs based layout b. sidemenu: A sidemenu based layout c. blank: An empty project with a single page\\n\\n\x3c!--truncate--\x3e\\n4. Create framework features syntax: _ionic generate \\\\[options\\\\]_\\n\\n_type_ of framework features:\\n\\npage\xa0\\ncomponet\\nservice\\nmodule\\nclass\\ndirective\\ngaurd\\n\\n_name_: The name/path of the feature being generated\\n\\n5\\\\. Run the App on browser _cd myApp_ _ionic serve_\\n\\n**Run the app on Android/iOS/Windows**\\n\\n6\\\\. ionic cordova build Build (prepare + compile) an Ionic project for a given platform syntax: _ionic cordova build \\\\[options\\\\]_ eg: _ionic cordova build android_\\n\\n7\\\\. ionic cordova run Run an Ionic project on a connected device syntax: _ionic cordova run \\\\[\\\\] \\\\[options\\\\]_ eg: _ionic cordova run android_"},{"id":"/2020/02/16/have-to-be-inside","metadata":{"permalink":"/blog/2020/02/16/have-to-be-inside","source":"@site/blog/2020-02-16-have-to-be-inside.md","title":"Ionic5 Error:\'You have to be inside an angular-cli project","description":"PS C:nagTabs> ng test","date":"2020-02-16T00:00:00.000Z","formattedDate":"February 16, 2020","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":0.38,"hasTruncateMarker":false,"authors":[],"frontMatter":{"categories":["Ionic"],"tags":["Ionic"]},"prevItem":{"title":"Ionic 5 setup","permalink":"/blog/2020/02/20/ionic-5-setup"},"nextItem":{"title":"When Breath Becomes Air","permalink":"/blog/2018/12/06/when-breath-becomes-air"}},"content":"## PS C:nagTabs> ng test\\n\\nAs a forewarning, we are moving the CLI npm package to \\"@angular/cli\\" with the next release, which will only support Node 6.9 and greater. This package will be officially deprecated shortly after. To disable this warning use \\"ng set --global warnings.packageDeprecation=false\\". You have to be inside an angular-cli project in order to use the test command.\\n\\n### **Answer:**\\n\\n**Install the latest angular version using the following command**\\n\\n`npm install -g @angular/cli@latest`"},{"id":"/2018/12/06/when-breath-becomes-air","metadata":{"permalink":"/blog/2018/12/06/when-breath-becomes-air","source":"@site/blog/2018-12-06-when-breath-becomes-air.md","title":"When Breath Becomes Air","description":"Today I had completed a book When Breath Becomes Air by Paul Kalanithi a Neurosurgeon. Book covers What makes life worth living in the face of death? What do you do when life is catastrophically interrupted? What does it mean to have a child as your own life fades away?","date":"2018-12-06T00:00:00.000Z","formattedDate":"December 6, 2018","tags":[{"label":"Books","permalink":"/blog/tags/books"}],"readingTime":0.295,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["Books"]},"prevItem":{"title":"Ionic5 Error:\'You have to be inside an angular-cli project","permalink":"/blog/2020/02/16/have-to-be-inside"},"nextItem":{"title":"The Biology of Belief","permalink":"/blog/2018/11/18/biology-of-belief"}},"content":"Today I had completed a book [When Breath Becomes Air](https://amzn.to/3yt4tjr) by Paul Kalanithi a Neurosurgeon. Book covers What makes life worth living in the face of death? What do you do when life is catastrophically interrupted? What does it mean to have a child as your own life fades away?\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n![](/img/when-breath-becomes-air.JPG)\\r\\n\\r\\nTo Buy this book in Amazon: [https://amzn.to/3yxxt9R](https://amzn.to/3yxxt9R)"},{"id":"/2018/11/18/biology-of-belief","metadata":{"permalink":"/blog/2018/11/18/biology-of-belief","source":"@site/blog/2018-11-18-biology-of-belief.md","title":"The Biology of Belief","description":"Today completed reading. The Biology of Belief: Unleashing the Power of Consciousness, Matter and Miracles by Bruce Lipton.","date":"2018-11-18T00:00:00.000Z","formattedDate":"November 18, 2018","tags":[{"label":"Books","permalink":"/blog/tags/books"}],"readingTime":0.385,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["Books"]},"prevItem":{"title":"When Breath Becomes Air","permalink":"/blog/2018/12/06/when-breath-becomes-air"},"nextItem":{"title":"Open urls using InAppBrowser plugin in Ionic Apps","permalink":"/blog/2018/07/15/ionic-inappbrowser-urls"}},"content":"Today completed reading. [The Biology of Belief: Unleashing the Power of Consciousness, Matter and Miracles by Bruce Lipton](https://amzn.to/2UoBvm0).\\r\\n\\r\\nThis book is a groundbreaking work in the field of new biology, and it will forever change how we think about thinking. It covers.  \\r\\n\\r\\na. Interaction between your mind and body and the processes by which cells receive information.  \\r\\n\\r\\nb. Genes and DNA do not control our biology  \\r\\n\x3c!--truncate--\x3e\\r\\nc. EPigenetics\\r\\n\\r\\n![](/img/biology-of-belief.jpg)\\r\\n\\r\\nTo buy this book on Amazon: [https://amzn.to/36nLuKV](https://amzn.to/36nLuKV)"},{"id":"/2018/07/15/ionic-inappbrowser-urls","metadata":{"permalink":"/blog/2018/07/15/ionic-inappbrowser-urls","source":"@site/blog/2018-07-15-ionic-inappbrowser-urls.md","title":"Open urls using InAppBrowser plugin in Ionic Apps","description":"How to open urls using InAppBrowser plugin & window.open from ionic3+ apps. We can InAppBrowser plugin & window.open for opening urls from ionic3+ app","date":"2018-07-15T00:00:00.000Z","formattedDate":"July 15, 2018","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":0.63,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["Ionic"]},"prevItem":{"title":"The Biology of Belief","permalink":"/blog/2018/11/18/biology-of-belief"},"nextItem":{"title":"Create & Use a Local StorageProvider in Ionic Apps\\"","permalink":"/blog/2018/06/22/ionic-local-storageprovider"}},"content":"How to open urls using InAppBrowser plugin & window.open from ionic3+ apps. We can InAppBrowser plugin & window.open for opening urls from ionic3+ app\\n\\n\x3c!--truncate--\x3e\\n\\n## Steps:\\n\\n1. Install below plugins ionic cordova plugin add cordova-plugin-inappbrowser \\n\\n  `npm install --save @ionic-native/in-app-browser`\\n\\n2. Add InAppBrowser in the app.module.ts \\n\\n```js\\nimport { InAppBrowser } from \'@ionic-native/in-app-browser\';\\nimport { LaunchUrlProvider } from \'../providers\'; \\n\\n@NgModule({ \xa0 declarations: \\\\[ \xa0 \xa0 // ... \xa0 \\\\], \xa0\\n imports: \\\\[ \xa0 \xa0 BrowserModule, \xa0 \xa0 IonicModule.forRoot(MyApp), \xa0 \xa0 IonicStorageModule.forRoot() \xa0 \\\\], \xa0\\n  bootstrap: \\\\[IonicApp\\\\], \xa0 \\n  entryComponents: \\\\[ \xa0 \xa0 // ... \xa0 \\\\], \xa0\\n   providers: \\\\[ \xa0 \xa0 // ... \xa0 \xa0 \\n   InAppBrowser, \xa0 \xa0 LaunchUrlProvider \xa0 \\\\] })\\n```\\n\\n3. Create a LaunchUrlProvider\\n\\n4. Inject it in your Page/Componet and call the methods"},{"id":"/2018/06/22/ionic-local-storageprovider","metadata":{"permalink":"/blog/2018/06/22/ionic-local-storageprovider","source":"@site/blog/2018-06-22-ionic-local-storageprovider.md","title":"Create & Use a Local StorageProvider in Ionic Apps\\"","description":"Add a provider to the Ionic3 app refer and follow the below steps","date":"2018-06-22T00:00:00.000Z","formattedDate":"June 22, 2018","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":0.905,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["Ionic"]},"prevItem":{"title":"Open urls using InAppBrowser plugin in Ionic Apps","permalink":"/blog/2018/07/15/ionic-inappbrowser-urls"},"nextItem":{"title":"Temporary Storage which persists only when the app is live for Ionic3+ Apps","permalink":"/blog/2018/06/16/ionic-temporary-storage"}},"content":"Add a provider to the Ionic3 app refer and follow the below steps  \\n[How to Add Providers in Ionic3+](http://nagvbt.blogspot.com/2018/06/how-to-add-providers-in-ionic3.html)   \\n\\n\x3c!--truncate--\x3e\\n## Steps:  \\n  \\n1. Inject the Storage to the StorageProvider\xa0 and that was created in the\xa0[How to Add Providers in Ionic3+](http://nagvbt.blogspot.com/2018/06/how-to-add-providers-in-ionic3.html)   \\n  \\n  \\n\\n2. Add IonicStorageModule to the imports list in your NgModule declaration in\xa0 src/app/app.module.ts  \\n\\n```js \\nimport { IonicStorageModule } from \'@ionic/storage\';  \\nimport { StorageProvider } from \'../providers\';  \\n@NgModule({  \\n declarations: [  \\n // ...  \\n ],  \\n imports: [  \\n    BrowserModule,  \\n    IonicModule.forRoot(MyApp),  \\n    IonicStorageModule.forRoot()  \\n ],  \\n bootstrap: [IonicApp],  \\n entryComponents: [  \\n // ...  \\n ],  \\n providers: [  \\n    // ...  \\n    StorageProvider,  \\n ]  \\n})  \\n```\\n  \\n3. To use StorageProvider in your Page/Component inject it and use it \\n```js \\nimport { Component } from \'@angular/core\';  \\nimport { IonicPage } from \'ionic-angular\';  \\nimport { StorageProvider } from \'../../providers\';\\n\\n \\\\*\\\\*  \\n \\\\*\xa0 Class representing a StorageProvider Demo  \\n \\\\*\xa0 Author - Nag  \\n \\\\*  \\n@IonicPage()  \\n@Component({  \\n selector: \'page-storage\',  \\n templateUrl: \'storage.html\',  \\n})  \\nexport class StoragePage {  \\n private editValue;  \\n constructor(public storageProvider: StorageProvider) {  \\n }  \\n set() {  \\n this.storageProvider.setValue(\'EDIT\\\\_KEY\', this.editValue);  \\n }  \\n get() {  \\n this.storageProvider.getValue(\'EDIT\\\\_KEY\').then((value) => {  \\n alert(\'StorageTest \\\\\\\\nSaved value: \' + value);  \\n });  \\n }  \\n} \\n``` \\n  \\nFILES  \\nRefer the code files in [Github](https://github.com/nagvbt/IonicTemplate/commit/15805bd428b81b3faf4b54a4d30d92c1f60eb270)"},{"id":"/2018/06/16/ionic-temporary-storage","metadata":{"permalink":"/blog/2018/06/16/ionic-temporary-storage","source":"@site/blog/2018-06-16-ionic-temporary-storage.md","title":"Temporary Storage which persists only when the app is live for Ionic3+ Apps","description":"AppStateProvider - is developed for Temporary Storage which persists only when the app is live once the app is closed the AppState data will be destroyed. For small data to save permanently use StorageProvider which is a local Storage.","date":"2018-06-16T00:00:00.000Z","formattedDate":"June 16, 2018","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":1.845,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Ionic"]},"prevItem":{"title":"Create & Use a Local StorageProvider in Ionic Apps\\"","permalink":"/blog/2018/06/22/ionic-local-storageprovider"},"nextItem":{"title":"How to Add Providers in Ionic3+ apps","permalink":"/blog/2018/06/02/how-to-add-providers-in-ionic3-apps"}},"content":"AppStateProvider - is developed for Temporary Storage which persists only when the app is live once the app is closed the AppState data will be destroyed. For small data to save permanently use StorageProvider which is a local Storage.  \\n**app-state.ts**   \\n\\n```js\\nimport { Injectable } from \'@angular/core\';  \\nimport { AppStateDTO } from \'./app-state-DTO\'  \\n  \\n\\\\**   \\n * Class representing a AppState - AppStateProvider - \\n * this state persists only when the app is live once the app is   \\n * closed the AppState data will be destroyed.  \\n * NOTE: For small data to save permanently use StorageProvider which is a local Storage  \\n * Author - Nag  \\n */  \\n@Injectable()  \\nexport class AppStateProvider {  \\n private stateData = {};  \\n private globalData: AppStateDTO;  \\n  \\n constructor() {  \\n }  \\n  \\n \\\\*\\\\*  \\n \\\\* Save the AppState  \\n \\\\* @param {AppStateDTO} data save the AppStateDTO   \\n \\\\*  \\n public setAppState(data: AppStateDTO) {  \\n this.globalData = data;  \\n }  \\n  \\n \\\\*\\\\*  \\n \\\\* Get the saved AppState  \\n \\\\* @return {AppStateDTO} the saved AppStateDTO data  \\n \\\\*/  \\n public getAppState(): AppStateDTO {  \\n return this.globalData;  \\n }  \\n  \\n \\\\*\\\\*  \\n \\\\* Get the clone of the current stateData  \\n \\\\* @return {state} state a clone of the current state  \\n \\\\*/  \\n get state() {  \\n return this.stateData = this.clone(this.stateData);  \\n }  \\n  \\n \\\\*\\\\*  \\n \\\\* get the value based on key  \\n \\\\* @param {any} key   \\n \\\\* @return {any} value of key  \\n \\\\*/  \\n get(key?: any) {  \\n const state = this.state;  \\n return state.hasOwnProperty(key) ? state\\\\[key\\\\] : state;  \\n }  \\n  \\n \\\\*\\\\*  \\n \\\\* Set value don\'t allow mutation  \\n \\\\* @param {any} value state a clone of the current state  \\n \\\\*/  \\n set state(value) {  \\n throw new Error(\'do not mutate the `stateData` directly\');  \\n }  \\n  \\n \\\\*\\\\*  \\n \\\\* Set the key value pair  \\n \\\\* @param {string} key  \\n \\\\* @param {any} any value  \\n \\\\* @return {any} the state  \\n \\\\*  \\n set(key: string, value: any) {  \\n return this.stateData\\\\[key\\\\] = value;  \\n }  \\n  \\n /\\\\*\\\\*  \\n \\\\* Clone the object  \\n \\\\* @param {object} clone the input object  \\n \\\\* @return {any} object   \\n \\\\*/  \\n private clone(object) {  \\n return JSON.parse(JSON.stringify(object));  \\n }  \\n}  \\n```  \\n  \\nAppStateDTO - used to store the values that are required for the App  \\n  \\n**app-state-dto.ts**  \\n```js\\n/\\\\*\\\\*   \\n \\\\* Class representing a AppStateDTO  \\n \\\\* Author - Nag  \\n \\\\*/  \\nexport class AppStateDTO {  \\n APP_NAME: string;  \\n APP_VERSION: string;  \\n EMAIL: string;  \\n APP_ID: string;  \\n APP_DOWNLOAD_URL: string;  \\n MORE_APPS_URL: string;  \\n ADS_BANNER_ID: string;  \\n ADS_INTERSTITIAL_ID: string;  \\n ADS_VEDIOREWARDS_ID: string;  \\n IS_MOBILE: boolean;  \\n}  \\n```\\n**FILES:**  \\nRefer the code files in [Github](https://github.com/nagvbt/IonicTemplate/commit/9ce7e8458cb06328eb4673e1d79f3d293d75c2ea)"},{"id":"/2018/06/02/how-to-add-providers-in-ionic3-apps","metadata":{"permalink":"/blog/2018/06/02/how-to-add-providers-in-ionic3-apps","source":"@site/blog/2018-06-02-how-to-add-providers-in-ionic3-apps.md","title":"How to Add Providers in Ionic3+ apps","description":"Providers are special classes which decorated with @Injectable decorator. Providers are used to a specific work.\xa0 We can organize the code and code can be reused in multiple places e.g in pages, other providers too.","date":"2018-06-02T00:00:00.000Z","formattedDate":"June 2, 2018","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":0.46,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Ionic"]},"prevItem":{"title":"Temporary Storage which persists only when the app is live for Ionic3+ Apps","permalink":"/blog/2018/06/16/ionic-temporary-storage"},"nextItem":{"title":"How to Add Constants and use across Ionic3+ Apps","permalink":"/blog/2018/05/13/ionic-add-constants"}},"content":"Providers are special classes which decorated with @Injectable decorator. Providers are used to a specific work.\xa0 We can organize the code and code can be reused in multiple places e.g in pages, other providers too.  \\n  \\nWe will added now simple Local StorageProvider by using the command  \\nionic g provider Storage  \\n  \\n1. The command creates the StorageProvider in  \\nproviders/storage/storage.ts  \\n\\n```js  \\nimport { Injectable } from \'@angular/core\';  \\n@Injectable()  \\nexport class StorageProvider {  \\n constructor() {  \\n }  \\n}  \\n```\\n  \\n2. Adds the StorageProvider in the provider\'s array of app.module.ts  \\n  \\n  \\n***FILES***  \\nRefer the code files in [Github](https://github.com/nagvbt/IonicTemplate/commit/da1dba6fe3e42bcc383ea84d190a8dafebf1d108)"},{"id":"/2018/05/13/ionic-add-constants","metadata":{"permalink":"/blog/2018/05/13/ionic-add-constants","source":"@site/blog/2018-05-13-ionic-add-constants.md","title":"How to Add Constants and use across Ionic3+ Apps","description":"Steps:","date":"2018-05-13T00:00:00.000Z","formattedDate":"May 13, 2018","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":0.48,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Ionic"]},"prevItem":{"title":"How to Add Providers in Ionic3+ apps","permalink":"/blog/2018/06/02/how-to-add-providers-in-ionic3-apps"},"nextItem":{"title":"Add FontAwesome Icons in the SideMenu of ionic3+ Apps","permalink":"/blog/2018/05/12/ionic-add-fontawesome-icons"}},"content":"## Steps:  \\n\\n1. Created a folder constants and create a file app.configs.ts  \\n  \\n2. Add below code which needs to be used across app  \\n\\n```js\\nexport const AppConfigs = {  \\n APP_NAME: \\"InoicTemplate\\",  \\n APP_VERSION: \\"\xa0 1.0.0\\",  \\n EMAIL: \\"nagvbt@gmail.com\\",  \\n SQLITE_DB_NAME: \\"ionictemp\\",  \\n ...  \\n}  \\n```\\n  \\n3. To use above AppConfigs values add the below code in the page  \\n\\n```js\\nimport {AppConfigs} from \'../../constants\'  \\n  \\nexport class AboutPage {  \\n private appName: string;  \\n private versionNumber: string;  \\n  \\n constructor(public navCtrl: NavController, public navParams: NavParams) {  \\n this.onInit();  \\n }  \\n  \\n onInit() {  \\n this.appName = AppConfigs.APP_NAME;  \\n this.versionNumber = AppConfigs.APP_VERSION;  \\n }  \\n}  \\n```\\n  \\n**FILES:**  \\nRefer the code files in [Github](https://github.com/nagvbt/IonicTemplate/commit/6928fcdecbd1bf08cecb83daa91332e1237f005b)"},{"id":"/2018/05/12/ionic-add-fontawesome-icons","metadata":{"permalink":"/blog/2018/05/12/ionic-add-fontawesome-icons","source":"@site/blog/2018-05-12-ionic-add-fontawesome-icons.md","title":"Add FontAwesome Icons in the SideMenu of ionic3+ Apps","description":"First go through the below articles","date":"2018-05-12T00:00:00.000Z","formattedDate":"May 12, 2018","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":0.43,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Ionic"]},"prevItem":{"title":"How to Add Constants and use across Ionic3+ Apps","permalink":"/blog/2018/05/13/ionic-add-constants"},"nextItem":{"title":"FontAwesome in ionic3+ apps","permalink":"/blog/2018/04/29/ionic-fontawesomes"}},"content":"First go through the below articles  \\n1\\\\. [How to create a basic ionic3 + mobile application](blog/2018/02/03/ionic-basic-mobile-app)  \\n\\n[2\\\\. How to add FontAwesome to ionic3+ apps](http://nagvbt.blogspot.com/2018/04/how-to-add-fontawesome-to-ionic3-apps.html)\\n\\n  \\n\\nSteps:\\n\\n1\\\\. In app.component.ts add icon property in the pages array and add the icon name\xa0\\n```js\\nexport class MyApp {\\n :\\n pages: Array;\\n :\\n\\n this.pages = [\\n { title: \'Home\', component: HomePage, icon: \\"home\\" },\\n { title: \'List\', component: ListPage, icon: \\"list\\" }\\n ];\\n\\n :\\n}\\n ``` \\n\\n2\\\\. Add _tag in the app.html_\\n\\n_FILES  \\n\\nRefer the code files in [Github](https://github.com/nagvbt/IonicTemplate/commit/c5db580b97e1385728490facbe46c7823d422dfa)\\n\\n_"},{"id":"/2018/04/29/ionic-fontawesomes","metadata":{"permalink":"/blog/2018/04/29/ionic-fontawesomes","source":"@site/blog/2018-04-29-ionic-fontawesomes.md","title":"FontAwesome in ionic3+ apps","description":"Steps","date":"2018-04-29T00:00:00.000Z","formattedDate":"April 29, 2018","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":0.28,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Ionic"]},"prevItem":{"title":"Add FontAwesome Icons in the SideMenu of ionic3+ Apps","permalink":"/blog/2018/05/12/ionic-add-fontawesome-icons"},"nextItem":{"title":"Display the Menu always for Tablets in Ionic3+","permalink":"/blog/2018/03/18/ionic-display-the-menu-always-for-tablets."}},"content":"## Steps\\n1. Install Font-Awesome  \\n  `npm install font-awesome --save`  \\n  \\n  \\n2. Create a config folder at root and create a file custom.copy.config.js  \\n  `config/custom.copy.config.js`  \\n  \\nadd below code 3. Add config section at the end of package.json  \\n  `\\"config\\": {`  \\n  `\\"ionic\\\\_copy\\": \\"./config/custom.copy.config.js\\"`  \\n  `}`  \\n  \\n  \\n4. Delete package-lock.json  \\n  \\n  \\n5. In index.html add the following line  \\n   \\n   \\n`FILES`  \\nRefer the code files in [Github](https://github.com/nagvbt/IonicTemplate/commit/6010ed693d790b1980ab57fbd011554e46cd787a)"},{"id":"/2018/03/18/ionic-display-the-menu-always-for-tablets.","metadata":{"permalink":"/blog/2018/03/18/ionic-display-the-menu-always-for-tablets.","source":"@site/blog/2018-03-18-ionic-display-the-menu-always-for-tablets..md","title":"Display the Menu always for Tablets in Ionic3+","description":"We can use\xa0ion-split-pane for showing the UI elements like Menu always in large viewports like Tablets which is common in iPads.","date":"2018-03-18T00:00:00.000Z","formattedDate":"March 18, 2018","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":0.29,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Ionic"]},"prevItem":{"title":"FontAwesome in ionic3+ apps","permalink":"/blog/2018/04/29/ionic-fontawesomes"},"nextItem":{"title":"How to create a basic ionic3 + mobile application","permalink":"/blog/2018/02/03/ionic-basic-mobile-app"}},"content":"We can use\xa0ion-split-pane for showing the UI elements like Menu always in large viewports like Tablets which is common in iPads.  \\n  \\n# Steps:  \\n  \\n1. Create an ionic\xa0app using the below article  \\n[How to create a basic ionic3 + mobile application](/blog/2018/02/03/ionic-basic-mobile-app)   \\n  \\n2. Wrap the ion-menu and ion-nav with\xa0<ion-split-pane\\\\> sample code below app.html\\n\\n**FILES**  \\nRefer the code files in [Github](https://github.com/nagvbt/IonicTemplate/commit/9e28f7c912d2320689560760cfca7a84859958b5)"},{"id":"/2018/02/03/ionic-basic-mobile-app","metadata":{"permalink":"/blog/2018/02/03/ionic-basic-mobile-app","source":"@site/blog/2018-02-03-ionic-basic-mobile-app.md","title":"How to create a basic ionic3 + mobile application","description":"1. To start a new app, open your terminal/command prompt and run the following command","date":"2018-02-03T00:00:00.000Z","formattedDate":"February 3, 2018","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":0.2,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Ionic"]},"prevItem":{"title":"Display the Menu always for Tablets in Ionic3+","permalink":"/blog/2018/03/18/ionic-display-the-menu-always-for-tablets."},"nextItem":{"title":"Web developer resources","permalink":"/blog/2018/01/26/web-developer-resources"}},"content":"1. To start a new app, open your terminal/command prompt and run the following command\\n\\n`ionic start IonicMobileProject sidemenu`\\n\\n2. To view the app in browser\xa0 run the following commands\\n  \\n`cd IonicMobileProject/`\\n\\n`ionic serve`  \\n\\n**FILES**\\nRefer the code files\xa0in [Github](https://github.com/nagvbt/IonicTemplate/commit/577c6433435af108dc27dec1e8267075c04e9d3d)"},{"id":"/2018/01/26/web-developer-resources","metadata":{"permalink":"/blog/2018/01/26/web-developer-resources","source":"@site/blog/2018-01-26-web-developer-resources.md","title":"Web developer resources","description":"HTML/CSS/Javascript","date":"2018-01-26T00:00:00.000Z","formattedDate":"January 26, 2018","tags":[],"readingTime":0.275,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tag":["Web"]},"prevItem":{"title":"How to create a basic ionic3 + mobile application","permalink":"/blog/2018/02/03/ionic-basic-mobile-app"},"nextItem":{"title":"Angular Vs React which one you use","permalink":"/blog/2017/08/29/angular-vs-react-which-one-you-use"}},"content":"**HTML/CSS/Javascript**  \\nhttps://developer.mozilla.org/en-US/docs/Web/CSS  \\nhttps://developer.mozilla.org/en-US/docs/Web/HTML  \\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript  \\n  \\n**Verifying HTML and CSS**  \\nTo verify HTML: http://validator.w3.org/#validate\\\\_by\\\\_input  \\nTo verify CSS: http://jigsaw.w3.org/css-validator/#validate\\\\_by\\\\_input  \\n  \\n**Flex**  \\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/flex  \\nhttps://css-tricks.com/snippets/css/a-guide-to-flexbox/  \\n  \\n**CSS**  \\n1\\\\. Normalize.css  \\nA modern, HTML5-ready alternative to CSS resets  \\nhttps://necolas.github.io/normalize.css/  \\n  \\n**Place holder Images**  \\nQuick & simple image placeholders.  \\nhttps://placeholder.com/  \\nSample:  \\n![](http://via.placeholder.com/350x150)  \\n  \\n**Font**  \\nhttps://fonts.google.com/  \\n  \\n**Frameworks**  \\nBootstrap: http://getbootstrap.com/  \\nFoundation: http://foundation.zurb.com/  \\nYaml: http://www.yaml.de/  \\n960 Grid: http://960.gs/  \\nSusy: http://susy.oddbird.net/"},{"id":"/2017/08/29/angular-vs-react-which-one-you-use","metadata":{"permalink":"/blog/2017/08/29/angular-vs-react-which-one-you-use","source":"@site/blog/2017-08-29-angular-vs-react-which-one-you-use.md","title":"Angular Vs React which one you use","description":"Technology evaluation is some times challenging when we have best technologies available. Let us see who wins Angular or React.","date":"2017-08-29T00:00:00.000Z","formattedDate":"August 29, 2017","tags":[{"label":"Technology Evaluation","permalink":"/blog/tags/technology-evaluation"},{"label":"Angular","permalink":"/blog/tags/angular"},{"label":"React","permalink":"/blog/tags/react"}],"readingTime":1.65,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Technology Evaluation","Angular","React"]},"prevItem":{"title":"Web developer resources","permalink":"/blog/2018/01/26/web-developer-resources"},"nextItem":{"title":"Visual Studio Code Theme customization","permalink":"/blog/2017/08/27/visual-studio-code-theme-customization"}},"content":"Technology evaluation is some times challenging when we have best technologies available. Let us see who wins Angular or React.  \\nFeatures  \\n\\n### Framework / Ecosystem:\\n\\n**Angular 4**\\n\\nAngular 4 is an MVC Framework itself.\\n\\n  \\n\\n**React**\\n\\nReact is only a view library one needs to choose the different libraries to make the Best Ecosystem. Refer my post for choosing the better parts to build a React Echosystem\\n\\n_**Summary:** It takes time to build Ecosystem in React. Once built developers need not worry about the Ecosystem._  \\n\\n### Technical Skills:\\n\\n**Angular 4**\\n\\nAngular 4 requires Typescript which is similar to C# / Java\\n\\nNeed to know about the angular directives/concepts\\n\\n  \\n\\n**React**\\n\\nReact requires JSX syntax which is similar to HTML and ES6 Javascript\\n\\nReact requires less time to master once the ecosystem build\\n\\n_**Summary**: It depends on your current development team skills if they are familiar with Javascript go for React if the team is familiar with C#/Java go for Angular_  \\n\\n### Tooling:\\n\\nBoth Angular 4 and React have great CLIs which work with webpack.  \\n  \\n\\n### PWA:\\n\\n**Angular 4**\\n\\nIonic 3 is a great framework to develop PWA which comes out of the box UI components.\xa0\\n\\n**React**\\n\\nWe don\'t have frameworks readily available.\\n\\n  \\n\\n_**Summary**: Ionic 3 is best for PWA development_\\n\\n### Story Book:\\n\\n**Angular 4**\\n\\nCurrently there is no such kind of\xa0 Tool\\n\\n  \\n\\n**React**\\n\\n[Storybook](https://github.com/storybooks/storybook) is a React development environment where we can develop UI components independently from the main application. One can browse a UI component library, view the different states of each component and interactively develop and verify components.\\n\\n  \\n\\n### Conclusion:\\n\\nBest way to conclude between Angular 4 and React is to develop an PoCs with the cross cutting key features of the project like Translation, Theming, Accessibility, Form factors. I am slightly biased on the Angular 4 first latter having hands on React it own my heart. But if you have a team already working with AngularJS and has experience with Java/C#/C++ sticking with Angular 4 makes more weightage."},{"id":"/2017/08/27/visual-studio-code-theme-customization","metadata":{"permalink":"/blog/2017/08/27/visual-studio-code-theme-customization","source":"@site/blog/2017-08-27-visual-studio-code-theme-customization.md","title":"Visual Studio Code Theme customization","description":"My favorite source code editor is Visual Studio Code. Every day I use it for my web application, PWA ( progressive web application) and Ionic Mobile apps development. It is a light weight open source code editor developed by Tech giant Microsoft.","date":"2017-08-27T00:00:00.000Z","formattedDate":"August 27, 2017","tags":[{"label":"Tools","permalink":"/blog/tags/tools"}],"readingTime":1.29,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Tools"]},"prevItem":{"title":"Angular Vs React which one you use","permalink":"/blog/2017/08/29/angular-vs-react-which-one-you-use"},"nextItem":{"title":"React Eco System / Framework","permalink":"/blog/2017/08/26/react-eco-system-framework"}},"content":"My favorite source code editor is Visual Studio Code. Every day I use it for my web application, PWA ( progressive web application) and Ionic Mobile apps development. It is a light weight open source code editor developed by Tech giant Microsoft.\\n\\n![](images/aca14-vscode.jpg)\\n\\nWe can customize the look and feel of the editor according to our taste and comfort. In this small blog post I will show how modify the workbench.\\n\\n1. Open Visual Studio Code\xa0 \\n2. Select File->Prefernces->Settings and add the below json\\n\\n```json\\n{\\n  \\"typescript.tsdk\\": \\"node_modules/typescript/lib\\",\\n  \\"terminal.integrated.shell.windows\\": \\"C:\\\\\\\\windows\\\\\\\\Sysnative\\\\\\\\cmd.exe\\",\\n\\n  // Search exclude\\n  \\"search.exclude\\": {\\n    \\"**/.git\\": true,\\n    \\"**/.svn\\": true,\\n    \\"**/.hg\\": true,\\n    \\"**/CVS\\": true,\\n    \\"**/.DS_Store\\": true,\\n    \\"**/platforms\\": true,\\n    \\"**/bld\\": true,\\n    \\"**/bin\\": true,\\n    \\"**/Windows-x64\\": true\\n  },\\n\\n  // Files to exlude\\n  \\"files.exclude\\": {\\n    \\"**/.git\\": true,\\n    \\"**/.svn\\": true,\\n    \\"**/.hg\\": true,\\n    \\"**/CVS\\": true,\\n    \\"**/.DS_Store\\": true,\\n    \\"**/bld\\": true,\\n    \\"**/bin/\\": true,\\n    \\"**/Windows-x64\\": true\\n  },\\n\\n  // Editor Settings\\n  \\"editor.fontWeight\\": \\"200\\",  \\n  \\"editor.fontSize\\": 14,\\n  \\"editor.fontFamily\\": \\"Consolas, \'Courier New\', monospace\\",\\n  \\"editor.letterSpacing\\": 0.3,\\n  \\"editor.lineHeight\\": 0,\\n  \\"editor.minimap.enabled\\": true,\\n  \\"editor.formatOnType\\": true,\\n  \\"editor.formatOnPaste\\": true,\\n  \\"editor.wordWrap\\": \\"on\\",\\n  \\"editor.minimap.renderCharacters\\": false,\\n  \\"editor.renderWhitespace\\": \\"boundary\\",  \\n  \\"editor.mouseWheelZoom\\": true,\\n  \\"editor.renderIndentGuides\\": false,\\n  \\"editor.accessibilitySupport\\": \\"off\\",\\n  \\"editor.formatOnSave\\": true,\\n  \\"editor.rulers\\": [\\n    80,\\n    100\\n  ],\\n\\n  // git related\\n  \\"git.countBadge\\": \\"all\\",\\n  \\"git.checkoutType\\": \\"remote\\",\\n\\n  // files related\\n  \\"files.autoSave\\": \\"afterDelay\\",\\n  \\"files.autoSaveDelay\\": 1000,\\n\\n  // zen mode\\n  \\"zenMode.fullScreen\\": true,\\n  \\"zenMode.hideTabs\\": false,\\n  \\"zenMode.hideStatusBar\\": false,\\n  \\n  // workbench related\\n  \\"workbench.activityBar.visible\\": true,\\n  \\"workbench.sideBar.location\\": \\"right\\",\\n  \\"workbench.iconTheme\\": \\"vscode-icon-theme\\",\\n  \\"workbench.colorTheme\\": \\"Visual Studio Dark\\",\\n  \\"workbench.colorCustomizations\\": {\\n    \\"activityBar.foreground\\": \\"#8C489F\\",\\n    \\"activityBarBadge.background\\": \\"#C3C3E5\\",\\n    \\"activityBarBadge.foreground\\": \\"#443266\\",\\n    \\"tab.activeBackground\\": \\"#443266\\",\\n    \\"statusBar.background\\": \\"#433166\\",\\n    \\"button.background\\": \\"#8C489F\\"\\n  },\\n\\n  // others\\n  \\"window.zoomLevel\\": 1.5,\\n  \\"css.lint.duplicateProperties\\": \\"warning\\",\\n  // Controls the location of the sidebar. It can either show on the left or right of the workbench.\\n  \\"typescript.referencesCodeLens.enabled\\": true,\\n}\\n```"},{"id":"/2017/08/26/react-eco-system-framework","metadata":{"permalink":"/blog/2017/08/26/react-eco-system-framework","source":"@site/blog/2017-08-26-react-eco-system-framework.md","title":"React Eco System / Framework","description":"To build a production quality web application using React following are the parts (libs/ components/) which constitutes one of the best React Eco system or frame work are listed below.","date":"2017-08-26T00:00:00.000Z","formattedDate":"August 26, 2017","tags":[{"label":"React","permalink":"/blog/tags/react"}],"readingTime":0.54,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["React"]},"prevItem":{"title":"Visual Studio Code Theme customization","permalink":"/blog/2017/08/27/visual-studio-code-theme-customization"},"nextItem":{"title":"Design Patterns and there advantages","permalink":"/blog/2017/08/25/design-patterns-and-there-advantages"}},"content":"To build a production quality web application using React following are the parts (libs/ components/) which constitutes one of the best React Eco system or frame work are listed below.  \\n  \\n##  REACT  \\nDocs: https://facebook.github.io/react/docs/  \\nGithub: https://github.com/facebook/react  \\n  \\n##  REACT-ROUTER  \\nGithub: https://github.com/reacttraining/react-router  \\nDocs: https://reacttraining.com/react-router/web/example/sidebar  \\n  \\n##  REDUX  \\nState container for JavaScript apps  \\nDocs: http://redux.js.org/  \\nGithub: https://github.com/reactjs/redux/  \\n  \\n##  REDUX-SAGA  \\n- Make side effects i.e. asynchronous things like data fetching  \\n- Makes impure things like accessing the browser cache  \\nDocs: https://redux-saga.js.org/  \\nGithub: https://github.com/redux-saga/redux-saga  \\n  \\n## AXIOS  \\nPromise based HTTP client for the browser and node.js  \\nhttps://github.com/mzabriskie/axios  \\n  \\n##  REACT-BOOTSTRAP  \\nDocs: https://react-bootstrap.github.io/components.html  \\nGithub: https://github.com/react-bootstrap/react-bootstrap  \\n  \\n## classNames  \\nA simple javascript utility for conditionally joining classNames together  \\nhttps://github.com/JedWatson/classnames"},{"id":"/2017/08/25/design-patterns-and-there-advantages","metadata":{"permalink":"/blog/2017/08/25/design-patterns-and-there-advantages","source":"@site/blog/2017-08-25-design-patterns-and-there-advantages.md","title":"Design Patterns and there advantages","description":"What are Design Patterns:","date":"2017-08-25T00:00:00.000Z","formattedDate":"August 25, 2017","tags":[{"label":"Design Patterns","permalink":"/blog/tags/design-patterns"}],"readingTime":0.615,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Design Patterns"]},"prevItem":{"title":"React Eco System / Framework","permalink":"/blog/2017/08/26/react-eco-system-framework"},"nextItem":{"title":"The more you know","permalink":"/blog/2017/08/25/the-more-you-know"}},"content":"## What are Design Patterns:\\n\\nDesign patterns are solutions/patterns to problems which occurs in many situations.  \\n  \\n![](images/e9d95-designpatterns1.png)\\n\\n## Advantages of Design Patterns:\\n\\n1. Developers can select a tried and well tested solutions\\n2. Makes development and maintenance of code easy and fast\\n3. Design patterns are language independent hence we use them in any language which supports object oriented\\n4. Highly flexible and can be used in any application/domain\\n5. Using design patterns we can create reusable object oriented designs\\n\\n  \\n\\n## Types of Design Patterns\\n\\nDesign Patterns are broadly classified into three \xa0Types based on their purpose.  \\n\\n1. Creational design patterns\\n2. Structural design patterns\\n3. Behavioral design patterns\xa0\\n\\nThese three patterns are further divided into 23 design patters refer to below illustration."},{"id":"/2017/08/25/the-more-you-know","metadata":{"permalink":"/blog/2017/08/25/the-more-you-know","source":"@site/blog/2017-08-25-the-more-you-know.md","title":"The more you know","description":"As the Software Industry changes rapidly one needs to update their skills. Whoever involves in the software development needs to write down there skills and analyze are the skills up to date. There are many ways to add or update your skills.","date":"2017-08-25T00:00:00.000Z","formattedDate":"August 25, 2017","tags":[{"label":"Technology","permalink":"/blog/tags/technology"}],"readingTime":1.635,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Technology"]},"prevItem":{"title":"Design Patterns and there advantages","permalink":"/blog/2017/08/25/design-patterns-and-there-advantages"},"nextItem":{"title":"Progressive Web App (PWA)","permalink":"/blog/2017/08/20/progressive-web-app-pwa-next-generation-mobile-apps"}},"content":"As the Software Industry changes rapidly one needs to update their skills. Whoever involves in the software development needs to write down there skills and analyze are the skills up to date. There are many ways to add or update your skills.\\n\\n## Operating Systems\\n\\nIf you work on the Windows OS at work try to use Linux/Ubuntu or Mac at home or vise-versa\\n\\n## Programming Languages\\n\\nThere are tons of freely available resources on internet to master any programming language try to learn new language. Explore where you can apply the new language. There will be always room to improve the existing project in order to remove the road block for that you may try new language as different language solves the problem in different approach. For example if you are a C++ developer its easy to master C# or Java\\n\\n## Front-end/UI Technologies\\n\\nCurrently there are many popular UI technologies like React, Angular etc. if you know one experiment on another to know best of both worlds\\n\\n## Attend Conferences\\n\\nHundred\u2019s of web/in-person conferences are conducted by technology companies. Spend your spare time to attend them, definitely you will get exposure on what\u2019s latest and it\'s a great opportunity to meet awesome technology pundits.\\n\\n## Read a Book\\n\\nSome people says reading \xa0books is a boring job. During our education we may read many books thinks that it\'s another additional book to read, who knows that may change you world :)\\n\\nKeep a target to complete one book ( Technical/Self Help ) in a month.\\n\\n## Experiment, Experiment\\n\\nWe might work on many tools and technologies every day - until you develop anything from scratch you may not understand nuts and bolts work together. So develop a habit of \xa0experimenting with sample applications from scratch.\\n\\n## Current\\n\\nKeep an eye on latest trending technologies like AI, ML, BOATS etc. \xa0\\n\\nFinally the more you know the valuable you would be at work or in society."},{"id":"/2017/08/20/progressive-web-app-pwa-next-generation-mobile-apps","metadata":{"permalink":"/blog/2017/08/20/progressive-web-app-pwa-next-generation-mobile-apps","source":"@site/blog/2017-08-20-progressive-web-app-pwa-next-generation-mobile-apps.md","title":"Progressive Web App (PWA)","description":"A Progressive Web App (PWA) is an web application which gives an App like experience on mobile devices. PWA are developed with web technologies. These apps need not be installed and can be just access on the mobile browser by adding a short cut to the Home screen using \u2018Add to Home Screen\u2019 browser option. PWA fills the gap between mobile websites and mobile apps.","date":"2017-08-20T00:00:00.000Z","formattedDate":"August 20, 2017","tags":[{"label":"Technology Evaluation","permalink":"/blog/tags/technology-evaluation"},{"label":"PWA","permalink":"/blog/tags/pwa"},{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":1.75,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Technology Evaluation","PWA","Ionic"]},"prevItem":{"title":"The more you know","permalink":"/blog/2017/08/25/the-more-you-know"},"nextItem":{"title":"Microsoft Bot in steps","permalink":"/blog/2017/08/11/microsoft-bot-in-steps"}},"content":"A Progressive Web App (PWA) is an web application which gives an App like experience on mobile devices. PWA are developed with web technologies. These apps need not be installed and can be just access on the mobile browser by adding a short cut to the Home screen using \u2018Add to Home Screen\u2019 browser option. PWA fills the gap between mobile websites and mobile apps.  \\n  \\nCurrently PWA are developed by many Software companies you can find the references from PWA Rocks [website](https://pwa.rocks/)  \\n\\n## Advantages of PWA\\n\\n- Native UX (Android/iOS/Windows) on the web which will be a natural app with great immersive user experience.\\n- Feels like an app, works like a website\\n- Responsive:Respond quickly to user interactions with smooth scrolling and nice animations.\xa0\\n- Improved performance, offline data \xa0support using service workers\\n- Capable of Push Notifications\\n- Share the app via URL, does not require installation.\\n- Quicker load times: Loads instantly and never offline indicators like dinosaur.\\n\\n  \\n## Technologies to develop PWA\\n\\nThere are different tools and technologies are existing in the market to develop PWA some of them are listed below. This article will use the Ionic 3 to develop the PWA.\\n\\n1. Ionic Framework\xa0\\n2. Using a Polymer template\\n3. React\\n\\n  \\n\\n## Develop PWA using Ionic Framework step by step\\n\\nIonic 3 uses Angular 4 and Typescript . Below are the steps to develop the PWA.\\n\\n  \\n\\n1. Open command prompt/terminal and create a ionic app  \\n `ionic start MyIonic3PWA sidemenu`\\n\\n  \\n2. Change the directory to MyIonic3PWA and add the browser as a platform\\n `ionic platform add browser`\\n  \\n3. To Launch the project  \\n `ionic run browser`\\n  \\n4. To add the Logo create a folder and copy the launch logo.png in the folder MyIonic3PWA `\\\\\\\\src\\\\\\\\assets\\\\\\\\imgs\\\\\\\\` It works for android  \\n  \\nFor iOS add the below code in index.html   \\n      \\n     \\n5. To add the app name open src/manifest.json and add app name  \\n  \\n\\"name\\": \\"MyIonic3PWA\\",  \\n\\"short\\\\_name\\": \\"MyIonic3PWA\\",  \\n  \\nand change the index.html  \\n  \\nMyIonic3PWA  \\n  \\n\\n## **Code Sample**\\n\\nSample code given below can be used for creating manifest and index files\\n\\n**manifest.json**  \\n  \\n**index.html**  \\n  \\n\\n## **Refrences**\\n\\n1. [Your First Progressive Web App](https://developers.google.com/web/fundamentals/getting-started/codelabs/your-first-pwapp/)\\n\\n2. [Ionic Framwork](http://ionicframework.com/)"},{"id":"/2017/08/11/microsoft-bot-in-steps","metadata":{"permalink":"/blog/2017/08/11/microsoft-bot-in-steps","source":"@site/blog/2017-08-11-microsoft-bot-in-steps.md","title":"Microsoft Bot in steps","description":"First thing first","date":"2017-08-11T00:00:00.000Z","formattedDate":"August 11, 2017","tags":[{"label":"Technology Evaluation","permalink":"/blog/tags/technology-evaluation"},{"label":"Machine Learning","permalink":"/blog/tags/machine-learning"}],"readingTime":0.575,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Technology Evaluation","Machine Learning"]},"prevItem":{"title":"Progressive Web App (PWA)","permalink":"/blog/2017/08/20/progressive-web-app-pwa-next-generation-mobile-apps"},"nextItem":{"title":"Ionic blogs","permalink":"/blog/2017/06/07/ionic-blogs"}},"content":"## First thing first\\n\\n**Steps**  \\n1\\\\. Install Visual Studio 2015 Update 2 or higher.  \\n  \\n2\\\\. Download the project template zip from [here](http://aka.ms/bf-bc-vstemplate)  \\nSave the file to %USERPROFILE%\\\\\\\\Documents\\\\\\\\Visual Studio 2015\\\\\\\\Templates\\\\\\\\ProjectTemplates\\\\\\\\Visual C#.  \\n  \\n3\\\\. Install the BotFrameworks which gives the Bot Emulator  \\n[here](https://emulator.botframework.com/)  \\n  \\n4\\\\. Build the project and launch on the browser  \\n  \\n5\\\\. Open emulator and add the your url http://localhost:3978/api/messages  \\nport number 3978 may vary based on the the endpoint launch and leave the MicrosoftAppId field and MicrosoftAppPassword field empty  \\n  \\n6\\\\. To check the bot is working  \\nIn emulator bottom Text Box enter a message say hello, this message will be echoed back to you, like below  \\nYou sent hello which was 5 characters  \\n  \\n**Reference:**  \\nMicrosoft [documentation](https://docs.botframework.com/en-us/csharp/builder/sdkreference/gettingstarted.html)"},{"id":"/2017/06/07/ionic-blogs","metadata":{"permalink":"/blog/2017/06/07/ionic-blogs","source":"@site/blog/2017-06-07-ionic-blogs.md","title":"Ionic blogs","description":"http://gonehybrid.com/","date":"2017-06-07T00:00:00.000Z","formattedDate":"June 7, 2017","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":0.055,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Ionic"]},"prevItem":{"title":"Microsoft Bot in steps","permalink":"/blog/2017/08/11/microsoft-bot-in-steps"},"nextItem":{"title":"Example: $on and $broadcast in angular","permalink":"/blog/2017/01/10/example-on-and-broadcast-in-angular"}},"content":"[http://gonehybrid.com/](http://gonehybrid.com/)\\n\\n[https://nagvbt.github.i0/](https://nagvbt.github.io)  \\n\\n[http://mcgivery.com/](http://mcgivery.com/)\\n\\n[http://www.joshmorony.com/](http://www.joshmorony.com/)\\n\\n[https://www.thepolyglotdeveloper.com/](https://www.thepolyglotdeveloper.com/)\\n\\n[http://www.gajotres.net/](http://www.gajotres.net/)\\n\\n[https://www.raymondcamden.com/tags/ionic/](https://www.raymondcamden.com/tags/ionic/)\\n\\n[http://mcgivery.com/100-ionic-framework-resources/](http://mcgivery.com/100-ionic-framework-resources/)\\n\\n[https://github.com/juarezpaf/ionic-adventures](https://github.com/juarezpaf/ionic-adventures)\\n\\nTemplates:\\n\\n[https://github.com/jdnichollsc/Ionic-Starter-Template](https://github.com/jdnichollsc/Ionic-Starter-Template)"},{"id":"/2017/01/10/example-on-and-broadcast-in-angular","metadata":{"permalink":"/blog/2017/01/10/example-on-and-broadcast-in-angular","source":"@site/blog/2017-01-10-example-on-and-broadcast-in-angular.md","title":"Example: $on and $broadcast in angular","description":"With out Arguments:","date":"2017-01-10T00:00:00.000Z","formattedDate":"January 10, 2017","tags":[{"label":"Angular","permalink":"/blog/tags/angular"}],"readingTime":0.345,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Example: $on and $broadcast in angular","tags":["Angular"]},"prevItem":{"title":"Ionic blogs","permalink":"/blog/2017/06/07/ionic-blogs"},"nextItem":{"title":"Basic Ionic1 CLI commands","permalink":"/blog/2016/12/08/basic-ionic1-cli-commands"}},"content":"## With out Arguments:\\n\\nTo $broadcast use the $rootScope:\\n\\n```js\\n$scope.startCamera = function() { $rootScope.$broadcast(\'camera-started\'); }\\n```\\n\\nTo receive, use the $scope of your controller:\\n\\n```js\\n$scope.$on(\'camera-started\', function(event, args) { // do something });\\n```\\n\\n## With Arguments:\\n\\nTo pass arguments when you $With out Arguments:\\n\\n```js\\n$rootScope.$broadcast(\'camera-started\', { any: {} }); To receive arguments :\\n\\n$scope.$on(\'camera-started\', function(event, args) { var anyArg = args.any;  // do something });\\n```"},{"id":"/2016/12/08/basic-ionic1-cli-commands","metadata":{"permalink":"/blog/2016/12/08/basic-ionic1-cli-commands","source":"@site/blog/2016-12-08-basic-ionic1-cli-commands.md","title":"Basic Ionic1 CLI commands","description":"1. To start a new application","date":"2016-12-08T00:00:00.000Z","formattedDate":"December 8, 2016","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":0.325,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Ionic"]},"prevItem":{"title":"Example: $on and $broadcast in angular","permalink":"/blog/2017/01/10/example-on-and-broadcast-in-angular"},"nextItem":{"title":"Ionic \u2013 AngularJS templates","permalink":"/blog/2016/07/06/ionic-angularjs-templates"}},"content":"1. To start a new application  \\n**_ionic start NagIonic sidemenu_**\\n\\n2. Navigate to the project folder NagIonic\\n\\n3. To Launch an app in browser  \\n**_Ionic serve \u2013lab_**\\n\\n4. Add platforms  \\n_ionic platform add ios_  \\n_ionic platform add android_  \\n_ionic platform add windows_\\n\\n5. Add icon and splash  \\nPlace\xa0icon.png\xa0(192X192 px),\xa0splash.png(  \\n2208\xd72208 px) in resources folder  \\n_ionic resources_\\n\\n6. To run app on device  \\n_ionic run android_"},{"id":"/2016/07/06/ionic-angularjs-templates","metadata":{"permalink":"/blog/2016/07/06/ionic-angularjs-templates","source":"@site/blog/2016-07-06-ionic-angularjs-templates.md","title":"Ionic \u2013 AngularJS templates","description":"The following code snippets demonstrates the format/template which can be used in Ionic or in Angularjs Applications","date":"2016-07-06T00:00:00.000Z","formattedDate":"July 6, 2016","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"},{"label":"Angular","permalink":"/blog/tags/angular"}],"readingTime":0.965,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Ionic","Angular"]},"prevItem":{"title":"Basic Ionic1 CLI commands","permalink":"/blog/2016/12/08/basic-ionic1-cli-commands"},"nextItem":{"title":"Ionic 2 Tutorial","permalink":"/blog/2015/10/15/ionic-2-tutorial"}},"content":"The following code snippets demonstrates the format/template which can be used in Ionic or in Angularjs Applications\\r\\n\\r\\n\\r\\n```js\\r\\n/**************************\\r\\n * Controller \\r\\n **************************/\\r\\n\\r\\n(function () {\\r\\n  \'use strict\';\\r\\n  var injectParams = [ /* \'dependency1\' */];\\r\\n \\r\\n  function SampleCtrl( /* dependency1 */) {\\r\\n    var SampleVm = this;\\r\\n \\r\\n    //Bindable Properties and functions\\r\\n    SampleVm.dummyProperty = \'\';\\r\\n    SampleVm.dummyBindableFunc = dummyBindableFunc;\\r\\n \\r\\n    //Functions\\r\\n    function dummyBindableFunc() { \\r\\n    }\\r\\n \\r\\n    function myNormalFunc() { \\r\\n    } \\r\\n  };\\r\\n \\r\\n  SampleCtrl.$inject = injectParams;\\r\\n  angular.module(\'app.myModule\').controller(\'SampleCtrl\', SampleCtrl);\\r\\n})();\\r\\n\\r\\n\\r\\n/**************************\\r\\n * Factory \\r\\n **************************/\\r\\n(function () {\\r\\n  \'use strict\';\\r\\n  var injectParams = [ /* \'dependency1\' */];\\r\\n \\r\\n  function sampleFactory( /* dependency1 */) {\\r\\n    var exports = {\\r\\n      getData: getData\\r\\n    };\\r\\n \\r\\n    return exports;\\r\\n    ////////////////\\r\\n \\r\\n    function getData() { \\r\\n    } \\r\\n  }\\r\\n \\r\\n  sampleFactory.$inject = injectParams;\\r\\n  angular.module(\'app.myModule\').factory(\'sampleFactory\', sampleFactory);\\r\\n})();\\r\\n\\r\\n/**************************\\r\\n * Filter \\r\\n **************************/\\r\\n(function () {\\r\\n  \'use strict\';\\r\\n \\r\\n  function sampleFilter() {\\r\\n \\r\\n    return sampleFilterFunc;\\r\\n    ////////////////\\r\\n \\r\\n    function sampleFilterFunc(parameters) {\\r\\n      return parameters;\\r\\n    } \\r\\n  }\\r\\n \\r\\n  angular.module(\'app.myModule\').filter(\'sampleFilter\', sampleFilter);\\r\\n})();\\r\\n\\r\\n/**************************\\r\\n * Directive \\r\\n **************************/\\r\\n(function () {\\r\\n  \'use strict\';\\r\\n  var injectParams = [ /* \'dependency1\' */];\\r\\n \\r\\n  function customDirective( /* dependency1 */) {\\r\\n \\r\\n    var directive = {\\r\\n      link: link,\\r\\n      restrict: \'EA\',\\r\\n      replace: true,\\r\\n      templateUrl: \'app/myDirective/myDirective.html\',\\r\\n      controller: \'customController\',\\r\\n      controllerAs: \'custom\'\\r\\n    };\\r\\n    return directive;\\r\\n \\r\\n    function link(scope, element, attrs) {\\r\\n    }\\r\\n  };\\r\\n \\r\\n  customDirective.$inject = injectParams;\\r\\n  angular.module(\'app.myModule\').directive(\'customDirective\', customDirective);\\r\\n})();\\r\\n```"},{"id":"/2015/10/15/ionic-2-tutorial","metadata":{"permalink":"/blog/2015/10/15/ionic-2-tutorial","source":"@site/blog/2015-10-15-ionic-2-tutorial.md","title":"Ionic 2 Tutorial","description":"Introduction","date":"2015-10-15T00:00:00.000Z","formattedDate":"October 15, 2015","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"}],"readingTime":2.41,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Ionic 2 Tutorial","tags":["Ionic"]},"prevItem":{"title":"Ionic \u2013 AngularJS templates","permalink":"/blog/2016/07/06/ionic-angularjs-templates"},"nextItem":{"title":"Amaing Scientific Reasons Behind Indian Tradations","permalink":"/blog/2015/06/20/amazing-scientific-reasons-behind-indian-traditions"}},"content":"## Introduction\\n\\n[Ionic 2](http://ionicframework.com/docs/v2/) is an open source cross platform application development [framework](http://ionicframework.com/). For the below questions your answer is YES and you can use the Ionic 2 for your app development.  \\n\\n1. I want to develop Apps for Android, iOS, Windows but don\'t know there respective technologies like Java for Android apps, objective-C/Swift for iOS apps, C# for windows apps ?\\n2. Do you know only web front-end technologies like HTML/CSS/Javascript \xa0and \xa0likes to develop mobile/tablet app?\\n3. We want to develop the app with less effort and faster ?\\n\\nIonic 2 apps can be developed with Angular 2 and preferably with \xa0typescript.  \\n\\n## \xa0Development environment setup\\n\\nTo install the development environment perform the below steps  \\n\\n1. Install Node.js 6 or greater \xa0[Download the installer](https://nodejs.org/en/)\\n2. Open cmd and use the following commands to\xa0install the Ionic CLI and Cordova  \\n            **_npm install -g ionic_**  \\n            **_npm install -g cordova_**\\n\\n## Create a sample first app\\n\\nTo create first sample app, Open the cmd window and use the below command  \\n_**ionic start sampleApp --v2**_\\n\\n1. To run your app, `cd` into the _**sampleApp**_ directory\\n\\n2. To run on browser \xa0**`ionic serve`**\\n\\n3. To run on ios\xa0**`ionic run ios`**\\n\\n4. To run on Android\xa0**`ionic run\xa0android`**\\n\\n5. To know the environment details use **`ionic\xa0info`**  \\n\\nYour system information:  \\n```  \\nCordova CLI: 6.1.1  \\nGulp version: CLI version 3.9.1  \\nGulp local: Local version 3.9.1  \\nIonic Framework Version: 2.0.0-rc.1  \\nIonic CLI Version: 2.1.0  \\nIonic App Lib Version: 2.1.0-beta.1  \\nOS: Windows 8.1  \\nNode Version: v6.2.1\\n````\\n\\n## Generate new Page and Service\\n\\n1. To create a **page** in the sampleApp \xa0use\\n\\n```\\nionic g page [pageName]\\nionic g\xa0page demoPage\\n```\\n\\nCLI creates the following three files under \'sampleApp/src/pages/demo-page\'\\n\\n- demo-page.html -> the view code\\n- demo-page.ts -> component/class code similar to controller\\n- demo-page.scss -> your style/sass\xa0code\\n\\n2. To create a **service**, replace `page` with `provider`:  \\n\\n```\\nionic g provider [providerName]\\nionic g provider demoData\\n```\\n\\nCLI creates the demo-data.ts under \'sampleApp/src/providers/\' folder this file serves likes\xa0service/factory.  \\n\\n3. Add DemoPage module in \'sampleApp\\\\\\\\src\\\\\\\\app\\\\\\\\app.module.ts\'  \\n\\n```js\\nimport { NgModule } from \'@angular/core\';  \\nimport { IonicApp, IonicModule } from \'ionic-angular\';  \\nimport { MyApp } from \'./app.component\';  \\nimport { AboutPage } from \'../pages/about/about\';  \\nimport { ContactPage } from \'../pages/contact/contact\';  \\nimport { HomePage } from \'../pages/home/home\';  \\nimport { TabsPage } from \'../pages/tabs/tabs\';  \\nimport { DemoPage } from \'../pages/demo-page/demo-page\'; //import DemoPage   \\n  \\n@NgModule({  \\n  declarations: [ \\n    MyApp,  \\n    AboutPage,  \\n    ContactPage,  \\n    HomePage,  \\n    TabsPage,  \\n    DemoPage //Add DemoPage  \\n  ],  \\n  imports: [ \\n    IonicModule.forRoot(MyApp)  \\n  ],  \\n  bootstrap: [IonicApp],  \\n  entryComponents: [ \\n    MyApp,  \\n    AboutPage,  \\n    ContactPage,  \\n    HomePage,  \\n    TabsPage,  \\n    DemoPage //Add DemoPage  \\n  ],  \\n  providers: []  \\n})  \\nexport class AppModule {}  \\n```\\n\\n## Navigate to DemoPage\\n\\n1. Add button on Home.html\\n    \\n    `Show DemoPage`\\n    \\n2. Add the code to navigate in the HomePage class\\n    ```js\\n     goToDemoPage(){  \\n     this.navCtrl.push(DemoPage);  \\n     }\\n    ```\\n    \\n3. Launch the app and click on the \'SHOW DEMOPAGE\' Button you will be navigated to the DemoPage\\n\\nBingo !!! you created a new page and plugged in app and implemented the navigation."},{"id":"/2015/06/20/amazing-scientific-reasons-behind-indian-traditions","metadata":{"permalink":"/blog/2015/06/20/amazing-scientific-reasons-behind-indian-traditions","source":"@site/blog/2015-06-20-amazing-scientific-reasons-behind-indian-traditions.md","title":"Amaing Scientific Reasons Behind Indian Tradations","description":"1. Throwing Coins into a River:","date":"2015-06-20T00:00:00.000Z","formattedDate":"June 20, 2015","tags":[{"label":"Technology","permalink":"/blog/tags/technology"}],"readingTime":11.47,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Technology"]},"prevItem":{"title":"Ionic 2 Tutorial","permalink":"/blog/2015/10/15/ionic-2-tutorial"},"nextItem":{"title":"How to install OpenGrok on Windows OS","permalink":"/blog/2015/06/09/how-to-install-opengrok-on-windows-os"}},"content":"1. Throwing Coins into a River:\\n\\nThe general reasoning given for this act is that it brings Good Luck. However, scientifically speaking, in the ancient times, most of the currency used was made of copper unlike the stainless steel coins of today. Copper is a vital metal very useful to the human body. Throwing coins in the river was one way our fore-fathers ensured we intake sufficient copper as part of the water as rivers were the only source of drinking water. Making it a custom ensured that all of us follow the practice.\\n\\n2. Joining Both Palms together to Greet:\\n\\nIn Hindu culture, people greet each other by joining their palms \u2013 termed as \u201cNamaskar.\u201d The general reason behind this tradition is that greeting by joining both the palms means respect. However, scientifically speaking, joining both hands ensures joining the tips of all the fingers together; which are denoted to the pressure points of eyes, ears, and mind. Pressing them together is said to activate the pressure points which helps us remember that person for a long time. And, no germs since we don\u2019t make any physical contact!\\n\\n3. Why do Indian Women wear Toe Ring:\\n\\nWearing toe rings is not just the significance of married women but there is science behind it. Normally toe rings are worn on the second toe. A particular nerve from the second toe connects the uterus and passes to heart. Wearing toe ring on this finger strengthens the uterus. It will keep it healthy by regulating the blood flow to it and menstrual cycle will be regularized. As Silver is a good conductor, it also absorbs polar energies from the earth and passes it to the body.\\n\\n4. Applying Tilak on the Forehead:\\n\\nOn the forehead, between the two eyebrows, is a spot that is considered as a major nerve point in human body since ancient times. The Tilak is believed to prevent the loss of \u201cenergy\u201d, the red \u2018kumkum\u2019 between the eyebrows is said to retain energy in the human body and control the various levels of concentration. While applying kumkum the points on the mid-brow region and Adnya-chakra are automatically pressed. This also facilitates the blood supply to the face muscles.\\n\\n5. Why do Temples have Bells:\\n\\nPeople who are visiting the temple should and will Ring the bell before entering the inner sanctum (Garbhagudi or Garbha Gruha or womb-chamber) where the main idol is placed. According to Agama Sastra, the bell is used to give sound for keeping evil forces away and the ring of the bell is pleasant to God. However, the scientific reason behind bells is that their ring clears our mind and helps us stay sharp and keep our full concentration on devotional purpose. These bells are made in such a way that when they produce a sound it creates a unity in the Left and Right parts of our brains. The moment we ring the bell, it produces a sharp and enduring sound which lasts for minimum of 7 seconds in echo mode. The duration of echo is good enough to activate all the seven healing centres in our body. This results in emptying our brain from all negative thoughts.\\n\\n6. Why do we have Navratras:\\n\\nOur living style has drastically changed if we compare it to the society hundreds & thousands of years ago. The traditions which we follow in present are not establishments of today but of the past. Ever thought, why do we have Navratras twice a year unlike other festivals like Deepawali or Holi? Well, both these months are the months of changing seasons and the eating habits of both the seasons are quite different from each other. Navratras give enough time to the body to adjust and prepare itself for to the changing season. These nine days were marked as a period when people would clean their body system by keeping fasts by avoiding excessive salt and sugar, meditate, gain a lot of positive energy, gain a lot of self confidence & increase the self determination power (fasts are a medium to improve our will power and self determination) and finally get ready for the challenges of the changed season.\\n\\n7. Why do we worship Tulsi Plant:\\n\\nHindu religion has bestowed \u2018Tulsi\u2019, with the status of mother. Also known as \u2018Sacred or Holy Basil\u2019, Tulsi, has been recognized as a religious and spiritual devout in many parts of the world. The vedic sages knew the benefits of Tulsi and that is why they personified it as a Goddess and gave a clear message to the entire community that it needs to be taken care of by the people, literate or illiterate. We try to protect it because it is like Sanjeevani for the mankind. Tulsi has great medicinal properties. It is a remarkable antibiotic. Taking Tulsi everyday in tea or otherwise increases immunity and help the drinker prevent diseases, stabilize his or her health condition, balance his or her body system and most important of all, prolong his or her life. Keeping Tulsi plant at home prevents insects and mosquitoes from entering the house. It is said that snakes do not dare to go near a Tulsi plant. Maybe that is why ancient people would grow lots of Tulsi near their houses.\\n\\n8. Why do we worship Peepal Tree:\\n\\n\u2018Peepal\u2019 tree is almost useless for an ordinary person, except for its shadow. \u2018Peepal\u2019 does not a have a delicious fruit, its wood is not strong enough for any purpose then why should a common villager or person worship it or even care for it? Our ancestors knew that \u2018Peepal\u2019 is one of the very few trees (or probably the only tree) which produces oxygen even at night. So in order to save this tree because of its unique property they related it to God/religion.\\n\\n9. Start with Spice & End with Sweet:\\n\\nOur ancestors have stressed on the fact that our meals should be started off with something spicy and sweet dishes should be taken towards the end. The significance of this eating practice is that while spicy things activate the digestive juices and acids and ensure that the digestion process goes on smoothly and efficiently, sweets or carbohydrates pulls down the digestive process. Hence, sweets were always recommended to be taken as a last item.\\n\\n10. Choti on the Male Head:\\n\\nSushrut rishi, the foremost surgeon of Ayurveda, describes the master sensitive spot on the head as Adhipati Marma, where there is a nexus of all nerves. The shikha protects this spot. Below, in the brain, occurs the Brahmarandhra, where the sushumn\xe3 (nerve) arrives from the lower part of the body. In Yog, Brahmarandhra is the highest, seventh chakra, with the thousand-petalled lotus. It is the centre of wisdom. The knotted shikh\xe3 helps boost this centre and conserve its subtle energy known as ojas.\\n\\n11. Applying Mehendi/Henna on the Hand:\\n\\nBesides lending color to the hands, mehndi is a very powerful medicinal herb. Weddings are stressful, and often, the stress causes headaches and fevers. As the wedding day approaches, the excitement mixed with nervous anticipation can take its toll on the bride and groom. Application of mehndi can prevent too much stress because it cools the body and keeps the nerves from becoming tense. This is the reason why mehndi is applied on the hands and feet, which house nerve endings in the body.\\n\\n12. Celebration & Cleaning During Diwali:\\n\\nDiwali usually falls in October or November which marks the start of winter season and end of rainy season. Rainy season wasn\u2019t a good time for everyone back then; many homes needed repair and renovation after a heavy fall. That is why time before diwali was considered the period during which everyone can indulge in cleaning and beautification of their home. And also take out their winter clothes and pack the summer ones.\\n\\n13. Sitting on the Floor & Eating:\\n\\nThis tradition is not just about sitting on floor and eating, it is regarding sitting in the \u201cSukhasan\u201d position and then eating. Sukhasan is the position we normally use for Yoga asanas. Sitting in this position while eating helps in improving digestion as the circulatory system can focus solely upon digestion and not on our legs dangling from a chair or supporting us while we are standing.\\n\\n14. Why not to sleep with Your Head towards North:\\n\\nMyth is that it invites ghost or death but science says that it is because human body has its own magnetic field (Also known as hearts magnetic field, because the flow of blood) and Earth is a giant magnet. When we sleep with head towards north, our body\u2019s magnetic field become completely asymmetrical to the Earth\u2019s Magnetic field. That cause problems related to blood pressure and our heart needs to work harder in order to overcome this asymmetry of Magnetic fields. Apart from this another reason is that Our body have significant amount of iron in our blood. When we sleep in this position, iron from the whole body starts to congregate in brain. This can cause headache, Alzheimer\u2019s Disease, Cognitive Decline, Parkinson disease and brain degeneration.\\n\\n15. Surya Namaskar:\\n\\nHindus have a tradition of paying regards to Sun God early in the morning by their water offering ritual. It was mainly because looking at Sun rays through water or directly at that time of the day is good for eyes and also by waking up to follow this routine, we become prone to a morning lifestyle and mornings are proven to be the most effective part of the day.\\n\\n16. Ear Piercing in Children:\\n\\nPiercing the ears has a great importance in Indian ethos. Indian physicians and philosophers believe that piercing the ears helps in the development of intellect, power of thinking and decision making faculties. Talkativeness fritters away life energy. Ear piercing helps in speech-restraint. It helps to reduce impertinent behaviour and the ear-channels become free from disorders. This idea appeals to the Western world as well, and so they are getting their ears pierced to wear fancy earrings as a mark of fashion.\\n\\n17. Application of Sindoor or Vermillion:\\n\\nIt is interesting to note that that the application of sindoor by married women carries a physiological significance. This is so because Sindoor is prepared by mixing turmeric-lime and the metal mercury. Due to its intrinsic properties, mercury, besides controlling blood pressure also activates sexual drive. This also explains why Sindoor is prohibited for the widows. For best results, Sindoor should be applied right upto the pituitary gland where all our feelings are centered. Mercury is also known for removing stress and strain.\\n\\n18. The scientific explanation of ouching Feet(charan sparsh):\\n\\nUsually, the person of whose feet you are touching is either old or pious. When they accept your respect which came from your reduced ego (and is called your shraddha) their hearts emit positive thoughts and energy (which is called their karuna) which reaches you through their hands and toes. In essence, the completed circuit enables flow of energy and increases cosmic energy, switching on a quick connect between two minds and hearts. To an extent, the same is achieved through handshakes and hugs. The nerves that start from our brain spread across all your body. These nerves or wires end in the fingertips of your hand and feet. When you join the fingertips of your hand to those of their opposite feet, a circuit is immediately formed and the energies of two bodies are connected. Your fingers and palms become the \u2018receptor\u2019 of energy and the feet of other person become the \u2018giver\u2019 of energy.\\n\\n19. Why do we Fast:\\n\\nThe underlying principle behind fasting is to be found in Ayurveda. This ancient Indian medical system sees the basic cause of many diseases as the accumulation of toxic materials in the digestive system. Regular cleansing of toxic materials keeps one healthy. By fasting, the digestive organs get rest and all body mechanisms are cleansed and corrected. A complete fast is good for heath, and the occasional intake of warm lemon juice during the period of fasting prevents the flatulence. Since the human body, as explained by Ayurveda, is composed of 80% liquid and 20% solid, like the earth, the gravitational force of the moon affects the fluid contents of the body. It causes emotional imbalances in the body, making some people tense, irritable and violent. Fasting acts as antidote, for it lowers the acid content in the body which helps people to retain their sanity. Research suggests there are major health benefits to caloric restriction like reduced risks of cancer, cardiovascular diseases, diabetes, immune disorders etc.\\n\\n20. Why Idol Worship:\\n\\nHinduism propagates idol worship more than any other religion. Researchers say that this was initiated for the purpose of increasing concentration during prayers. According to psychiatrists, a man will shape his thoughts as per what he sees. If you have 3 different objects in front of you, your thinking will change according to the object you are viewing. Similarly, in ancient India, idol worship was established so that when people view idols it is easy for them to concentrate to gain spiritual energy and meditate without mental diversion.\\n\\n21. Why do Indian Women wear Bangles:\\n\\nNormally the wrist portion is in constant activation on any human. Also the pulse beat in this portion is mostly checked for all sorts of ailments. The Bangles used by women are normally in the wrist part of ones hand and its constant friction increases the blood circulation level. Further more the electricity passing out through outer skin is again reverted to one\u2019s own body because of the ring shaped bangles, which has no ends to pass the energy outside but to send it back to the body."},{"id":"/2015/06/09/how-to-install-opengrok-on-windows-os","metadata":{"permalink":"/blog/2015/06/09/how-to-install-opengrok-on-windows-os","source":"@site/blog/2015-06-09-how-to-install-opengrok-on-windows-os.md","title":"How to install OpenGrok on Windows OS","description":"OpenGrok is a fast and usable source code search and cross reference engine. It helps you search, cross-reference and navigate your source code.","date":"2015-06-09T00:00:00.000Z","formattedDate":"June 9, 2015","tags":[],"readingTime":1.06,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"How to install OpenGrok on Windows OS","date":"2015-06-09","categories":["tools-technology-news"]},"prevItem":{"title":"Amaing Scientific Reasons Behind Indian Tradations","permalink":"/blog/2015/06/20/amazing-scientific-reasons-behind-indian-traditions"},"nextItem":{"title":"ASP.Net State Management: An overview","permalink":"/blog/2015/05/20/asp-net-state-management-an-overview"}},"content":"OpenGrok is a fast and usable source code search and cross reference engine. It helps you search, cross-reference and navigate your source code.\\n\\n## Requirements:\\n\\n1. Create a folder \'C:OpenGrok\'\\n    \\n2. Install\xa0[JDK](http://www.oracle.com/technetwork/java/) 1.7 or higher\\n    \\n    - Add \'JRE\\\\_HOME\' environmental variable with value for JRE (eg:\xa0C:Program Files (x86)Javajre1.8.0\\\\_40)\\n    - Add Java.exe \xa0path \xa0(eg:\xa0C:Program Files (x86)Javajre1.8.0\\\\_40bin) in\xa0environmental PATH variable and restart computer\\n\\n3. Download a\xa0[Ctags](http://ctags.sourceforge.net/) from\xa0[Ctags Windows Binary](http://ctags.sourceforge.net/)\xa0unzip and place it in\xa0C:OpenGrokCtags58 folder\\n    \\n\\n4.\xa0Download and install [Tomcat](http://tomcat.apache.org/download-70.cgi). To run Tomcat as a windows service open command prompt and navigate to \'TOMCAT\\\\_INSTALLbin\' and execute \'service.bat install\' command\\n\\n## OpenGork Setup:\\n\\n1. Download and unzip Opengork \xa0[opengrok-0.12.1.tar.gz](http://java.net/projects/opengrok/downloads/download/opengrok-0.12.1.tar.gz) - Binary distribution to\xa0 \'C:OpenGrok\'\\n\\n2.\xa0Extract the \\"source.war\\" file in the \\"C:OpenGrokopengrok-0.12.1lib\\"\\n\\n3.\xa0Edit the WEB-INFweb.xml to include\\n\\n- Path to configuration.xml that is generated \xa0(CONFIGURATION\xa0)\\n- Location to the source being indexed. (SRC\\\\_ROOT)\\n- Location to the \\"Ctag\\" generated grokData \xa0(DATA\\\\_ROOT)\\n\\n[https://gist.github.com/nagvbt/8378786674100270279c](https://gist.github.com/nagvbt/8378786674100270279c)\\n\\n4.\xa0Copy the the extracted source.war with the modified web.xml to the tomcat webapps folder.\\n\\n5. Index the source and generate the configuration.xml file using the below command\\n    \\n    > java -jar C:OpenGrokopengrok-0.12.1libopengrok.jar -W C:OpenGrokopengrok-0.12.1configuration.xml -c C:OpenGrokctags58ctags.exe -P -S -v -s D:Dev -d C:OpenGrokgrokdata\\n    \\n6. Launch Tomcat after the indexing in done. Open [http://localhost:8080/source](http://localhost:8080/source)\\n    \\n7. Repeat step-5 tp re-index if you need to add new projects/pick new source etc."},{"id":"/2015/05/20/asp-net-state-management-an-overview","metadata":{"permalink":"/blog/2015/05/20/asp-net-state-management-an-overview","source":"@site/blog/2015-05-20-asp-net-state-management-an-overview.md","title":"ASP.Net State Management: An overview","description":"All the web applications uses HTTP protocol. By nature HTTP is a stateless protocol so after every web request, the client disconnects from server and the ASP.NET engine discards the objects that were created for the page. This will avoid running out of server memory.","date":"2015-05-20T00:00:00.000Z","formattedDate":"May 20, 2015","tags":[{"label":"ASP.Net","permalink":"/blog/tags/asp-net"}],"readingTime":1.09,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["ASP.Net"]},"prevItem":{"title":"How to install OpenGrok on Windows OS","permalink":"/blog/2015/06/09/how-to-install-opengrok-on-windows-os"},"nextItem":{"title":"How to make Visual Studio Run Faster","permalink":"/blog/2015/03/10/how-to-make-visual-studio-run-faster"}},"content":"All the web applications uses HTTP protocol. By nature HTTP is a stateless protocol so after every web request, the client disconnects from server and the ASP.NET engine discards the objects that were created for the page. This will avoid running out of server memory.\\n\\n### Levels of state management\\n\\n1. Control level: In ASP.NET, by default controls provide state management automatically.\\n2. Variable or object level: In ASP.NET, member variables at page level are stateless and thus we need to maintain state explicitly.\\n3. Single or multiple page level:\xa0State management at single as well as multiple page level i.e., managing state between page requests.\\n4. User level: State should be preserved as long as a user is running the application.\\n5. Application level: State available for complete application irrespective of the user, i.e., should be available to all users.\\n6. Application to application level: State management between or among two or more applications.\\n\\n**State Management techniques**\\n\\nState Management techniques are based on client side and server side. Their functionality differs depending on the change in state, so here is the hierarchy:\\n\\n**Client-side | Techniques**\\n\\nClient-Side State Management techniques are:\\n\\n- View State\\n- Hidden field\\n- Cookies\\n- Control State\\n- Query Strings\\n\\n**Server-side | Technique**\\n\\nServer-Side State Management techniques are:\\n\\n- Session State\\n- Application State"},{"id":"/2015/03/10/how-to-make-visual-studio-run-faster","metadata":{"permalink":"/blog/2015/03/10/how-to-make-visual-studio-run-faster","source":"@site/blog/2015-03-10-how-to-make-visual-studio-run-faster.md","title":"How to make Visual Studio Run Faster","description":"1. Make sure the latest service pack for Visual Studio is installed.","date":"2015-03-10T00:00:00.000Z","formattedDate":"March 10, 2015","tags":[{"label":"Tools","permalink":"/blog/tags/tools"}],"readingTime":0.98,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Tools"]},"prevItem":{"title":"ASP.Net State Management: An overview","permalink":"/blog/2015/05/20/asp-net-state-management-an-overview"},"nextItem":{"title":"How to avoid Memory\xa0Leaks in C++, VC++\\"","permalink":"/blog/2014/10/17/how-to-avoid-memory-leaks-in-c-vc"}},"content":"1. Make sure the latest service pack for Visual Studio is installed.\\n2. Disable Navigation Bar \u2013 Go to Tools\xa0>\xa0Options\xa0>\xa0Text Editor\xa0>\xa0C# or All Languages and uncheck **_Navigation bar_**.\\n3. Turn off animations \u2013 Go to Tools\xa0>\xa0Options\xa0>\xa0Environment and uncheck\xa0**_Animate environment tools_.**\\n4. Turn off Track Active Item \u2013 This will turn off jumping in the explorer whenever you select different files in different projects. Go to Tools\xa0>\xa0Options\xa0>\xa0Projects and Solutions and uncheck _**Track Active Item**_ in Solution Explorer. This will ensure that if you are moving across files in different projects, the left pane will still be steady instead of jumping around.\\n5. Turn off Track Changes \u2013 Go to Tools\xa0>\xa0Options\xa0>\xa0Text Editor and uncheck **_Track changes_**. This will reduce overhead and speeds up IDE response.\\n6. Turn off HTML Validation \u2013 Go to Tools\xa0>\xa0Options\xa0>\xa0Text Editor\xa0>\xa0HTML\xa0>\xa0Validation and uncheck **_Show errors_**.\\n7. Turn off Start Page \u2013 Go to Tools\xa0> Options\xa0> Environment\xa0> Startup and select **_Load last loaded solution_** from the _At **Startup**_ dropdown. This simply makes Visual Studio load faster when opening the application.\\n\\n\\n***NOTE:***\\n\\nAbove settings have been used for Visual Studio 2005 specifically but should still be of benefit for earlier and later versions of Visual Studio."},{"id":"/2014/10/17/how-to-avoid-memory-leaks-in-c-vc","metadata":{"permalink":"/blog/2014/10/17/how-to-avoid-memory-leaks-in-c-vc","source":"@site/blog/2014-10-17-how-to-avoid-memory-leaks-in-c-vc.md","title":"How to avoid Memory\xa0Leaks in C++, VC++\\"","description":"Contents","date":"2014-10-17T00:00:00.000Z","formattedDate":"October 17, 2014","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"},{"label":"C++","permalink":"/blog/tags/c"}],"readingTime":3.005,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC","C++"]},"prevItem":{"title":"How to make Visual Studio Run Faster","permalink":"/blog/2015/03/10/how-to-make-visual-studio-run-faster"},"nextItem":{"title":"How to Learn Windows Phone 8.1 apps development","permalink":"/blog/2014/06/12/how-learn-windows-phone-8-1-apps-development"}},"content":"**Contents**\\n\\n1. Introduction\\n2. How to find memory leak\\n3. Memory Leak and how to avoid it\\n\\nUpdated on : _**17-Oct-2014**_\\n\\n## **1. Introduction**\\n\\nThe failure to properly deallocate memory that was previously allocated is known as Memory Leak. The consequences of memory leaks is that the programs that leak large amounts of memory, or leak progressively, may display symptoms ranging from poor (and gradually decreasing) performance to running out of memory completely. Worse, a leaking program may use up so much memory that it causes another program to fail, leaving the user with no clue to where the problem truly lies. In addition, even harmless memory leaks may be symptomatic of other problems.\\n\\n## **2. How to Find Memory Leak**\\n\\nUse third-party tools like DevPartner or use the following steps to find the memory leaks\\n\\n- Compile the project in \\"Debug\\" Mode.\\n- Declare the objects **CMemoryState msOld, msNew, msDif;**\\n- Check the memory state at one point. **msOld.Checkpoint();** ://code ://code\\n- Check the memory state at onother point. **msNew.Checkpoint();**\\n- See for Difference **msDif.Difference( msOld, msNew );**\\n- Display the Leaked blocks in Debug window \xa0**msDif.DumpStatistics();**\\n\\n## **3. Memory Leak and How to avoid it**\\n\\n**a. Wrong usage of new/delete.**\\n\\n```cpp \\nint* intArr; \\nintArr = new int[500]; \\ndelete intArr; \\n```\\n\\nUse\xa0 `delete[]intArr;` instead of delete\xa0intArr as `delete intArr` is equal to deleting `intArr[0];`\\n\\n **b. Improper deletion of Array of Pointers**\\n\\n```cpp \\nintrowNo = 3; \\nintcolsNo = 3; \\nint *array = new int[rowNo];\\n\\nfor(inti=0; i < rowNo; i++) {\\n   array[i] = new int[i+1]; \\n}\\n\\ndelete[] array; \\n```\\n\\nThe cause of memory leak is that the \'array\' is an array of pointers, with each of it\'s elements pointing to a separate memory block, so it is necessary free these blocks before freeing the array that holds the pointers.\\n\\n```cpp \\nfor(int i=0; i < rowNo; i++) \\n{\\n   delete[] array[i];\\n} \\n    \\ndelete [] array; \\n```\\n\\n**c. Resource Handles: GDI Objects- CBrush, CPen, CFont, CBitmap, CPallete, CRgn and respective handles**\\n\\n```cpp \\nCBrush myBr, *pOldBr; \\nmyBr.CreateSolidBrush(RGB(0, 255, 0)); \\npOldBr = pDC->SelectObject(&myBr); \\npDC->SelectObject(& myBr );\\npDC->SelectObject(pOldBrush);\\n```\\n\\nFor more details Check:[](http://msdn.microsoft.com/en-us/library/windows/desktop/ms724291(v=vs.85).aspx)[http://msdn.microsoft.com/en-us/library/windows/desktop/ms724291(v=vs.85).aspx](http://msdn.microsoft.com/en-us/library/windows/desktop/ms724291(v=vs.85).aspx)\\n\\nThe DeleteObject method deletes the GDI object by freeing all system storage associated with it. The storage associated with the CGdiObject object is not affected by this call. An application should not call DeleteObject on a CGdiObject object that is currently selected into a device context. Use myBr.DeleteObject(); after finishing using myBr (Cbrush) object\xa0For handles pass handle of the DeleteObject function DeleteObject(hPen);\\n\\n**d. String conversions CString to LPTSTR**\\n\\n```cpp \\nCString sName; \\nsName= _T(\\"Hello\\"); \\nint lenName = sName.GetLength();\\nLPTSTR lpstrg = sName.GetBuffer(lenName); \\n\\nsName.ReleaseBuffer(); \\nCstring to BSTR CString csStr = \\"Hello\\"; \\nBSTR bStr = csStr.AllocSysString(); \\n \\nSysFreeString(bStr); //finished using the BSTR \\n```\\n\\nUse ReleaseBuffer() when ever we create a buffer. Use SysFreeString() when ever we use AllocSysString() which allocates a new string of the type BSTR.\\n\\n**e. Improper deletion of pointer objects in a CList**\\n\\n```cpp\\nCList<CMyData, CMyData> ptList;\\nCList<CMyData, CMyData> ptList; \\n ptList.RomoveAll(); //Improper deletion of pointer objects in a CArray CArray<CMyData, CMyData> ptArr;\\n ptArr.RemoveAll(); \\n```\\n\\nProper deletion of pointer objects in a CList\\n\\n```cpp \\nCList<CMyData, CMyData> ptList;\\nPOSITION pos = ptList.GetHeadPosition();\\n\\nwhile(pos!=NULL) { \\n  delete ptList.GetNext(pos); \\n  }\\n\\nPtList.RomoveAll();\\n\\n// Proper deletion of pointer objects in a CArray CArray<CMyData_, CMyData_\\\\> ptArr; : : int i = 0;\\n\\nwhile(i<ptArr.GetSize()) { \\n  delete ptArr.GetAt(i++); \\n  }\\n\\nptArr.RemoveAll(); \\n```\\n\\n**f. Opening and proper closing of file and databases**\\n\\n```cpp \\nCFile file; \\nfile.Open(szFilePath, CFile::modeCreate | CFile::modeWrite, 0); \\nfile.Write(chFile, chFileSize); \\nfile.Close(); \\n```\\n\\n**e. Usage of Static Arrays**\\n\\n```cpp \\nint Sample[500]; \\n```\\n\\nNever use static arrays if the array is dynamically growing. Instead of using static arrays use CArray or OCArray Example:\\n\\n```cpp\\n CArray<int, int> Sample; \\n ```"},{"id":"/2014/06/12/how-learn-windows-phone-8-1-apps-development","metadata":{"permalink":"/blog/2014/06/12/how-learn-windows-phone-8-1-apps-development","source":"@site/blog/2014-06-12-how-learn-windows-phone-8-1-apps-development.md","title":"How to Learn Windows Phone 8.1 apps development","description":"Vedios","date":"2014-06-12T00:00:00.000Z","formattedDate":"June 12, 2014","tags":[{"label":"Windows Phone","permalink":"/blog/tags/windows-phone"}],"readingTime":0.43,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Windows Phone"]},"prevItem":{"title":"How to avoid Memory\xa0Leaks in C++, VC++\\"","permalink":"/blog/2014/10/17/how-to-avoid-memory-leaks-in-c-vc"},"nextItem":{"title":"Windows Phone 8.1 Development","permalink":"/blog/2014/06/06/windows-phone-8-1-development"}},"content":"## **Vedios**\\n\\n**Beginners** **Windows Phone 8.1 development** You need the\xa0[Absolute Beginner Series for Windows Phone 8.1](http://channel9.msdn.com/Series/Windows-Phone-8-1-Development-for-Absolute-Beginners)\xa0It is a complete course in getting started for Windows Phone 8.1. [source code for all the projects here](https://absolutebeginner.codeplex.com/).\\n\\n**Overview of the features available in Windows Phone 8.1** Watch the\xa0[first session of the Jump Start](http://channel9.msdn.com/Series/Building-Apps-for-Windows-Phone-8-1/01).\\n\\n**Want to learn what is new \xa0WP 8.1** You need the\xa0[Building Apps For Windows Phone 8.1 Jump Start](http://channel9.msdn.com/Series/Building-Apps-for-Windows-Phone-8-1). [source code is available here](https://onedrive.live.com/?cid=b36de4dd5a9179a1&id=B36DE4DD5A9179A1%2193175&ithint=folder,.zip&authkey=!APluMWf01e3WvqA).\\n\\n##  **Blogs**\\n\\n1.\xa0[](https://dev.windowsphone.com/en-us/develop)[https://dev.windowsphone.com/en-us/develop](https://dev.windowsphone.com/en-us/develop)\\n\\n2. [www.nagvbt.blogspot.com](http://nagvbt.blogspot.com) 3.\xa0[Windows Phone 8.1 for Developers\u2013What Controls Are New](http://blogs.msdn.com/b/thunbrynt/archive/2014/04/08/windows-phone-8-1-for-developers-what-controls-are-new.aspx)"},{"id":"/2014/06/06/windows-phone-8-1-development","metadata":{"permalink":"/blog/2014/06/06/windows-phone-8-1-development","source":"@site/blog/2014-06-06-windows-phone-8-1-development.md","title":"Windows Phone 8.1 Development","description":"Software","date":"2014-06-06T00:00:00.000Z","formattedDate":"June 6, 2014","tags":[{"label":"Windows Phone","permalink":"/blog/tags/windows-phone"}],"readingTime":0.855,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Windows Phone"]},"prevItem":{"title":"How to Learn Windows Phone 8.1 apps development","permalink":"/blog/2014/06/12/how-learn-windows-phone-8-1-apps-development"},"nextItem":{"title":"Approaches to develop Windows Phone 8.1 app","permalink":"/blog/2014/06/05/approaches-to-develop-windows-phone-8-1-apps"}},"content":"## Software\\n\\n- The Windows Developer Center is your base for all things Windows and Windows Phone related\xa0http://dev.windows.com http://dev.windowsphone.com\\n- FREE Download: Visual Studio Express 2013 for Windows\\n- Visual Studio Express 2013 allows to develop apps for Windows 8.1 and Windows Phone 8.1\\n- Developers using Visual Studio 2013 Professional or higher has to install Visual Studio 2013 Update 2 to add in Windows Phone 8.1 dev tools\\n\\n## PC (Hardware) Requirements\\n\\n<table width=\\"1159\\"><tbody><tr><td width=\\"579\\">Operating systems</td><td width=\\"579\\">Windows&nbsp;8.1 (x86 or x64)</td></tr><tr><td width=\\"579\\">Hardware</td><td width=\\"579\\">4GB of free disk space1.5 GB of RAM (recommended)64-bit (x64) motherboard</td></tr><tr><td width=\\"579\\">Windows Phone Emulators</td><td width=\\"579\\">Windows 8.1 Pro or higher (for Hyper-V) and Second Level Address Translation (SLAT)Minimum 4GB RAM</td></tr></tbody></table>\\n\\n**Windows Developer Account**\\n\\nFor starting development of app you do not need Developer Account. For publishing Windows Phone and/or Windows Store apps you need to get the Developer Account\\n\\nTo get a Developer Account: Included if you have an MSDN subscription Free to students who have a Dreamspark subscription $19 charge per annum for individual developers, $99 for Company accounts"},{"id":"/2014/06/05/approaches-to-develop-windows-phone-8-1-apps","metadata":{"permalink":"/blog/2014/06/05/approaches-to-develop-windows-phone-8-1-apps","source":"@site/blog/2014-06-05-approaches-to-develop-windows-phone-8-1-apps.md","title":"Approaches to develop Windows Phone 8.1 app","description":"There are three approaches to develop\xa0Windows Phone 8.1 apps XAML Apps. I like third \'Use Windows XAML platform\' approach as most of the users upgrade WP8 to WP8.1.","date":"2014-06-05T00:00:00.000Z","formattedDate":"June 5, 2014","tags":[{"label":"Windows Phone","permalink":"/blog/tags/windows-phone"}],"readingTime":0.685,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Windows Phone"]},"prevItem":{"title":"Windows Phone 8.1 Development","permalink":"/blog/2014/06/06/windows-phone-8-1-development"},"nextItem":{"title":"What\'s new in Windows Phone 8.1 Hardware","permalink":"/blog/2014/06/04/whats-new-in-windows-phone-8-1-hardware"}},"content":"There are three approaches to develop\xa0Windows Phone 8.1 apps XAML Apps. I like third \'Use Windows XAML platform\' approach as most of the users upgrade WP8 to WP8.1.\\n\\n<table width=\\"1065\\"><tbody><tr><td width=\\"425\\"><b>Approach</b></td><td colspan=\\"2\\" width=\\"640\\"><b>Pros &amp; Cons</b></td></tr><tr><td rowspan=\\"2\\" width=\\"425\\">Keep using Silverlight 7.x/8(Windows Phone 8 platform)</td><td width=\\"75\\">Pros</td><td width=\\"565\\"><ul><li>Will run on Windows Phone 8.1 and also runs on earlier Windows Phone devices</li></ul></td></tr><tr><td width=\\"75\\">Cons</td><td width=\\"565\\"><ul><li>No&nbsp;new platform capabilities</li><li>Will not enable targeting of Windows</li></ul></td></tr><tr><td rowspan=\\"2\\" width=\\"425\\">Use Silverlight 8.1 (Move Silverlight app into new execution stack and app package)</td><td width=\\"75\\">Pros</td><td width=\\"565\\"><ul><li>Enables to use new APIs and platform capabilities</li></ul></td></tr><tr><td width=\\"75\\">Cons</td><td width=\\"565\\"><ul><li>Will not enable targeting of Windows</li><li>Will not run on Windows Phone 8 devices</li></ul></td></tr><tr><td rowspan=\\"2\\" width=\\"425\\">Use Windows XAML platform</td><td width=\\"75\\">Pros</td><td width=\\"565\\"><ul><li>Enables targeting of Windows and Windows Phone</li><li>Takes full advantage of new APIs and platform capabilities</li><li>Better performance</li><li>Reduced memory use</li></ul></td></tr><tr><td width=\\"75\\">Cons</td><td width=\\"565\\"><ul><li>Will not run on Windows Phone 8 devices</li></ul></td></tr></tbody></table>"},{"id":"/2014/06/04/whats-new-in-windows-phone-8-1-hardware","metadata":{"permalink":"/blog/2014/06/04/whats-new-in-windows-phone-8-1-hardware","source":"@site/blog/2014-06-04-whats-new-in-windows-phone-8-1-hardware.md","title":"What\'s new in Windows Phone 8.1 Hardware","description":"- Dual-SIM works in Windows Phone 8.1 by splitting out the phone dialer and messaging into two separate Live Tiles.","date":"2014-06-04T00:00:00.000Z","formattedDate":"June 4, 2014","tags":[{"label":"Windows Phone","permalink":"/blog/tags/windows-phone"}],"readingTime":0.32,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Windows Phone"]},"prevItem":{"title":"Approaches to develop Windows Phone 8.1 app","permalink":"/blog/2014/06/05/approaches-to-develop-windows-phone-8-1-apps"},"nextItem":{"title":"New Features in Windows Phone 8.1","permalink":"/blog/2014/05/31/new-features-in-windows-phone-8-1"}},"content":"- Dual-SIM works in Windows Phone 8.1 by splitting out the phone dialer and messaging into two separate Live Tiles.\\n- Decrease HW cost floor (support 8x26, Qualcomm Reference Design)\\n- Apps can be installed on microSD\\n- Apps to help you get more out of your data plan: DataSense 2.0, Wi-Fi Sense, Storage Sense, Battery Sense\\n- Virtual softkeys instead of capacitive keys."},{"id":"/2014/05/31/new-features-in-windows-phone-8-1","metadata":{"permalink":"/blog/2014/05/31/new-features-in-windows-phone-8-1","source":"@site/blog/2014-05-31-new-features-in-windows-phone-8-1.md","title":"New Features in Windows Phone 8.1","description":"For Users","date":"2014-05-31T00:00:00.000Z","formattedDate":"May 31, 2014","tags":[{"label":"Windows Phone","permalink":"/blog/tags/windows-phone"}],"readingTime":0.915,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Windows Phone"]},"prevItem":{"title":"What\'s new in Windows Phone 8.1 Hardware","permalink":"/blog/2014/06/04/whats-new-in-windows-phone-8-1-hardware"},"nextItem":{"title":"Microsoft Surface Pro 3 Launch","permalink":"/blog/2014/05/20/microsoft-surface-pro-3-launch"}},"content":"## **For Users**\\n\\n\\n- \xa0Customize Start screen:\xa0Customize your Start screen background with a favourite picture or one of the supplied options. Users can configure three\xa0column start screen which is available on all phones.\xa0Start screen backup and restore feature is also available.\\n\\n- PERSONAL Digital Assistant CORTANA:\xa0CORTANA learns about you and your interests Enables CORTANA to be proactive and helpful throughout the day\\n- Action center to quick launch settings and view notifications\\n- Fast typing with new Word Flow keyboard\\n- Buy app once: use on PC and on Phone\\n- App data can roam among devices\\n- App data backup\\n- Faster app updates\\n- Remote viewing of Phone screen\\n- Install apps to SD card\\n- New Skype app integrated with Phone dialer\\n- New Calendar app with new Week view\\n\\n## For Developers\\n\\n- Converged developer platform\\n- Converged app model\\n- Shared app identities + entitlement\\n- Unified push services (via WNS)\\n- Live tile improvements\\n- Action Center for smart notifications\\n- Internet Explorer 11 improvements\\n- Background execution + triggers\\n- Bluetooth-LE support for wearables + beacons"},{"id":"/2014/05/20/microsoft-surface-pro-3-launch","metadata":{"permalink":"/blog/2014/05/20/microsoft-surface-pro-3-launch","source":"@site/blog/2014-05-20-microsoft-surface-pro-3-launch.md","title":"Microsoft Surface Pro 3 Launch","description":"Microsoft Surface Pro 3 is a thin tablet which replaces your laptop, more productive, Beautiful\xa0screen,\xa0Faster than Surface Pro 2","date":"2014-05-20T00:00:00.000Z","formattedDate":"May 20, 2014","tags":[],"readingTime":0.595,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tools":["Events"]},"prevItem":{"title":"New Features in Windows Phone 8.1","permalink":"/blog/2014/05/31/new-features-in-windows-phone-8-1"},"nextItem":{"title":"Upgrade from  Windows Phone 8  to Windows Phone 8.1","permalink":"/blog/2014/05/20/upgrade-windows-phone-8-to-wp-8-1"}},"content":"Microsoft Surface Pro 3 is a thin tablet which replaces your laptop, more productive, Beautiful\xa0screen,\xa0Faster than Surface Pro 2\\n\\nLive webcast @\xa0[](http://www.microsoft.com/en-us/news/press/2014/may14/05-20webcast.aspx)[http://www.microsoft.com/en-us/news/press/2014/may14/05-20webcast.aspx](http://www.microsoft.com/en-us/news/press/2014/may14/05-20webcast.aspx) [Microsoft Surface](http://www.nagvbt.blogspot.com/wp-content/uploads/2014/05/microsoft-surface.png)\\n\\nThicknesses : 9.1 mm \\n\\nScreen : 12.0\\"\\n\\nWeight : 800g \\n\\nProcessor : Core i7 Fan less\\n\\n**Estimated price of Surface Pro 3:**\\n\\n- 4th gen Intel\xae Core\u2122 i3, 64 GB and 4 GB of RAM - $799\\n\\n- 4th gen Intel\xae Core\u2122 i5, 128 GB and 4 GB of RAM - $999 4th gen Intel\xae Core\u2122 i5, 256 GB and 8 GB of RAM - $1,299\\n\\n- 4th gen Intel\xae Core\u2122 i7, 256 GB and 8 GB of RAM - $1,549 4th gen Intel\xae Core\u2122 i7, 512 GB and 8 GB of RAM - $1,949"},{"id":"/2014/05/20/upgrade-windows-phone-8-to-wp-8-1","metadata":{"permalink":"/blog/2014/05/20/upgrade-windows-phone-8-to-wp-8-1","source":"@site/blog/2014-05-20-upgrade-windows-phone-8-to-wp-8-1.md","title":"Upgrade from  Windows Phone 8  to Windows Phone 8.1","description":"If you have a Windows Phone 8 now and want to get the preview of Windows Phone 8.1:","date":"2014-05-20T00:00:00.000Z","formattedDate":"May 20, 2014","tags":[{"label":"Windows Phone","permalink":"/blog/tags/windows-phone"}],"readingTime":0.36,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Windows Phone"]},"prevItem":{"title":"Microsoft Surface Pro 3 Launch","permalink":"/blog/2014/05/20/microsoft-surface-pro-3-launch"},"nextItem":{"title":"Microsoft Remote Desktop Preview for Windows Phone 8.1","permalink":"/blog/2014/04/24/microsoft-remote-desktop-preview"}},"content":"If you have a Windows Phone 8 now and want to get the preview of Windows Phone 8.1:\\n\\n![](http://cdn.marketplaceimages.windowsphone.com/v8/images/55f7d31d-6813-4edb-a656-15a394c4aa39?imageType=ws_icon_large)\\n\\n- Go register\xa0**free**\xa0at\xa0[http://appstudio.windowsphone.com](http://appstudio.windowsphone.com/ \\"http://appstudio.windowsphone.com/\\").\\n- Then go to \\"[Windows Phone Preview for Developers](https://dev.windowsphone.com/en-us/develop/devpreview)\\" and install the \\"[Preview for Developers](https://go.microsoft.com/fwlink/p/?LinkId=324357)\\" app.\\n- Go to Settings, then System Update and update your phone.\\n\\n**NOTE:**\\n\\n- Warranty will break\\n\\n-\xa0You CANNOT REVERT to a prior OS version once you have taken an update via this program"},{"id":"/2014/04/24/microsoft-remote-desktop-preview","metadata":{"permalink":"/blog/2014/04/24/microsoft-remote-desktop-preview","source":"@site/blog/2014-04-24-microsoft-remote-desktop-preview.md","title":"Microsoft Remote Desktop Preview for Windows Phone 8.1","description":"Microsoft Remote Desktop Preview now available for Windows Phone 8.1","date":"2014-04-24T00:00:00.000Z","formattedDate":"April 24, 2014","tags":[{"label":"Windows Phone","permalink":"/blog/tags/windows-phone"}],"readingTime":0.655,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Windows Phone"]},"prevItem":{"title":"Upgrade from  Windows Phone 8  to Windows Phone 8.1","permalink":"/blog/2014/05/20/upgrade-windows-phone-8-to-wp-8-1"},"nextItem":{"title":"Bring your App Studio apps to Windows 8","permalink":"/blog/2014/03/03/bring-your-app-studio-apps-to-windows-8"}},"content":"Microsoft Remote Desktop Preview now available for Windows Phone 8.1\\n\\n[![](http://cdn.marketplaceimages.windowsphone.com/v8/images/949b1b9f-7047-4921-bda8-cf873f30fb7f?imageType=ws_icon_large)](http://www.windowsphone.com/s?appid=299b09ab-207e-441c-9e8e-c8d66c20b76b)\\n\\nIf you install [Windows Phone 8.1 preview for developers on your phone.](http://nagvbt.blogspot.com/2014/05/20/upgrade-from-windows-phone-8-to-windows-phone-8-1/ \\"Upgrade from  Windows Phone 8  to Windows Phone 8.1\\") It\'s time to [download](http://www.windowsphone.com/s?appid=299b09ab-207e-441c-9e8e-c8d66c20b76b) and try \'Microsoft Remote Desktop Preview\' app which is now available in WP Store\\n\\n**Features**\\n\\n- Rich multi-touch experience with Remote Desktop Protocol (RDP) and RemoteFX supporting Windows gestures\\n- Secure connection to your data and applications with breakthrough Network Level Authentication (NLA) technology\\n- Simple management of all remote connections from the connection center\\n- High quality video and sound streaming with improved compression and bandwidth usage\\n\\nRelease 8.1.1 includes the following updates:\\n\\n- Pin desktop connections to the Start screen\\n- Support for word flow and predictive text\\n- Ability to disable thumbnails"},{"id":"/2014/03/03/bring-your-app-studio-apps-to-windows-8","metadata":{"permalink":"/blog/2014/03/03/bring-your-app-studio-apps-to-windows-8","source":"@site/blog/2014-03-03-bring-your-app-studio-apps-to-windows-8.md","title":"Bring your App Studio apps to Windows 8","description":"Windows Phone App Studio Beta\xa0is awesome. It\u2019s a great way to build your first app for Windows Phone. It lets you choose different design templates and styles, and lets you pull in different data sources, from RSS feeds, to YouTube, to Flicker or even Bing. In this post, we\u2019ll talk about how to take an app that you created in App Studio go further by making it work on Windows 8 using the latest update to Windows Phone App Studio.","date":"2014-03-03T00:00:00.000Z","formattedDate":"March 3, 2014","tags":[{"label":"Windows Phone","permalink":"/blog/tags/windows-phone"}],"readingTime":0.425,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Windows Phone"]},"prevItem":{"title":"Microsoft Remote Desktop Preview for Windows Phone 8.1","permalink":"/blog/2014/04/24/microsoft-remote-desktop-preview"},"nextItem":{"title":"Microsoft DevCamps","permalink":"/blog/2014/02/05/microsoft-devcamps-windows-application-development"}},"content":"[Windows Phone App Studio Beta](http://apps.windowsstore.com/default.htm)\xa0is awesome. It\u2019s a great way to build your first app for Windows Phone. It lets you choose different design templates and styles, and lets you pull in different data sources, from RSS feeds, to YouTube, to Flicker or even Bing. In this post, we\u2019ll talk about how to take an app that you created in App Studio go further by making it work on Windows 8 using the latest update to Windows Phone App Studio.\\n\\nFor More Info read [this->](http://dwcares.com/app-studio-win8/)"},{"id":"/2014/02/05/microsoft-devcamps-windows-application-development","metadata":{"permalink":"/blog/2014/02/05/microsoft-devcamps-windows-application-development","source":"@site/blog/2014-02-05-microsoft-devcamps-windows-application-development.md","title":"Microsoft DevCamps","description":"I had participated in Microsoft DevCamps for Windows Application Development @\xa0Regenta One hosted by Microsoft -","date":"2014-02-05T00:00:00.000Z","formattedDate":"February 5, 2014","tags":[{"label":"Events","permalink":"/blog/tags/events"}],"readingTime":0.165,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Events"]},"prevItem":{"title":"Bring your App Studio apps to Windows 8","permalink":"/blog/2014/03/03/bring-your-app-studio-apps-to-windows-8"},"nextItem":{"title":"Visual Studio 2013 Update 1 for download","permalink":"/blog/2014/01/22/visual-studio-2013-update-1-ready-to-download"}},"content":"I had participated in Microsoft DevCamps for Windows Application Development @\xa0Regenta One hosted by Microsoft - \\n\\nI am the winner of **2nd prize** for development of Windows 8.1 App - In Hackathon.\\n\\n[DevCamp](http://www.microsoft.com/en-in/events/devcamps/all_events_hyderabad.aspx)"},{"id":"/2014/01/22/visual-studio-2013-update-1-ready-to-download","metadata":{"permalink":"/blog/2014/01/22/visual-studio-2013-update-1-ready-to-download","source":"@site/blog/2014-01-22-visual-studio-2013-update-1-ready-to-download.md","title":"Visual Studio 2013 Update 1 for download","description":"In a blog post, S. Somasegar, Corporate Vice President of Microsoft Developer Division clearly mentioned that","date":"2014-01-22T00:00:00.000Z","formattedDate":"January 22, 2014","tags":[{"label":"Tools","permalink":"/blog/tags/tools"}],"readingTime":0.86,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Tools"]},"prevItem":{"title":"Microsoft DevCamps","permalink":"/blog/2014/02/05/microsoft-devcamps-windows-application-development"},"nextItem":{"title":"Set a variable that can be accessed on all pages of a Windows Phone App","permalink":"/blog/2013/03/09/variable-windows-phone-app"}},"content":"In a [blog](http://blogs.msdn.com/b/somasegar/archive/2014/01/20/visual-studio-2013-update-1.aspx) post, S. Somasegar, Corporate Vice President of Microsoft Developer Division clearly mentioned that: \u201cThis is a targeted update, addressing some key areas of customer feedback since the Visual Studio 2013 release. For example, we heard your feedback about running Visual Studio in environments without IE10+, and have made several improvements to this experience in Update 1.\u201d **New features for developers include:**\\n\\n- IntelliTrace Viewer users should note that it\'s been updated to support Internet Explorer 9.\\n- A new version of Microsoft ASP.NET Web Frameworks and Tools (version 5.0.11213.0). It adds editing support for ASP.NET MVC 5.1 on top of all existing functionality from the Web Framework and Tools 5.0 release.\\n- A new version of Nuget, 2.7.2. It fixes a bug which caused certain packages to fail when running package restore, update or uninstall.\\n- Web tool, SignalR 2.0.1, which includes new item templates.\\n\\n**Download**\\n\\n- [Download web installer of Visual Studio 2013 Update 1](http://www.microsoft.com/en-us/download/confirmation.aspx?id=41650)\xa0**(~1.1 MB)**\\n- [Download offline installer/ISO image of Visual Studio 2013 Update 1](http://go.microsoft.com/fwlink/?LinkId=386593)\xa0**(~245 MB)**"},{"id":"/2013/03/09/variable-windows-phone-app","metadata":{"permalink":"/blog/2013/03/09/variable-windows-phone-app","source":"@site/blog/2013-03-09-variable-windows-phone-app.md","title":"Set a variable that can be accessed on all pages of a Windows Phone App","description":"App.xaml.cs","date":"2013-03-09T00:00:00.000Z","formattedDate":"March 9, 2013","tags":[{"label":"Windows Phone","permalink":"/blog/tags/windows-phone"}],"readingTime":0.28,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Windows Phone"]},"prevItem":{"title":"Visual Studio 2013 Update 1 for download","permalink":"/blog/2014/01/22/visual-studio-2013-update-1-ready-to-download"},"nextItem":{"title":"Can\'t login to Windows 8 with account live password! ?","permalink":"/blog/2013/01/04/cant-login-to-windows-8-with-account-live-password"}},"content":"**App.xaml.cs**\\n\\n```cs \\npublic partial class App : Application {\\n public string sName { get; set; }\\n\\n public static new App Current\\n {\\n     get { return Application.Current as App; }\\n }\\n  ...\\n  ...\\n\\n\\n} \\n```\\n\\n**Page1.xaml.cs**\\n\\n```cs \\npublic partial class Page1 : PhoneApplicationPage { \\n public string _sName;\\n\\n public Page1()\\n {\\n    InitializeComponent();\\n\\n    _sName = App.Current.sName;\\n }\\n\\n} \\n```"},{"id":"/2013/01/04/cant-login-to-windows-8-with-account-live-password","metadata":{"permalink":"/blog/2013/01/04/cant-login-to-windows-8-with-account-live-password","source":"@site/blog/2013-01-04-cant-login-to-windows-8-with-account-live-password.md","title":"Can\'t login to Windows 8 with account live password! ?","description":"Steps:","date":"2013-01-04T00:00:00.000Z","formattedDate":"January 4, 2013","tags":[{"label":"Windows 8","permalink":"/blog/tags/windows-8"}],"readingTime":0.3,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Windows 8"]},"prevItem":{"title":"Set a variable that can be accessed on all pages of a Windows Phone App","permalink":"/blog/2013/03/09/variable-windows-phone-app"},"nextItem":{"title":"How to Delete \\\\\\"Windows.old\\\\\\" in windows 8","permalink":"/blog/2013/01/04/how-to-delete-windows-old-in-windows-8"}},"content":"## Steps:\\n\\n1. open the \'On screen keyboard\' and use it to type the password\\n\\nPreventive measure steps:\\n\\nIt\'s good to setup sign-in options in order to have one or more ways to login to your PC\\n\\n1. Go to charm bar select \'Change PC Settings\'\\n\\n2. Select Users\\n\\n3. Use \'Sign-in options\' to use \'Picture Password\' and \'PIN\' password"},{"id":"/2013/01/04/how-to-delete-windows-old-in-windows-8","metadata":{"permalink":"/blog/2013/01/04/how-to-delete-windows-old-in-windows-8","source":"@site/blog/2013-01-04-how-to-delete-windows-old-in-windows-8.md","title":"How to Delete \\\\\\"Windows.old\\\\\\" in windows 8","description":"1.\xa0Press the\xa0Windows+R\xa0keys to open the Run dialog, type\xa0cleanmgr, and press Enter.","date":"2013-01-04T00:00:00.000Z","formattedDate":"January 4, 2013","tags":[{"label":"Windows 8","permalink":"/blog/tags/windows-8"}],"readingTime":0.365,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Windows 8"]},"prevItem":{"title":"Can\'t login to Windows 8 with account live password! ?","permalink":"/blog/2013/01/04/cant-login-to-windows-8-with-account-live-password"},"nextItem":{"title":"Print 1 to 100 in C++ without using loops and recursion","permalink":"/blog/2012/12/07/1-to-100-in-c-without-using-loops-recursion"}},"content":"**1.**\xa0Press the\xa0**Windows+R**\xa0keys to open the Run dialog, type\xa0**cleanmgr**, and press Enter.\\n\\n**2.**\xa0Select the\xa0**Windows drive**, and click/tap on\xa0**OK**. **NOTE:**\xa0_You will not see this window unless you have more than one drive or partition on your computer with a drive letter._\\n\\n**3.** Click/tap on the\xa0**Clean up system files** button\\n\\n**4.**\xa0Click/tap on the\xa0**Previous Windows installation(s)** box to check it, and click/tap on\xa0**OK**. (see screenshot below)\\n\\n**5.**\xa0Click/tap on\xa0**Delete Files**.\\n\\n**6.**\xa0When Disk Cleanup finishes, the\xa0**C:Windows.old**\xa0folder will be deleted."},{"id":"/2012/12/07/1-to-100-in-c-without-using-loops-recursion","metadata":{"permalink":"/blog/2012/12/07/1-to-100-in-c-without-using-loops-recursion","source":"@site/blog/2012-12-07-1-to-100-in-c-without-using-loops-recursion.md","title":"Print 1 to 100 in C++ without using loops and recursion","description":"","date":"2012-12-07T00:00:00.000Z","formattedDate":"December 7, 2012","tags":[{"label":"C++","permalink":"/blog/tags/c"}],"readingTime":0.15,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++"]},"prevItem":{"title":"How to Delete \\\\\\"Windows.old\\\\\\" in windows 8","permalink":"/blog/2013/01/04/how-to-delete-windows-old-in-windows-8"},"nextItem":{"title":"Visual Studio 2012 Update 1 Now Available\\"","permalink":"/blog/2012/11/28/visual-studio-2012-update-1-now-available"}},"content":"```cpp \\nclass CPrintNum\\n{ \\n  public: static int iNum;\\n\\nCPrintNum() \\n{\\n   cout << iNum++ << endl; \\n} \\n   \\n};\\n\\nint CPrintNum::iNum = 1;\\n\\nint main() \\n{ \\n  CPrintNum obj[100]; \\n  return 0; \\n} \\n```"},{"id":"/2012/11/28/visual-studio-2012-update-1-now-available","metadata":{"permalink":"/blog/2012/11/28/visual-studio-2012-update-1-now-available","source":"@site/blog/2012-11-28-visual-studio-2012-update-1-now-available.md","title":"Visual Studio 2012 Update 1 Now Available\\"","description":"Visual Studio 2012 Update 1 Now Available for\xa0Download\xa0. Visual Studio 2012 Update 1 has the improvements in","date":"2012-11-28T00:00:00.000Z","formattedDate":"November 28, 2012","tags":[{"label":"Tools","permalink":"/blog/tags/tools"}],"readingTime":0.155,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Tools"]},"prevItem":{"title":"Print 1 to 100 in C++ without using loops and recursion","permalink":"/blog/2012/12/07/1-to-100-in-c-without-using-loops-recursion"},"nextItem":{"title":"WCF Data Services 5.0 for OData V3","permalink":"/blog/2012/10/05/wcf-data-services-5-0-for-odata-v3"}},"content":"Visual Studio 2012 Update 1 Now Available for\xa0**[Download](http://www.microsoft.com/visualstudio/eng/downloads#d-visual-studio-2012-update)\xa0.** Visual Studio 2012 Update 1 has the improvements in\\n\\n- Windows Development\\n- SharePoint Development\\n- Agile Teams\\n- Continuous Quality\\n\\nSource: [http://blogs.msdn.com/b/somasegar/archive/2012/11/26/visual-studio-2012-update-1-now-available.aspx](http://blogs.msdn.com/b/somasegar/archive/2012/11/26/visual-studio-2012-update-1-now-available.aspx)"},{"id":"/2012/10/05/wcf-data-services-5-0-for-odata-v3","metadata":{"permalink":"/blog/2012/10/05/wcf-data-services-5-0-for-odata-v3","source":"@site/blog/2012-10-05-wcf-data-services-5-0-for-odata-v3.md","title":"WCF Data Services 5.0 for OData V3","description":"Microsoft released WCF Data Services 5.0 for\xa0Open Data Protocol (OData)","date":"2012-10-05T00:00:00.000Z","formattedDate":"October 5, 2012","tags":[{"label":"WCF","permalink":"/blog/tags/wcf"}],"readingTime":0.175,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["WCF"]},"prevItem":{"title":"Visual Studio 2012 Update 1 Now Available\\"","permalink":"/blog/2012/11/28/visual-studio-2012-update-1-now-available"},"nextItem":{"title":"Ramaya.na - in google version using HTML 5","permalink":"/blog/2012/09/28/ramaya-na-in-google-version-using-html-5"}},"content":"Microsoft released WCF Data Services 5.0 for\xa0Open Data Protocol (OData)\\n\\nIt facilitates data access and change via standard HTTP verbs.\\n\\nThe\xa0package contains:\\n\\n 1. .NET Framework server\\n 2. Client libraries and Silverlight client libraries.\\n\\n[Download Link](http://www.microsoft.com/en-us/download/details.aspx?id=29306)"},{"id":"/2012/09/28/ramaya-na-in-google-version-using-html-5","metadata":{"permalink":"/blog/2012/09/28/ramaya-na-in-google-version-using-html-5","source":"@site/blog/2012-09-28-ramaya-na-in-google-version-using-html-5.md","title":"Ramaya.na - in google version using HTML 5","description":"Ramayana which is an Indian epic story but shown as Indonesian way by www.ramaya.na website which was made by Google.","date":"2012-09-28T00:00:00.000Z","formattedDate":"September 28, 2012","tags":[{"label":"Technology","permalink":"/blog/tags/technology"}],"readingTime":0.15,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Technology"]},"prevItem":{"title":"WCF Data Services 5.0 for OData V3","permalink":"/blog/2012/10/05/wcf-data-services-5-0-for-odata-v3"},"nextItem":{"title":"How to execute a command in Visual C++","permalink":"/blog/2012/09/27/how-to-execute-a-command-in-visual-c"}},"content":"Ramayana which is an Indian epic story but shown as Indonesian way by www.ramaya.na website which was made by Google.\\n\\nIt was developed as animation story using HTML5.\\n\\n\\\\[youtube [http://www.youtube.com/watch?v=LIXDcQ7qbNo?feature=player\\\\_detailpage](http://www.youtube.com/watch?v=LIXDcQ7qbNo?feature=player_detailpage)\\\\]"},{"id":"/2012/09/27/how-to-execute-a-command-in-visual-c","metadata":{"permalink":"/blog/2012/09/27/how-to-execute-a-command-in-visual-c","source":"@site/blog/2012-09-27-how-to-execute-a-command-in-visual-c.md","title":"How to execute a command in Visual C++","description":"There are basically four methods to run a command in Visual C++. WinExec is provided only for compatibility with 16-bit Windows. Applications should use the CreateProcess function.","date":"2012-09-27T00:00:00.000Z","formattedDate":"September 27, 2012","tags":[{"label":"Win32","permalink":"/blog/tags/win-32"}],"readingTime":0.19,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Win32"]},"prevItem":{"title":"Ramaya.na - in google version using HTML 5","permalink":"/blog/2012/09/28/ramaya-na-in-google-version-using-html-5"},"nextItem":{"title":"LEAP Hands-free motion control Technology","permalink":"/blog/2012/09/27/leap-hands-free-motion-control-technology"}},"content":"There are basically four methods to run a command in Visual C++. WinExec is provided only for compatibility with 16-bit Windows. Applications should use the CreateProcess function.\\n\\n\xb7 system(), _wsystem()\\n\xb7 ShellExecute() or ShellExecuteEx()\\n\xb7 CreateProcess()\\n\xb7 WinExec()"},{"id":"/2012/09/27/leap-hands-free-motion-control-technology","metadata":{"permalink":"/blog/2012/09/27/leap-hands-free-motion-control-technology","source":"@site/blog/2012-09-27-leap-hands-free-motion-control-technology.md","title":"LEAP Hands-free motion control Technology","description":"New way of interaction with the\xa0computers\xa0say good bye to Keyboard, Mouse even touch screen :) \xa0?","date":"2012-09-27T00:00:00.000Z","formattedDate":"September 27, 2012","tags":[{"label":"Technology","permalink":"/blog/tags/technology"}],"readingTime":0.795,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Technology"]},"prevItem":{"title":"How to execute a command in Visual C++","permalink":"/blog/2012/09/27/how-to-execute-a-command-in-visual-c"},"nextItem":{"title":"Win32: How do I get the name of files in a folder ?","permalink":"/blog/2012/09/26/win32-how-do-i-get-the-name-of-files-in-a-folder"}},"content":"New way of interaction with the\xa0computers\xa0say good bye to Keyboard, Mouse even touch screen :) \xa0?\\n\\nYes it can be possible !\\n\\nA\xa0San Francisco Company Leap Motion (www.leapmotion.com) developed\xa0Hands-free motion control Technology.\\n\\n\\\\[youtube [http://www.youtube.com/watch?v=\\\\_d6KuiuteIA?feature=player\\\\_detailpage](http://www.youtube.com/watch?v=_d6KuiuteIA?feature=player_detailpage)\\\\]\\n\\nThe website says:\\n\\n\\" Leap represents an entirely new way to interact with your computers. It\u2019s more accurate than a mouse, as reliable as a keyboard and more sensitive than a touchscreen. \xa0For the first time, you can control a computer in three dimensions with your natural hand and finger movements.\\nThis isn\u2019t a game system that roughly maps your hand movements.\xa0 The Leap technology is 200 times more accurate than anything else on the market \u2014 at any price point.\xa0Just about the size of a flash drive, the Leap can distinguish your individual fingers and track your movements down to a 1/100th of a millimeter.\\nThis is like day one of the mouse.\xa0 Except, no one needs an instruction manual for their hands. \\""},{"id":"/2012/09/26/win32-how-do-i-get-the-name-of-files-in-a-folder","metadata":{"permalink":"/blog/2012/09/26/win32-how-do-i-get-the-name-of-files-in-a-folder","source":"@site/blog/2012-09-26-win32-how-do-i-get-the-name-of-files-in-a-folder.md","title":"Win32: How do I get the name of files in a folder ?","description":"To get the name of files in a folder,","date":"2012-09-26T00:00:00.000Z","formattedDate":"September 26, 2012","tags":[{"label":"Win32","permalink":"/blog/tags/win-32"}],"readingTime":0.47,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Win32"]},"prevItem":{"title":"LEAP Hands-free motion control Technology","permalink":"/blog/2012/09/27/leap-hands-free-motion-control-technology"},"nextItem":{"title":"vedic-technology","permalink":"/blog/2012/09/16/vedic-technology"}},"content":"To get the name of files in a folder,\\n\\n1. call the\xa0**FindFirstFile** function to open a search handle and get information about the first file that the file system find in the folder.\\n    \\n2. call the\xa0**FindNextFile** function to continue listing files from a previous call to FindFirstFile.\\n    \\n\\n```c \\nWIN32_FIND_DATA FindFileData; \\nHANDLE hFind; \\nTCHAR *FilePathBuff = L\\"C:RequiredFolder\\"; \\nhFind = FindFirstFile(FilePathBuff, &FindFileData);\\n\\nif (hFind == INVALID_HANDLE_VALUE) { \\n    printf(TEXT(\\"FindFirstFile failed (%d)n\\"), GetLastError()); \\n  } \\n  else\\n  { \\n    printf(TEXT(\\"The first file is %sn\\"), FindFileData.cFileName); \\n    while (FindNextFile(hFind, &FindFileData) != 0) \\n    { \\n      printf(TEXT(\\"The next file is %sn\\"), FindFileData.cFileName);\\n    } FindClose(hFind);\\n  } \\n```"},{"id":"/2012/09/16/vedic-technology","metadata":{"permalink":"/blog/2012/09/16/vedic-technology","source":"@site/blog/2012-09-16-vedic-technology.md","title":"vedic-technology","description":"Vedic Technology","date":"2012-09-16T00:00:00.000Z","formattedDate":"September 16, 2012","tags":[{"label":"Technology","permalink":"/blog/tags/technology"}],"readingTime":0.32,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Technology"]},"prevItem":{"title":"Win32: How do I get the name of files in a folder ?","permalink":"/blog/2012/09/26/win32-how-do-i-get-the-name-of-files-in-a-folder"},"nextItem":{"title":"Installation Setup for Windows Phone 7  Development","permalink":"/blog/2012/09/05/installation-setup-for-windows-phone-7-development"}},"content":"## Vedic Technology \\nGreatness Of The Vedic Vedas Knowledge Perfect Science: vedic cosmology\\n\\n_6 parts totaling about 18minutes_\\n\\n)Cosmology\xa0\xa0stated in the Vedic scriptures about which was thousands of years before the modern science discovery.\\n\\n### Part - 1\\n\\n\\\\[youtube=[http://www.youtube.com/watch?v=r47hy9ndeI0](http://www.youtube.com/watch?v=r47hy9ndeI0)\\\\]\\n\\n### Part - 2\\n\\n\\\\[youtube=[http://www.youtube.com/watch?v=vlqRFBcylaA](http://www.youtube.com/watch?v=vlqRFBcylaA)\\\\]\\n\\n### Part - 3\\n\\n\\\\[youtube=[http://www.youtube.com/watch?v=BYOr-jd9qUA](http://www.youtube.com/watch?v=BYOr-jd9qUA)\\\\]\\n\\n### Part - 4\\n\\n\\\\[youtube=[http://www.youtube.com/watch?v=nlOBOrHHY\\\\_w](http://www.youtube.com/watch?v=nlOBOrHHY_w)\\\\]\\n\\n### Part - 5\\n\\n\\\\[youtube=[http://www.youtube.com/watch?v=GTAV-5fjfd4](http://www.youtube.com/watch?v=GTAV-5fjfd4)\\\\]\\n\\n### Part - 6\\n\\n\\\\[youtube=[http://www.youtube.com/watch?v=8sb4wMNOt14](http://www.youtube.com/watch?v=8sb4wMNOt14)\\\\]"},{"id":"/2012/09/05/installation-setup-for-windows-phone-7-development","metadata":{"permalink":"/blog/2012/09/05/installation-setup-for-windows-phone-7-development","source":"@site/blog/2012-09-05-installation-setup-for-windows-phone-7-development.md","title":"Installation Setup for Windows Phone 7  Development","description":"1. Install Visual Studio 2010 Professional or \xa0Visual Studio 2010 Ultimate","date":"2012-09-05T00:00:00.000Z","formattedDate":"September 5, 2012","tags":[{"label":"Windows Phone","permalink":"/blog/tags/windows-phone"}],"readingTime":0.465,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Windows Phone"]},"prevItem":{"title":"vedic-technology","permalink":"/blog/2012/09/16/vedic-technology"},"nextItem":{"title":"MFC: Enumerate all views of the document","permalink":"/blog/2012/09/03/mfc-enumerate-all-views-of-the-document"}},"content":"1. Install Visual Studio 2010 Professional or \xa0Visual Studio 2010 Ultimate\\n\\n2. Install Microsoft VisualStudio 2010 ServicePack1 [](http://http//www.microsoft.com/en-in/download/details.aspx?id=23691 \\"SP1 Download Link\\")[http://www.microsoft.com/en-in/download/details.aspx?id=23691](http://www.microsoft.com/en-in/download/details.aspx?id=23691)\\n\\n**or**\\n\\nIf you don\u2019t have Visual Studio 2010 Professional or Visual Studio 2010 Ultimate go for 3) Visual Studio 2010 Express for Windows Phone\xa0[(MSDN)](http://msdn.microsoft.com/en-us/library/ff630878(v=vs.92).aspx(MSDN)) [](http://www.microsoft.com/visualstudio/en-us/products/2010-editions/windows-phone-developer-tools)[http://www.microsoft.com/visualstudio/en-us/products/2010-editions/windows-phone-developer-tools](http://www.microsoft.com/visualstudio/en-us/products/2010-editions/windows-phone-developer-tools)\\n\\n3. After installing\xa0\xa0Visual Studio 2010 Professional or \xa0Visual Studio 2010 Ultimate or\xa0Visual Studio 2010 Express for Windows Phone install following Windows Phone SDK\u2019s\\n\\n4. Install Microsoft XNA Game Studio 4.0 [http://www.microsoft.com/en-in/download/details.aspx?id=23714](http://www.microsoft.com/en-in/download/details.aspx?id=23714)\\n\\n5. Install Windows Phone SDK\xa07.1 SDK [http://www.microsoft.com/en-us/download/details.aspx?id=27570](http://www.microsoft.com/en-us/download/details.aspx?id=27570)\\n\\n6. Install Windows Phone SDK 7.1.1 SDK Update [](http://www.microsoft.com/en-us/download/details.aspx?id=29233)[http://www.microsoft.com/en-us/download/details.aspx?id=29233](http://www.microsoft.com/en-us/download/details.aspx?id=29233)"},{"id":"/2012/09/03/mfc-enumerate-all-views-of-the-document","metadata":{"permalink":"/blog/2012/09/03/mfc-enumerate-all-views-of-the-document","source":"@site/blog/2012-09-03-mfc-enumerate-all-views-of-the-document.md","title":"MFC: Enumerate all views of the document","description":"To Enumerate all views of the document the CDocument class provides GetFirstViewPosition and GetNextView member functions to enumerate all views associated with the document. We call view\u2019s OnUpdate function to communicate with them.","date":"2012-09-03T00:00:00.000Z","formattedDate":"September 3, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.405,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Installation Setup for Windows Phone 7  Development","permalink":"/blog/2012/09/05/installation-setup-for-windows-phone-7-development"},"nextItem":{"title":"C#: Generate xsd and class for an XML document","permalink":"/blog/2012/09/02/c-how-to-generate-xsd-and-class-for-an-xml-document"}},"content":"To Enumerate all views of the document the CDocument class provides GetFirstViewPosition and GetNextView member functions to enumerate all views associated with the document. We call view\u2019s OnUpdate function to communicate with them.\\n\\n```cpp\\nvoid EnumerateViews()\\n{\\n   //get the position of the first view in the list\\n   //of views associated with the document.\\n   POSITION pos = GetFirstViewPosition();\\n\\n   //terate through all of the document\'s views.\\n   while (pos != NULL)\\n   {\\n      CView* pView = GetNextView(pos);\\n\\n      //update view\\n      pView-&gt;OnUpdate(pSender, lHint, pHint);\\n   }\\n}\\n```"},{"id":"/2012/09/02/c-how-to-generate-xsd-and-class-for-an-xml-document","metadata":{"permalink":"/blog/2012/09/02/c-how-to-generate-xsd-and-class-for-an-xml-document","source":"@site/blog/2012-09-02-c-how-to-generate-xsd-and-class-for-an-xml-document.md","title":"C#: Generate xsd and class for an XML document","description":"Using xsd.exe which will be install with the Visual studio can be used.","date":"2012-09-02T00:00:00.000Z","formattedDate":"September 2, 2012","tags":[{"label":"CSharp","permalink":"/blog/tags/c-sharp"}],"readingTime":0.445,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["CSharp"]},"prevItem":{"title":"MFC: Enumerate all views of the document","permalink":"/blog/2012/09/03/mfc-enumerate-all-views-of-the-document"},"nextItem":{"title":"C#: How to Select a random item from a List","permalink":"/blog/2012/08/29/select-a-random-item-from-a-list"}},"content":"Using xsd.exe which will be install with the Visual studio can be used.  \\nOpen\xa0Visual Studio Command Prompt and use the following commands\\n\\nSetting environment for using Microsoft Visual Studio 2010 x86 tools.\\n\\nC:Program Files (x86)Microsoft Visual Studio 10.0VC>cd C:\\n\\n**C:>xsd CPPData.xml**\\n\\n Microsoft (R) Xml Schemas/DataTypes support utility\\n \\\\[Microsoft (R) .NET Framework, Version 4.0.30319.1\\\\]\\n Copyright (C) Microsoft Corporation. All rights reserved.\\n Writing file \'C:CPPData.xsd\'.\\nC:>xsd CPPData.xsd /classes\\n Microsoft (R) Xml Schemas/DataTypes support utility\\n \\\\[Microsoft (R) .NET Framework, Version 4.0.30319.1\\\\]\\n Copyright (C) Microsoft Corporation. All rights reserved.\\n Writing file \'C:CPPData.cs\'.\\nC:>"},{"id":"/2012/08/29/select-a-random-item-from-a-list","metadata":{"permalink":"/blog/2012/08/29/select-a-random-item-from-a-list","source":"@site/blog/2012-08-29-select-a-random-item-from-a-list.md","title":"C#: How to Select a random item from a List","description":"","date":"2012-08-29T00:00:00.000Z","formattedDate":"August 29, 2012","tags":[{"label":"CSharp","permalink":"/blog/tags/c-sharp"}],"readingTime":0.265,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["CSharp"]},"prevItem":{"title":"C#: Generate xsd and class for an XML document","permalink":"/blog/2012/09/02/c-how-to-generate-xsd-and-class-for-an-xml-document"},"nextItem":{"title":"iPad head Robot with videoconferencing","permalink":"/blog/2012/08/22/ipad-head-robot-with-videoconferencing"}},"content":"```cpp\\nusing System; \\nusing System.Collections.Generic; \\nnamespace RandomSelect { \\n  class Program { \\n    static List lst = new List(); \\n    static void Main(string[] args) { \\n      lst.Add(\\"1\\"); \\n      lst.Add(\\"2\\"); \\n      lst.Add(\\"3\\"); \\n      lst.Add(\\"4\\"); \\n      lst.Add(\\"5\\"); \\n      lst.Add(\\"6\\"); \\n      lst.Add(\\"7\\"); \\n      lst.Add(\\"8\\"); \\n      lst.Add(\\"9\\"); \\n      lst.Add(\\"10\\"); \\n      Random rndElement = new Random(); \\n      foreach (string i in lst) { \\n        string s = lst[rndElement.Next(lst.Count)];\\n         Console.WriteLine(s); \\n        } \\n    }\\n  }\\n} \\n```"},{"id":"/2012/08/22/ipad-head-robot-with-videoconferencing","metadata":{"permalink":"/blog/2012/08/22/ipad-head-robot-with-videoconferencing","source":"@site/blog/2012-08-22-ipad-head-robot-with-videoconferencing.md","title":"iPad head Robot with videoconferencing","description":"Double Robotics is an low-cost telepresence robot which can be used in education, museums, health care, Offices, Retail stores, Families.","date":"2012-08-22T00:00:00.000Z","formattedDate":"August 22, 2012","tags":[{"label":"Technology","permalink":"/blog/tags/technology"}],"readingTime":0.58,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Technology"]},"prevItem":{"title":"C#: How to Select a random item from a List","permalink":"/blog/2012/08/29/select-a-random-item-from-a-list"},"nextItem":{"title":"Visual Studio 2008, 2010 Auto Uninstall Tools","permalink":"/blog/2012/08/22/visual-studio-2008-2010-auto-uninstall-tools"}},"content":"Double Robotics is an low-cost telepresence robot which can be used in education, museums, health care, Offices, Retail stores, Families.\\n\\n\\"Double allows you to move around and join people in\xa0_any_\xa0location, so you can participate in the conversations that happen in the lunch room or at the water fountain\\"\xa0Double Robotics said on its website\xa0[www.doublerobotics.com](http://www.doublerobotics.com/).\\n\\n\\"Double\\" that consists of a robotic, stripped-down Segway-like contraption with wheels, battery, iPad stand, and holder. Once the iPad is connected to the Double, the robot can be controlled remotely by someone using an app on another\xa0[iPad](http://reviews.cnet.com/ipad-3/), allowing that person to move around their virtual location.\\n\\n**PRICE**:\xa0$1,999 price tag, though that\'s a savings of $500 on the original retail price of $2,499.\\n\\n\\\\[youtube=[http://www.youtube.com/watch?v=yFMu3llAnaM](http://www.youtube.com/watch?v=yFMu3llAnaM)\\\\]"},{"id":"/2012/08/22/visual-studio-2008-2010-auto-uninstall-tools","metadata":{"permalink":"/blog/2012/08/22/visual-studio-2008-2010-auto-uninstall-tools","source":"@site/blog/2012-08-22-visual-studio-2008-2010-auto-uninstall-tools.md","title":"Visual Studio 2008, 2010 Auto Uninstall Tools","description":"If you\u2019ve any problems in\xa0uninstalling Visual Studio 2008, 2010\xa0from Add/ Remove programs in XP or from Programs and features in Windows\xa0 7 you can use\xa0Microsoft Visual Studio 2008 Auto uninstall utility\xa0to remove Visual Studio 2008 and\xa0Visual Studio 2010 Auto uninstall utility\xa0to remove Visual Studio 2010\xa0editions from your Computer .","date":"2012-08-22T00:00:00.000Z","formattedDate":"August 22, 2012","tags":[{"label":"Tools","permalink":"/blog/tags/tools"}],"readingTime":0.36,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Tools"]},"prevItem":{"title":"iPad head Robot with videoconferencing","permalink":"/blog/2012/08/22/ipad-head-robot-with-videoconferencing"},"nextItem":{"title":"what is the output","permalink":"/blog/2012/07/30/what-is-the-output-of-the-program-in-c"}},"content":"If you\u2019ve any problems in\xa0**uninstalling Visual Studio 2008, 2010**\xa0from Add/ Remove programs in XP or from Programs and features in Windows\xa0 7 you can use\xa0**Microsoft Visual Studio 2008 Auto uninstall utility**\xa0to remove Visual Studio 2008 and\xa0**Visual Studio 2010 Auto uninstall utility**\xa0to remove Visual Studio 2010\xa0editions from your Computer .\\n\\n## 1\\\\. Microsoft Visual Studio 2008\xa0Auto Uninstall Tool\\n\\n![](images/06fed-uninstall1.jpg)\\n\\n**[Download here](http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-components-postattachments/00-09-90-82-99/UninstallTool.exe)**\\n\\n## **2\\\\. Microsoft Visual Studio 2010 Auto Uninstall Tool**\\n\\n![](images/Visual-Studio-2010-Uninstall-Utility_thumb.png)\\n\\n**[Download here](http://archive.msdn.microsoft.com/vs2010uninstall/Release/ProjectReleases.aspx?ReleaseId=4321)**"},{"id":"/2012/07/30/what-is-the-output-of-the-program-in-c","metadata":{"permalink":"/blog/2012/07/30/what-is-the-output-of-the-program-in-c","source":"@site/blog/2012-07-30-what-is-the-output-of-the-program-in-c.md","title":"what is the output","description":"","date":"2012-07-30T00:00:00.000Z","formattedDate":"July 30, 2012","tags":[{"label":"C","permalink":"/blog/tags/c"}],"readingTime":0.12,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C"]},"prevItem":{"title":"Visual Studio 2008, 2010 Auto Uninstall Tools","permalink":"/blog/2012/08/22/visual-studio-2008-2010-auto-uninstall-tools"},"nextItem":{"title":"WPF - Simple App","permalink":"/blog/2012/07/26/wpf-simpleap"}},"content":"```c\\n# include <iostream>\\n\\nusing namespace std;\\n\\nint main() { \\n  int a=10,b=2; \\n  b = a+++a; \\n  cout<<b<<\\" \\"<<a<<\\"n\\"; \\n  return 0; \\n}\\n\\nOUTPUT 20 11 \\n```"},{"id":"/2012/07/26/wpf-simpleap","metadata":{"permalink":"/blog/2012/07/26/wpf-simpleap","source":"@site/blog/2012-07-26-wpf-simpleap.md","title":"WPF - Simple App","description":"Step by Step tutorial for creating Simple WPF Application","date":"2012-07-26T00:00:00.000Z","formattedDate":"July 26, 2012","tags":[{"label":"WPF","permalink":"/blog/tags/wpf"}],"readingTime":0.505,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["WPF"]},"prevItem":{"title":"what is the output","permalink":"/blog/2012/07/30/what-is-the-output-of-the-program-in-c"},"nextItem":{"title":"ATL Tutorial (DLL or Inproc Server)","permalink":"/blog/2012/07/08/atltutorial-step-by-step-dll-or-inproc-server"}},"content":"**Step by Step tutorial for creating Simple WPF Application**\\n\\n1. Open Visual Studio 2010\\n2. Go to \u2018File\u2019 Menu and select \u2018New Project\u2019\\n3. Select \u2018WPF Application\u2019 as shown below\\n4. Give the application name as \u201cFirstWPFApp\u201d\\n5. Visual studio generates two xaml files ( App.xaml , MainWindow.xaml) And corresponding code behind .cs files (App.xaml.cs, MainWindow.xaml.cs)\\n6. Drag and drop a Button from toolbox on to the Window and give names as \u2018btnClickMe\u2019 and Add an even to it by double click on the button.\\n7. Open MainWindow.xaml.cs in btnClickMe\\\\_Click event add MessageBox.Show(\\"Hello World !!\\");\\n8. Compile and Build the project."},{"id":"/2012/07/08/atltutorial-step-by-step-dll-or-inproc-server","metadata":{"permalink":"/blog/2012/07/08/atltutorial-step-by-step-dll-or-inproc-server","source":"@site/blog/2012-07-08-atltutorial-step-by-step-dll-or-inproc-server.md","title":"ATL Tutorial (DLL or Inproc Server)","description":"In this tutorial we will be creating","date":"2012-07-08T00:00:00.000Z","formattedDate":"July 8, 2012","tags":[{"label":"ATL","permalink":"/blog/tags/atl"},{"label":"Tutorial","permalink":"/blog/tags/tutorial"}],"readingTime":2.795,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["ATL","Tutorial"]},"prevItem":{"title":"WPF - Simple App","permalink":"/blog/2012/07/26/wpf-simpleap"},"nextItem":{"title":"Basics of ActiveX Controls","permalink":"/blog/2012/07/08/basics-of-activex-controls"}},"content":"In this tutorial we will be creating\\n\\n1. MathComp which is a DLL or Inproc server and exposes the Add and Sub functions.\\n\\n2. An MFC Dialog Based Application which acts like a Client for MathComp\\n    \\n**Steps for creating MathComp**\\n    \\n1. Open VS 2008\\n2. File->NewProject Click OK -> Click Next **Select Server type:** as DLL **Select Addition options:** as \'Allow merging of proxy/stub code\' and click Finish\\n    \\n3. Add Component Class\\n    \\n  Select `ATL simple Object`\\n\\nEnter Short name: \\"CMath\\" to add the component class -> Click \'Finish\'\\n\\n**Add a Method to ICMath Interface**\\n\\nThe classes created are shown below in the class diagram.\\n\\n**CCMath**\\n\\n```cpp\\n// CCMath\\nclass ATL_NO_VTABLE CCMath :\\n       public CComObjectRootEx<CComSingleThreadModel>,\\n       public CComCoClass<CCMath, &CLSID_CMath>,\\n       public IDispatchImpl<ICMath, &IID_ICMath, &LIBID_MathCompLib, /*wMajor =*/ 1, /*wMinor =*/ 0>\\n{\\npublic :\\n      CCMath()\\n      {\\n      }\\n\\nDECLARE_REGISTRY_RESOURCEID(IDR_CMATH)\\n\\nBEGIN_COM_MAP(CCMath)\\n      COM_INTERFACE_ENTRY(ICMath)\\n      COM_INTERFACE_ENTRY(IDispatch)\\nEND_COM_MAP()\\n\\nDECLARE_PROTECT_FINAL_CONSTRUCT()\\n\\n      HRESULT FinalConstruct()\\n      {\\n             return S_OK;\\n      }\\n\\n       void FinalRelease()\\n      {\\n      }\\n\\npublic :\\n\\n      STDMETHOD(Add)(DOUBLE i, DOUBLE j, DOUBLE* result);\\n      STDMETHOD(Sub)(DOUBLE i, DOUBLE j, DOUBLE* result);\\n};\\n\\nOBJECT_ENTRY_AUTO( __uuidof(CMath), CCMath)\\n\\nCMath.h\\n// CCMath\\nSTDMETHODIMP CCMath::Add(DOUBLE i, DOUBLE j, DOUBLE* result)\\n{\\n      *result = i + j;\\n       return S_OK;\\n}\\n\\nSTDMETHODIMP CCMath::Sub(DOUBLE i, DOUBLE j, DOUBLE* result)\\n{\\n      *result = i - j;\\n       return S_OK;\\n}\\n```\\n\\n**MathComp.idl**\\n\\n```cpp\\n// MathComp.idl : IDL source for MathComp\\n// This file will be processed by the MIDL tool to\\n// produce the type library (MathComp.tlb) and marshalling code.\\n\\nimport \\"oaidl.idl\\" ;\\nimport \\"ocidl.idl\\" ;\\n\\n[\\n       object ,\\n       uuid (F3BDE3CF-884A-461A-A377-1F96A72239B0),\\n       dual ,\\n       nonextensible ,\\n       helpstring (\\"ICMath Interface\\" ),\\n       pointer_default (unique )\\n]\\ninterface ICMath : IDispatch{\\n      [ id (1), helpstring ( \\"method Add\\")] HRESULT Add([ in ] DOUBLE i, [in ] DOUBLE j, [out ] DOUBLE* result);\\n      [ id (2), helpstring ( \\"method Sub\\")] HRESULT Sub([ in ] DOUBLE i, [in ] DOUBLE j, [out ] DOUBLE* result);\\n};\\n[\\n       uuid (44FF4D78-6AAD-4D2B-9150-DEBCCE79D8E0),\\n       version (1.0),\\n       helpstring (\\"MathComp 1.0 Type Library\\" )\\n]\\nlibrary MathCompLib\\n{\\n       importlib (\\"stdole2.tlb\\" );\\n      [\\n             uuid (4A8C8314-6C03-4AF7-96A1-9D6052A89363),\\n             helpstring (\\"CMath Class\\" )\\n      ]\\n       coclass CMath\\n      {\\n            [ default ] interface ICMath;\\n      };\\n};\\n```\\n\\nNOTE: Other classes are not shown here please Download the source for complete code.\\n\\n**Steps for creating MFC Client**\\n\\n1. Create an MFC Dialog based application\\n\\n2. Design the Dialog as shown below\\n\\n3. Add a Add button Handler (OnBnClickedButtonAdd) 4. Inside Add button handler add the below code\\n\\n```cpp\\n//Step1: import include .tlb file\\n#import \\"..MathCompMathComp.tlb\\" no_namespace\\n\\nvoid CCMathClientDlg::OnBnClickedButtonAdd()\\n{\\n      //Step2/////////////// Initialize the COM libraries ///////////////////////////////\\n     CoInitialize(NULL);\\n\\n      //Step3/////////////////////////Retriving CLSID from ProgID///////////////////////\\n      CLSID clsid;\\n      CLSIDFromProgID(OLESTR(\\"MathComp.CMath.1\\"),&clsid); // will be in CMath.rgs file\\n\\n      //Step4/////////////////////////////Creating instance of server///////////////////\\n      ICMath *pICMath;\\n\\n      HRESULT hr = CoCreateInstance(\\n                     clsid,             //The CLSID associated with the data and code that will be used to create the object.\\n                     NULL,              //If NULL, indicates that the object is not being created as part of an aggregate\\n                     CLSCTX_LOCAL_SERVER|CLSCTX_INPROC_SERVER, //ontext in which the code that manages the newly created object will run\\n                     __uuidof(ICMath),  //riid: A reference to the identifier of the interface to be used to communicate with the object.\\n                     (LPVOID*)&pICMath); //*ppv: Address of pointer variable that receives the interface pointer requested in riid.\\n                                       //Upon successful return, *ppv contains the requested interface pointer. Upon failure, *ppv contains NULL.\\n\\n      if (FAILED(hr))\\n      {\\n            AfxMessageBox(_T(\\"ICMath Failed\\"));\\n      }\\n\\n      //Step5/////////////////////////////Using COM Component//////////////////////////\\n      UpdateData(TRUE);\\n\\n      double res =0;\\n      pICMath->Add(m_i, m_j, &res);\\n      m_Result = res;\\n\\n      pICMath->Release(); // To avoid memory leak\\n      pICMath = NULL;\\n\\n      //Step6////////////////////////////Uninit\'ializing the COM libraries//////////////\\n      CoUninitialize();\\n\\n      UpdateData(FALSE);\\n}\\n```"},{"id":"/2012/07/08/basics-of-activex-controls","metadata":{"permalink":"/blog/2012/07/08/basics-of-activex-controls","source":"@site/blog/2012-07-08-basics-of-activex-controls.md","title":"Basics of ActiveX Controls","description":"Definition:\xa0ActiveX controls are COM components which are self-registering and Implements standard interfaces that deal specifically with GUI-based tasks such as rendering, sizing, activation, and property persistence.","date":"2012-07-08T00:00:00.000Z","formattedDate":"July 8, 2012","tags":[{"label":"ATL","permalink":"/blog/tags/atl"}],"readingTime":1.61,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["ATL"]},"prevItem":{"title":"ATL Tutorial (DLL or Inproc Server)","permalink":"/blog/2012/07/08/atltutorial-step-by-step-dll-or-inproc-server"},"nextItem":{"title":"Basics of ATL","permalink":"/blog/2012/07/08/basics-of-atl"}},"content":"**Definition:**\xa0ActiveX controls are COM components which are self-registering and Implements standard interfaces that deal specifically with GUI-based tasks such as rendering, sizing, activation, and property persistence.\\n\\nAn ActiveX control is anything you might see in the Toolbox of Visual studio (i.e. EditBox, combobox e.t.c) we can even use the Activex controls in web pages using\\n\\n**Connectable Object**\\n\\n_Connectable Object:_ is a COM Component or object that defines and uses an outgoing interface.\\n\\n_Sink_: A client that implements the outgoing interface of a component is called sink.\\n\\n**Control Container:** An application (Dialog or View ) that houses ActiveX control is called the control container. The control container communicates with a ActiveX control via methods and properties of a control.\\n\\n**ActiveX Control Properties:** There are two types of properties 1.Stock Properties 2.Custom properties\\n\\n1.Stock Properties Stack properties are common properties (Caption, foreground and background colors) that most controls expose. The COleControl data members provides stock properties implementation and also provides notification functions for the stock properties.\\n\\n2.Custom properties Custom properties are the properties which are specific to the control. There are four different ways to implement Custom properties. a. Member variable: b. Member variable with notification function: c. Get/Set methods d. Parameterized (property array)\\n\\n**ActiveX Control Methods** There are two types of methods 1.Stock methods 2.Custom methods\\n\\n1.Stock methods The COleControl provides the stock methods implementation. there are only two stock properties DoClick() - fires an event from the control Refresh() - updates the control appearence\\n\\n2.Custom methods Custom methods are the methods which are specific to the control.\\n\\n**ActiveX Control Events** A member function of an outgoing interface is called an event. An activeX controlcan notify the containerof a state change using events. There are two types of Events 1.Stock Events 2.Custom Events\\n\\n1.Stock Events The COleControl provides the common stock Events implementation like mouse button clicks and keyboard input.\\n\\n2.Custom Events Custom Events are the events which are specific to the control."},{"id":"/2012/07/08/basics-of-atl","metadata":{"permalink":"/blog/2012/07/08/basics-of-atl","source":"@site/blog/2012-07-08-basics-of-atl.md","title":"Basics of ATL","description":"What you will Learn Here\u2026","date":"2012-07-08T00:00:00.000Z","formattedDate":"July 8, 2012","tags":[{"label":"ATL","permalink":"/blog/tags/atl"}],"readingTime":1.74,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["ATL"]},"prevItem":{"title":"Basics of ActiveX Controls","permalink":"/blog/2012/07/08/basics-of-activex-controls"},"nextItem":{"title":"C-Pointers What is the output","permalink":"/blog/2012/07/08/c-pointers-what-is-the-output"}},"content":"**What you will Learn Here\u2026**\\n\\n1. Definition of ATL\\n2. ATL Features\\n3. Basic Definitions of ATL\\n4. ATL\'s Component Class Hierarchy\\n5. FAQ\\n\\n**1. Definition of ATL** The Active Template Library (ATL) is a set of template-based C++ classes that allows to create small, fast Component Object Model (COM) objects.\\n\\n**2. ATL Features** \\n1. ATL provides two types of wizards \\n\\na. AppWizard: AppWizard creates the initial ATL project. \\nb. Object Wizard: Object Wizard produces code for basic COM components.\\n\\n2. Built-in support for basic COM functionality such as IUnknown, class factories, IDispatch (automation), dual interfaces and self-registration.\\n    \\n3. Inbuilt Support for Microsoft\u2019s Interface Definition Language (IDL) which provides marshaling support for custom Vtable interfaces as well as component self-description through a type library.\\n    \\n4. Aggregation of objects and Automation support\\n    \\n5. Support for developing ActiveX controls.\\n    \\n\\n**3. Basic Definitions of ATL** \\n\\n1. _**Marshaling:**_ Marshaling is the process of transferring function arguments and return values across process and machine boundaries.\\n\\n2. The **_proxy/stub_** DLL implements standard marshaling for each of the component interfaces.\\n\\nCOM will use the IPC to communicate between client and server.\\n\\n- LPC is used when both reside on the same machine.\\n    \\n- RPC is used in a distributed networked\xa0environment\\n    \\n\\n**4. ATL\'s Component Class Hierarchy**\\n\\nATL never Creates the instance of the CoClass Directly. Instead ATL uses CComObject template class with \'CMathComp\' object type as a parameter to create our Object.\\n\\n_CComObject \\\\* pMath = new ComObject_\\n\\n**_CComObjectRootEx_** - Handles object reference count management. _**CComCoClass**_ - Provides methods for creating instances of a class and obtaining its properties it has createInstance() method which creates the instance of a COM Object through ClassFactory _**CComObject**_ - Implements IUnknown for an COM object.\\n\\n**5. FAQ**\\n\\n1. What is ATL ? check - 1. Definition of ATL\\n    \\n2. What is MIDL ? check - 2. ATL Features - 3 point\\n    \\n3. What are the featurs of ATL ? check - 2. ATL Feature\\n    \\n4. What is Marshiling ? check - 3. Basic Definitions of ATL - 1 point\\n    \\n5. Explain about\xa0ATL\'s Class Hierarchy? check - 4.ATL\'s Component Class Hierarchy"},{"id":"/2012/07/08/c-pointers-what-is-the-output","metadata":{"permalink":"/blog/2012/07/08/c-pointers-what-is-the-output","source":"@site/blog/2012-07-08-c-pointers-what-is-the-output.md","title":"C-Pointers What is the output","description":"FAQ-1","date":"2012-07-08T00:00:00.000Z","formattedDate":"July 8, 2012","tags":[{"label":"C","permalink":"/blog/tags/c"}],"readingTime":0.82,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C"]},"prevItem":{"title":"Basics of ATL","permalink":"/blog/2012/07/08/basics-of-atl"},"nextItem":{"title":"Find the length of the string in C","permalink":"/blog/2012/07/08/find-the-length-of-the-string-in-c"}},"content":"**FAQ-1**\\n\\n```c \\nvoid main() { \\n  int _p = 91; //compilation error \\n  printf(\\"%d n\\",_ p); \\n  printf(\\"%d n\\", p);\\n } \\n\\n  OUTPUT: Does not compile error C2440: \'initializing\' : cannot convert from \'int\' to \'int *\' \\n```\\n\\n**FAQ-2**\\n\\n```c \\nvoid main() { \\n  int i = 91; int *p = &i;\\n  printf(\\"%d n\\", *p); printf(\\"%d n\\", p);\\n} \\n\\nOUTPUT: 91 1245024 \\n```\\n\\n**FAQ-3**\\n\\n```c \\nvoid main() { \\n  int i = 91; \\n  int *p = &i;\\n\\n  printf(\\" p = %d n\\",p); \\n  printf(\\" p = %d n\\", p); \\n  printf(\\" &p = %d n\\", &p); \\n  printf(\\" (&p) = %d n\\", (&p)); \\n  printf(\\" ((&p)) = %d n\\", ((&p))); \\n}\\n\\nOUTPUT: i = 91 &i = 1245024 p = 91 p = 1245024 &p = 1245012 (&p) = 1245024 ((&p)) = 91\\n```\\n\\n**FAQ-4**\\n\\n```c \\nvoid main() { \\n  const int p; \\n  int i; \\n  i = 10; \\n  p = &i;\\n  printf(\\"p = %d, p = %d, i = %d\\", p, p, i);\\n}\\n  \\n  OUTPUT p = 1245012, p = 10, i = 10 \\n  ```"},{"id":"/2012/07/08/find-the-length-of-the-string-in-c","metadata":{"permalink":"/blog/2012/07/08/find-the-length-of-the-string-in-c","source":"@site/blog/2012-07-08-find-the-length-of-the-string-in-c.md","title":"Find the length of the string in C","description":"","date":"2012-07-08T00:00:00.000Z","formattedDate":"July 8, 2012","tags":[{"label":"C","permalink":"/blog/tags/c"}],"readingTime":0.27,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C"]},"prevItem":{"title":"C-Pointers What is the output","permalink":"/blog/2012/07/08/c-pointers-what-is-the-output"},"nextItem":{"title":"WPF Architecture","permalink":"/blog/2012/07/01/wpf-architecture"}},"content":"```c \\n//str_len returns the length of str \\nint str_len(char* str) { \\n  int len; len = 0;\\n   for (int i = 0; str[i] != \'\\\\\\\\0\'; i++) \\n   { \\n    len ++; \\n   } \\n   return len;\\n}\\n\\nvoid main() { \\n  char* website = \\"www.blogspot.com\\"; \\n  int len = str_len(website); \\n  printf(\\"length = %d n\\", len); \\n}\\n\\nOUTPUT length = 17 \\n```"},{"id":"/2012/07/01/wpf-architecture","metadata":{"permalink":"/blog/2012/07/01/wpf-architecture","source":"@site/blog/2012-07-01-wpf-architecture.md","title":"WPF Architecture","description":"The major code portions of WPF are.","date":"2012-07-01T00:00:00.000Z","formattedDate":"July 1, 2012","tags":[{"label":"WPF","permalink":"/blog/tags/wpf"}],"readingTime":0.61,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["WPF"]},"prevItem":{"title":"Find the length of the string in C","permalink":"/blog/2012/07/08/find-the-length-of-the-string-in-c"},"nextItem":{"title":"WPF Basics","permalink":"/blog/2012/07/01/wpf-basics"}},"content":"The major code portions of WPF are.\\n\\nPresentationFramework, PresentationCore, and milcore WPF.\xa0PresentationFramework, PresentationCore are managed components but only milcore is an unmanaged component Milcore is developed in unmanaged code in order to enable tight integration with DirectX. All display in WPF is done through the DirectX engine, allowing for efficient hardware and software rendering.\\n\\n**1. Presentation Framework**\\n\\nMost of the important WPF elements are in Presentation Framework. \xa0Presentation Framework\xa0Provides high-level services like layout, data binding, command handling.\\n\\n**2. Presentation Core**\\n\\nPresentation\xa0provides .NET API that uses rendering services for the MIL. During graphics programming we work with Core API.\\n\\n**3. Milcore**\\n\\nThe composition engine in milcore (Media Integration) is extremely performance sensitive. MIL takes Bitmaps, Vectors, and media render them to the DirectX"},{"id":"/2012/07/01/wpf-basics","metadata":{"permalink":"/blog/2012/07/01/wpf-basics","source":"@site/blog/2012-07-01-wpf-basics.md","title":"WPF Basics","description":"1. WPF Definition:","date":"2012-07-01T00:00:00.000Z","formattedDate":"July 1, 2012","tags":[{"label":"WPF","permalink":"/blog/tags/wpf"}],"readingTime":2.54,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["WPF"]},"prevItem":{"title":"WPF Architecture","permalink":"/blog/2012/07/01/wpf-architecture"},"nextItem":{"title":"COM Threading Models","permalink":"/blog/2012/06/19/threading-modelsapartment-model"}},"content":"## 1. WPF Definition:\\n\\n**W**indows **P**resentation **F**oundation is the successor to Windows Forms for Microsoft Desktop Application development. WPF uses XAML to create visible User Interface (UI) elements like (buttons, listboxes, editboxes, etc).\\n\\nWPF applications allows take advantage of the best attributes of diverse systems, such as DirectX (3-D and hardware acceleration), Adobe Flash (animation support), and HTML (declarative markup and easy deployment), styles, templates, documents and typograph.\\n\\n## 2. Advantages of WPF Applications:\\n\\nThe advantages of WPF applications include:\\n\\n1. **Declarative programming** \u2013 WPF uses Extensible Application Markup Language (XAML) declarative programming to define the layout of application objects and to represent 3-D models, among other things. This allows graphic designers to directly contribute to the look and feel of WPF applications.\\n\\n2. **Tight multimedia integration** \u2013WPF provides consistent programming model to create -D graphics, video, speech, and rich document viewing.\\n\\n3. **Resolution independence** \u2013WPF uses vector graphics to make the applications resolution-independent. WPF Applications can shrink or enlarge elements on the screen, independent of the screen\u2019s resolution.\\n\\n4. **Hardware acceleration** \u2013 WPF is built on top of Direct3D, which offloads work to graphics processing units (GPUs) instead of central processor units (CPUs). This provides WPF applications with the benefit of hardware acceleration, permitting smoother graphics and enhanced performance.\\n\\n5. **Rich composition and customization \u2013** WPF controls are easily customizable. We need not write any code to customize controls in very unique ways. WPF also lets you create skins for applications that have radically different looks.\\n\\n6. **Easy deployment** \u2013 WPF provides options for deploying traditional Windows applications (using Windows Installer or ClickOnce).\\n\\n7. **Culturally aware controls** \u2013 static text in controls and the return data for the String function are modified according to the culture and language specified by the end user\'s operating system.\\n\\n## 3. WPF vs WinForms:\\n\\nWPF is also more suitable for applications with rich media content than Windows Forms applications. This includes applications using:\\n\\n1. Multimedia and animation with DirectX technology\\n2. HD video playback\\n3. XPS documentation for high quality printing\\n4. Control rotation (Windows Forms applications support text rotation only)\\n\\nWPF is also great if you need to create a skinned user interface, or if you need to bind to XML data, or dynamically load portions of a user interface from a Web service, or want to create a desktop application with a Web-like navigation style.\\n\\nWPF stores its data more efficiently hence individual objects will be small, but there tend to be more objects in WPF than in WinForms .This would require more RAM than Windows Application.\\n\\nCPU utilization will go up compared to WinForms\xa0\xa0 WPF objects onscreen takes more CPU as normal WinForms rendering (again depending on the requirement).\\n\\n ## 4. XAML - eXtensible Application Markup Language:\\n\\n**Definition:** XAML (zammel) is an XML-based declarative markup. We can create visible User Interface (UI) elements like (buttons, listboxes, editboxes, etc) using XAML.\\n\\nXAML files are XML files .xaml file name extension encoded as UTF-8.\\n\\n**Example:**\\n\\nC# Button\xa0 Compile (Design-time) and Execute (Runtime) where as XAML Button Load, Parse,Render and Display"},{"id":"/2012/06/19/threading-modelsapartment-model","metadata":{"permalink":"/blog/2012/06/19/threading-modelsapartment-model","source":"@site/blog/2012-06-19-threading-modelsapartment-model.md","title":"COM Threading Models","description":"COM Threading Models / Apartment Model","date":"2012-06-19T00:00:00.000Z","formattedDate":"June 19, 2012","tags":[{"label":"COM","permalink":"/blog/tags/com"}],"readingTime":1.475,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["COM"]},"prevItem":{"title":"WPF Basics","permalink":"/blog/2012/07/01/wpf-basics"},"nextItem":{"title":"COM Threading Model vs Win32/MFC Threads","permalink":"/blog/2012/06/18/com-threading-model-vs-win32mfc-threads"}},"content":"COM Threading Models / Apartment Model\\n\\n**Definition**: Multithreading in COM is referred to as the apartment model in COM\\n\\n**_Apartment_**\\n\\nThe COM apartment is a conceptual entity that allows us to think about components and their clients in a logical way\\n\\n- An apartment is not a thread, but a thread belongs to only one apartment. \\n\\n- An apartment is not an instance of a COM object, but each COM instance belongs to only one apartment. \\n\\n- A process can have one or more apartments, depending on its implementation. \\n\\n- Apartments are created or entered by calling the CoInitialize or CoInitializeEx function. Each thread that calls CoInitialize(0) or CoInitializeEx( 0, COINIT\\\\_APARTMENTTHREADED )\\n\\n1. STA (Single Threaded Apartment) : Only One thread can join this Apartment.\\n2. MTA (MultiThreaded Apartment): Multiple threads can join this Apartment.\\n\\n**_Differences between STA and MTA_**\\n\\n<table border=\\"1\\" cellspacing=\\"0\\" cellpadding=\\"0\\"><tbody><tr><td valign=\\"top\\" width=\\"33\\"><strong>No</strong></td><td valign=\\"top\\" width=\\"515\\"><strong>Feature</strong></td><td valign=\\"top\\" width=\\"72\\"><strong>STA</strong></td><td valign=\\"top\\" width=\\"67\\"><strong>MTA</strong></td></tr><tr><td valign=\\"top\\" width=\\"33\\">1</td><td valign=\\"top\\" width=\\"515\\">Synchronization provided by COM</td><td valign=\\"top\\" width=\\"72\\">YES</td><td valign=\\"top\\" width=\\"67\\">NO</td></tr><tr><td valign=\\"top\\" width=\\"33\\">2</td><td valign=\\"top\\" width=\\"515\\">Uses Windows message queues</td><td valign=\\"top\\" width=\\"72\\">YES</td><td valign=\\"top\\" width=\\"67\\">NO</td></tr><tr><td valign=\\"top\\" width=\\"33\\">3</td><td valign=\\"top\\" width=\\"515\\">Can have multiple threads in an apartment</td><td valign=\\"top\\" width=\\"72\\">NO</td><td valign=\\"top\\" width=\\"67\\">YES</td></tr><tr><td valign=\\"top\\" width=\\"33\\">4</td><td valign=\\"top\\" width=\\"515\\">Must marshal interface pointers between the threads in the same apartment</td><td valign=\\"top\\" width=\\"72\\">N/A</td><td valign=\\"top\\" width=\\"67\\">YES</td></tr><tr><td valign=\\"top\\" width=\\"33\\">5</td><td valign=\\"top\\" width=\\"515\\">Must marshal interface pointers between apartments</td><td valign=\\"top\\" width=\\"72\\">YES</td><td valign=\\"top\\" width=\\"67\\">YES</td></tr><tr><td valign=\\"top\\" width=\\"33\\">6</td><td valign=\\"top\\" width=\\"515\\">Must call Coinitialize() in every thread that uses a COM Service</td><td valign=\\"top\\" width=\\"72\\">YES</td><td valign=\\"top\\" width=\\"67\\">YES</td></tr><tr><td valign=\\"top\\" width=\\"33\\">7</td><td valign=\\"top\\" width=\\"515\\">Perfomance</td><td valign=\\"top\\" width=\\"72\\">Slow</td><td valign=\\"top\\" width=\\"67\\">Fast</td></tr></tbody></table>\\n\\n**NOTE**: ATL object wizard allows you to set the threading model. The values can be\\n\\n<table border=\\"1\\" cellspacing=\\"0\\" cellpadding=\\"0\\"><tbody><tr><td valign=\\"top\\" width=\\"272\\">Threading Model</td><td valign=\\"top\\" width=\\"228\\">Description</td></tr><tr><td valign=\\"top\\" width=\\"272\\">Single / No Value</td><td valign=\\"top\\" width=\\"228\\">Object knows nothing about threads</td></tr><tr><td valign=\\"top\\" width=\\"272\\">Apartment</td><td valign=\\"top\\" width=\\"228\\">STA</td></tr><tr><td valign=\\"top\\" width=\\"272\\">Free</td><td valign=\\"top\\" width=\\"228\\">MTA</td></tr><tr><td valign=\\"top\\" width=\\"272\\">Both</td><td valign=\\"top\\" width=\\"228\\">Both STA &amp; MTA</td></tr></tbody></table>"},{"id":"/2012/06/18/com-threading-model-vs-win32mfc-threads","metadata":{"permalink":"/blog/2012/06/18/com-threading-model-vs-win32mfc-threads","source":"@site/blog/2012-06-18-com-threading-model-vs-win32mfc-threads.md","title":"COM Threading Model vs Win32/MFC Threads","description":"1. Win32/MFC Threads","date":"2012-06-18T00:00:00.000Z","formattedDate":"June 18, 2012","tags":[{"label":"COM","permalink":"/blog/tags/com"}],"readingTime":1.035,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["COM"]},"prevItem":{"title":"COM Threading Models","permalink":"/blog/2012/06/19/threading-modelsapartment-model"},"nextItem":{"title":"Unit Testing Native C++ App with out clr","permalink":"/blog/2012/06/18/unit-testing-nativE-C++"}},"content":"## 1. Win32/MFC Threads\\n\\nThere are two types of win32/MFC threads.\\n\\n1. **User-interface thread:** these types of threads are associated with one or more windows. These threads have message loops that keep the window alive and responsive to the users input.\\n\\n2. **Worker thread:** these threads are associated with background processing and are not associated with a window. These types oh threads does not use message loops.\\n\\nNOTE: A single process can have multiple user interface threads, multiple worker threads.\\n\\n## 2. COM Threads\\n\\nCOM uses same type of threads with different names.\\n\\n1. **Apartment threads (User Interface Thread):** This thread owns the component it creates. COM synchronizes, all calls to the component. The component does not need to be threading safe. COM does all of the marshaling and synchronization.\\n\\n2. **Free threads (Worker Thread):** COM does not synchronize the calls. Ant thread can access the component. These are free to use. The component must be threading safe. Marshalling is not necessary and component\u2019s job to synchronize.\\n\\nNOTE: One process can have single apartment or multiple apartments. In-proc server is example for single process with different apartments (server apartment, client apartment both are in same exe).\\n\\nOut of-proc server is example for single process with single thread."},{"id":"/2012/06/18/unit-testing-nativE-C++","metadata":{"permalink":"/blog/2012/06/18/unit-testing-nativE-C++","source":"@site/blog/2012-06-18-unit-testing-nativE-C++.md","title":"Unit Testing Native C++ App with out clr","description":"Unit Testing Native C++ Applications with out \u201c/clr\u201d flag or fall back to 3rd party frameworks","date":"2012-06-18T00:00:00.000Z","formattedDate":"June 18, 2012","tags":[{"label":"C++","permalink":"/blog/tags/c"},{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.355,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++","MFC"]},"prevItem":{"title":"COM Threading Model vs Win32/MFC Threads","permalink":"/blog/2012/06/18/com-threading-model-vs-win32mfc-threads"},"nextItem":{"title":"COM Containment and Aggregation","permalink":"/blog/2012/06/17/com-containment-and-aggregation"}},"content":"Unit Testing Native C++ Applications with out \u201c/clr\u201d flag or fall back to 3rd party frameworks\\n\\nVisual Studio 11 provides the ability to do\xa0Unit Testing Native C++ Applications with a new C++ unit testing framework shipping with VS 11.\\n\\nSo the C++ developers no longer need to use the \u201c/clr\u201d flag or fall back to 3rd party frameworks.\\n\\nTo learn more about native unit testing in Visual Studio 11, please visit\xa0[MSDN](http://aka.ms/vs11-unit-testing-native-code)."},{"id":"/2012/06/17/com-containment-and-aggregation","metadata":{"permalink":"/blog/2012/06/17/com-containment-and-aggregation","source":"@site/blog/2012-06-17-com-containment-and-aggregation.md","title":"COM Containment and Aggregation","description":"Containment and aggregation are techniques in which one component uses another component. Those two components are outer component, inner component. Outer component contains the inner component.","date":"2012-06-17T00:00:00.000Z","formattedDate":"June 17, 2012","tags":[{"label":"COM","permalink":"/blog/tags/com"}],"readingTime":0.505,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["COM"]},"prevItem":{"title":"Unit Testing Native C++ App with out clr","permalink":"/blog/2012/06/18/unit-testing-nativE-C++"},"nextItem":{"title":"N-Tier Architecture","permalink":"/blog/2012/06/07/n-tier-architecture "}},"content":"Containment and aggregation are techniques in which one component uses another component. Those two components are outer component, inner component. Outer component contains the inner component.\\n\\n<table border=\\"1\\" cellspacing=\\"0\\" cellpadding=\\"0\\"><tbody><tr><td valign=\\"top\\" width=\\"343\\"><strong>Containment</strong></td><td valign=\\"top\\" width=\\"343\\"><strong>Aggregation</strong></td></tr><tr><td valign=\\"top\\" width=\\"343\\">Outer component re implement the interface say IY of inner component by forwarding calls to the inner component.</td><td valign=\\"top\\" width=\\"343\\">Outer component will not re implement the interface say IY of inner component. Instead the outer component passes the inner component interface pointer say IY directly to the client.</td></tr><tr><td valign=\\"top\\" width=\\"343\\">Outer component is client to inner component</td><td valign=\\"top\\" width=\\"343\\">Inner component will be directly used by the client</td></tr></tbody></table>"},{"id":"/2012/06/07/n-tier-architecture ","metadata":{"permalink":"/blog/2012/06/07/n-tier-architecture ","source":"@site/blog/2012-06-07-n-tier-architecture .md","title":"N-Tier Architecture","description":"N-Tier Architecture with ASP.NET MVC3, WCF and Entity Framework.","date":"2012-06-07T00:00:00.000Z","formattedDate":"June 7, 2012","tags":[{"label":"ASP.Net","permalink":"/blog/tags/asp-net"}],"readingTime":0.195,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["ASP.Net"]},"prevItem":{"title":"COM Containment and Aggregation","permalink":"/blog/2012/06/17/com-containment-and-aggregation"},"nextItem":{"title":"Attended Microsoft Devcon 2012","permalink":"/blog/2012/04/21/devcon2012"}},"content":"N-Tier Architecture with ASP.NET MVC3, WCF and Entity Framework.\\n\\nAdvantage of using N-Tier software architecture are scalability, security, fault tolerance and etc.\xa0This article tries to introduce a decoupled, unit-testable, deployment-flexible, implementation-efficient and validation-flexible N-Tier architecture in .NET\\n\\n\\n[Continue reading\xa0\u2192](http://www.codeproject.com/Articles/434282/A-N-Tier-Architecture-Sample-with-ASP-NET-MVC3-WCF)"},{"id":"/2012/04/21/devcon2012","metadata":{"permalink":"/blog/2012/04/21/devcon2012","source":"@site/blog/2012-04-21-devcon2012.md","title":"Attended Microsoft Devcon 2012","description":"Today (21-April-2012) I had attended the DevCon 2012 hosted at Microsoft\'s Gachibowli Campus. \xa0DevCon is the event which concentrates on the latest technologies which are exclusively intended for .Net Developers.","date":"2012-04-21T00:00:00.000Z","formattedDate":"April 21, 2012","tags":[{"label":"Events","permalink":"/blog/tags/events"}],"readingTime":0.775,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Events"]},"prevItem":{"title":"N-Tier Architecture","permalink":"/blog/2012/06/07/n-tier-architecture "},"nextItem":{"title":"Part-1: C++, C#, Java Syntax Differences","permalink":"/blog/2012/04/12/syntax-1"}},"content":"Today (21-April-2012) I had attended the DevCon 2012 hosted at Microsoft\'s Gachibowli Campus. \xa0DevCon is the event which concentrates on the latest technologies which are exclusively intended for .Net Developers.\\n\\n[devcon2012](http://mugh.net/devcon2012/index.html)\\n\\n**The sessions that I had attended:**\\n\\n1. Developing a Windows 8\xa0Metro Style Application using HTML5 & JavaScript\\n    \\n    - Pratap Ladhani Architect - Microsoft\\n2. SQL Server 2012 code name Denali & Programmability Enhancements\\n    \\n    - Sandeep Kumar Mishra MPSIT Engineering - Microsoft IT\\n3. The New Age Application with HTML 5 and Kendo UI\\n    \\n    - Abhishek Kant Country Manager - Telerik, India\\n    - Svetlina Anti Software Developer - Telerik\\n4. Conceptual Framework of Data Binding in XAML\\n    \\n    - Miroslav Nedyalkov Senior Software Developer - Telerik\\n\\n**Interacted with:** Harish Ranganthan who is a \'Microsft Developer Evangelist\' thanks to Harish as he given me a chance to explore his Windows 8 slate\\n\\n- Abhijit Jana Microsoft Associate Consultant\\n    \\n- Shudhakar Microsoft\\n    \\n- Shravan Kumar Kasagoni Microsoft MVP"},{"id":"/2012/04/12/syntax-1","metadata":{"permalink":"/blog/2012/04/12/syntax-1","source":"@site/blog/2012-04-12-syntax-1.md","title":"Part-1: C++, C#, Java Syntax Differences","description":"C++ Main Function","date":"2012-04-12T00:00:00.000Z","formattedDate":"April 12, 2012","tags":[{"label":"C++","permalink":"/blog/tags/c"},{"label":"CSharp","permalink":"/blog/tags/c-sharp"},{"label":"Java","permalink":"/blog/tags/java"}],"readingTime":0.755,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++","CSharp","Java"]},"prevItem":{"title":"Attended Microsoft Devcon 2012","permalink":"/blog/2012/04/21/devcon2012"},"nextItem":{"title":"Part-2: C++, C#, Java Syntax Differences","permalink":"/blog/2012/04/12/syntax-2"}},"content":"## C++ Main Function\\n\\n1. Main function with out any arguments\\n\\n```cpp\\nvoid main() { \\n  cout<<\\"Hello World !!!\\"; \\n} \\n```\\n\\n2. Main function with commandline Arguments \\n\\n```cpp \\nint main(int argc, char* argv[]) {\\n   cout<<\\"Hello World !!!\\"; \\n   return 1; \\n} \\n``` \\n\\n## C# Main Function \\n1. Main function with out any arguments \\n\\n```cpp\\nusing System; \\nnamespace CSharpSample { \\n  class Program { \\n  static void Main() { \\n    Console.WriteLine(\\"Hello World !!!\\"); \\n    } \\n  } \\n} \\n``` \\n\\n2. Main Function with commandline Arguments \\n\\n```cpp\\n using System; \\n namespace CSharpSample { \\n  class Program { \\n    static int Main(string[] args) {\\n       Console.WriteLine(\\"Hello World !!!\\"); \\n       return 1; \\n       } \\n   } \\n} \\n``` \\n\\n## Java Main function \\n\\n1. Main function with out any arguments \\n Not possible Compilation error java.lang.NoSuchMethodError: main Exception in thread \\"main\\" Main function with commandline Arguments \\n\\n2. Main Function with commandline Arguments \\n\\n```java\\npublic class Program { \\n  public static void main(String args[]) {\\n     System.out.println( \\"Hello, World !!!\\" ); \\n     } \\n} \\n```"},{"id":"/2012/04/12/syntax-2","metadata":{"permalink":"/blog/2012/04/12/syntax-2","source":"@site/blog/2012-04-12-syntax-2.md","title":"Part-2: C++, C#, Java Syntax Differences","description":"[Part-2: Basic Input/Output] C++, C#, Java Syntax Differences","date":"2012-04-12T00:00:00.000Z","formattedDate":"April 12, 2012","tags":[{"label":"C++","permalink":"/blog/tags/c"},{"label":"CSharp","permalink":"/blog/tags/c-sharp"},{"label":"Java","permalink":"/blog/tags/java"}],"readingTime":1.42,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++","CSharp","Java"]},"prevItem":{"title":"Part-1: C++, C#, Java Syntax Differences","permalink":"/blog/2012/04/12/syntax-1"},"nextItem":{"title":"Part-3: C++, C#, Java Syntax Differences","permalink":"/blog/2012/04/12/syntax-3"}},"content":"[Part-2: Basic Input/Output] C++, C#, Java Syntax Differences\\n\\n## Basic Input/Output\\n\\nUsing the standard input and output library, we will be able to interact with the user by printing messages on the screen and getting the user\'s input from the keyboard.\\n\\n**1. C++** \\n- Input \xa0 \xa0- cin>> \\n- Output   - cout<<\\n\\n```cpp\\n// Print Greetings Program\\n// Basic Input/Output\\nvoid PrintGreeting(char name[])\\n{\\n    cout<<\\"Hello \\" << name <<endl;\\n}\\n\\nint main(int argc, char* argv[])\\n{\\n    char name[100\\\\];\\n\\n    cout<<\\"Enter Your Name:\\"; //cout -> Standard Output\\n    cin>>name;                //cin  -> Standard Input \\n\\n    PrintGreeting(name);\\n\\n    return 1;\\n}\\n\\n/* OUT PUT\\nEnter Your Name:nagvbt\\nHello nagvbt\\n*/\\n```\\n\\n**2. C#**\\n\\n- Input \xa0-\xa0Console.WriteLine() \\n- Output -\xa0Console.ReadLine()\\n\\n```cpp\\n// Print Greetings Program\\n// Basic Input/Output\\nnamespace CSharpSample\\n{\\n    class Program\\n    {\\n        static void PrintGreeting(char[] name)\\n        {\\n           Console.WriteLine(\\"Hello \\"+ new string(name));\\n        }\\n\\n        static int Main(string[] args)\\n        {\\n            char[] name;\\n\\n            Console.WriteLine(\\"Enter Your Name:\\"); //Console.WriteLine() -> Standard Output\\n            string sName = Console.ReadLine();     //Console.ReadLine()  -> Standard Input\\n            name = sName.ToCharArray();\\n\\n            PrintGreeting(name);\\n\\n            return 1;\\n        }\\n    }\\n}\\n\\n/* * OUTPUT * *\\nEnter Your Name:\\nNag VBT\\nHello Nag VBT\\n* * * * * * * */\\n```\\n\\n**3. Java**\\n\\n\\nInput - System.out.println() \\n\\nOutput - System.in.read()\\n\\n```java\\nimport java.io.IOException;\\n\\nclass Program\\n{\\n    public static void PrintGreeting(char[] name)\\n    {\\n         System.out.println(\\"Hello \\"+ new String(name));\\n    }\\n\\n    public static void main(String[] args)\\n    {\\n        char[] name;\\n\\n        System.out.print(\\"Enter Your Name:\\"); //System.out.println -> Standard Output\\n\\n        String sName = \\"\\";\\n        int tmp;\\n        try\\n        {\\n            while((tmp = System.in.read ()) != \'n\')  // System.in.read   -> Standard Input\\n            {\\n                char c = (char) tmp;\\n                sName = sName + c;\\n            }\\n\\n        }\\n        catch (IOException e)\\n        {\\n            e.printStackTrace();\\n        }\\n\\n        name = sName.toCharArray();\\n        PrintGreeting(name);\\n     }\\n}\\n\\n/* OUTPUT\\nEnter Your Name:Nag VBT\\nHello Nag VBT\\n*/\\n```"},{"id":"/2012/04/12/syntax-3","metadata":{"permalink":"/blog/2012/04/12/syntax-3","source":"@site/blog/2012-04-12-syntax-3.md","title":"Part-3: C++, C#, Java Syntax Differences","description":"Comments, Methods, Class, objects Syntax Differences","date":"2012-04-12T00:00:00.000Z","formattedDate":"April 12, 2012","tags":[{"label":"C++","permalink":"/blog/tags/c"},{"label":"CSharp","permalink":"/blog/tags/c-sharp"},{"label":"Java","permalink":"/blog/tags/java"}],"readingTime":0.845,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++","CSharp","Java"]},"prevItem":{"title":"Part-2: C++, C#, Java Syntax Differences","permalink":"/blog/2012/04/12/syntax-2"},"nextItem":{"title":"\'Factory Method\' Design Pattern using simple program","permalink":"/blog/2012/04/06/factorymethod"}},"content":"Comments, Methods, Class, objects Syntax Differences\\n\\n**Comments** Same for C++, C#, Java\\n\\n1. Single line comments \xa0- //\\n    \\n2. Multi line comments\\n    \\n\\n/ _This is a a multiline comment_ /\\n\\n**Method/Function declarations**\\n\\nSame, except that in C# and in Java, function must always be part of a class, and must prefix with access specifier - public/private/protected\\n\\ncheck main function for [reference](http://nagvbt.blogspot.com/2012/04/13/syntaxpart/) \\n\\n## Class declarations\\n\\nSame\xa0but c# and Java does not require a semicolon after closing bracket \'}\'\\n\\n*** C++ ***\\n\\n```cpp \\nclass myMath { \\n  //Methods \\n  public: int Add(int i, int j) \\n  { \\n    return i + j;\\n  } \\n};\\n```\\n\\n*** C#/Java ***\\n\\n```cpp\\n class myMath {\\n  //Methods \\n  public int Add(int i, int j) \\n  { \\n    return i + j; \\n  } \\n}\\n```\\n\\n**Object declaration/creation** **C++**\\n\\nObject creation on Stack\\n\\n```cpp \\nmyMath obj; //on stack \\nint result = obj.Add(1,2); \\n```\\n\\nObject creation on Heap\\n\\n```cpp \\nmyMath \\\\*pobj = new myMath(); //on heap \\nint result = obj->Add(1,2); \\ndelete pobj; \\n```\\n\\n**Java/C#**\\n\\n```cpp \\nmyMath obj = new myMath(); \\nint result = obj.Add(1,2); \\n```"},{"id":"/2012/04/06/factorymethod","metadata":{"permalink":"/blog/2012/04/06/factorymethod","source":"@site/blog/2012-04-06-factorymethod.md","title":"\'Factory Method\' Design Pattern using simple program","description":"Definition:","date":"2012-04-06T00:00:00.000Z","formattedDate":"April 6, 2012","tags":[{"label":"C++","permalink":"/blog/tags/c"},{"label":"Design Patterns","permalink":"/blog/tags/design-patterns"}],"readingTime":0.81,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++","Design Patterns"]},"prevItem":{"title":"Part-3: C++, C#, Java Syntax Differences","permalink":"/blog/2012/04/12/syntax-3"},"nextItem":{"title":"\'Singleton\' Design Pattern using simple program","permalink":"/blog/2012/04/06/singleton-design-pattern-using-simple-program"}},"content":"**Definition:**\\n\\nCreates an instance of several derived classes. or Define an interface for creating an object, but let subclasses decide which class to instantiate. Factory Method lets a class defer instantiation to subclasses.\\n\\n**Program:**\\n\\n```cpp\\n#include \\"iostream\\"\\nusing namespace std;\\n\\nclass Product\\n{\\npublic:\\n    virtual void Show() = 0;\\n};\\n\\nclass ConcreteProductA : public Product\\n{\\npublic:\\n    virtual void Show()\\n    {\\n      cout<<\\"ConcreteProductA\\"<<endl;\\n    }\\n};\\n\\nclass ConcreteProductB : public Product\\n{\\npublic:\\n    virtual void Show()\\n    {\\n      cout<<\\"ConcreteProductB\\"<<endl;\\n    }\\n};\\n\\nclass Creator\\n{\\npublic:\\n    virtual Product* FactoryMethod() = 0;\\n};\\n\\nclass ConcreteCreatorA : public Creator\\n{\\npublic:\\n    ConcreteCreatorA() {}\\n    virtual Product* FactoryMethod()\\n    {\\n      return new ConcreteProductA();\\n    }\\n};\\n\\nclass ConcreteCreatorB : public Creator\\n{\\npublic:\\n    virtual Product* FactoryMethod()\\n    {\\n      return new ConcreteProductB();\\n    }\\n};\\n\\nvoid main()\\n{\\n  Creator* creators[2];\\n\\n  creators[0] =  new ConcreteCreatorA();\\n  creators[1] =  new ConcreteCreatorB();\\n\\n  for (int i=0; i < 2; i++)    {     Product* product = creators[i]->FactoryMethod();\\n    cout<<\\"Created \\"<<Show();\\n  }\\n\\n  getchar();\\n}\\n\\n/*\\nOUT PUT\\n-------\\nCreated\\nConcreteProductA\\nCreated\\nConcreteProductB\\n*/\\n```"},{"id":"/2012/04/06/singleton-design-pattern-using-simple-program","metadata":{"permalink":"/blog/2012/04/06/singleton-design-pattern-using-simple-program","source":"@site/blog/2012-04-06-singleton-design-pattern-using-simple-program.md","title":"\'Singleton\' Design Pattern using simple program","description":"Definition: Ensure a class only has one instance and provide a global point of access to it.","date":"2012-04-06T00:00:00.000Z","formattedDate":"April 6, 2012","tags":[{"label":"C++","permalink":"/blog/tags/c"},{"label":"Design Patterns","permalink":"/blog/tags/design-patterns"}],"readingTime":0.44,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++","Design Patterns"]},"prevItem":{"title":"\'Factory Method\' Design Pattern using simple program","permalink":"/blog/2012/04/06/factorymethod"},"nextItem":{"title":"\u2018AbstractFactory\u2019 Design Pattern using simple program","permalink":"/blog/2012/04/04/abstractfactory-designpatter"}},"content":"**Definition:** Ensure a class only has one instance and provide a global point of access to it.\\n\\n\\n**Program:**\\n\\n```cpp\\n#include \\"iostream\\"\\nusing namespace std;\\n\\nclass Singleton\\n{\\nprivate:\\n    static Singleton* instance;\\n    Singleton() {}\\n\\npublic:\\n    static Singleton* Instance()\\n    {\\n        if(instance == NULL)\\n        {\\n            instance = new Singleton();\\n        }\\n        return instance;\\n    }\\n\\n    void Show()\\n    {\\n        cout&lt;&lt;\\"Singleton Class\\"&lt;&lt;endl;\\n    }\\n};\\n\\nSingleton* Singleton::instance = NULL;\\n\\nint main()\\n{\\n    Singleton* obj1 = Singleton::Instance();\\n    obj1->Show();\\n\\n    Singleton* obj2 = Singleton::Instance();\\n    obj2->Show();\\n\\n    getchar();\\n\\n    return 0;\\n}\\n\\n/*\\nOUT PUT\\n-------\\nSingleton Class\\nSingleton Class\\n*/\\n```"},{"id":"/2012/04/04/abstractfactory-designpatter","metadata":{"permalink":"/blog/2012/04/04/abstractfactory-designpatter","source":"@site/blog/2012-04-04-abstractfactory-designpatter.md","title":"\u2018AbstractFactory\u2019 Design Pattern using simple program","description":"Definition: Provide an interface for creating families of related or dependent objects without specifying their concrete classes.","date":"2012-04-04T00:00:00.000Z","formattedDate":"April 4, 2012","tags":[{"label":"C++","permalink":"/blog/tags/c"},{"label":"Design Patterns","permalink":"/blog/tags/design-patterns"}],"readingTime":1.29,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++","Design Patterns"]},"prevItem":{"title":"\'Singleton\' Design Pattern using simple program","permalink":"/blog/2012/04/06/singleton-design-pattern-using-simple-program"},"nextItem":{"title":"Simple LinkedList program in C++","permalink":"/blog/2012/04/04/linkedlist"}},"content":"**Definition:** Provide an interface for creating families of related or dependent objects without specifying their concrete classes.\\n\\n**Program:**\\n\\n```cpp\\n\\n#include \\"iostream\\"\\nusing namespace std;\\n\\n// Abstract Factory pattern\\nclass AbstractProductA\\n{\\npublic:\\n  virtual void Show() = 0;\\n};\\n\\nclass AbstractProductB\\n{\\npublic:\\n  virtual void Show() = 0;\\n};\\n\\nclass AbstractFactory\\n{\\npublic:\\n virtual AbstractProductA* CreateProductA() = 0;\\n virtual AbstractProductB* CreateProductB() = 0;\\n};\\n\\nclass ProductA1 : public AbstractProductA\\n{\\npublic:\\n  virtual void Show()\\n  {\\n    cout<<\\"ProductA1 Show\\"<<endl;>\\n  }\\n};\\n\\nclass ProductB1 : public AbstractProductB\\n{\\npublic:\\n  virtual void Show()\\n  {\\n    cout<<\\"ProductB1 Show\\"<<endl;>\\n  }\\n};\\n\\nclass ProductA2 : public AbstractProductA\\n{\\npublic:\\n  virtual void Show()\\n  {\\n    cout<<\\"ProductA2 Show\\"<<endl;\\n  }\\n};\\n\\nclass ProductB2 : public AbstractProductB\\n{\\npublic:\\n  virtual void Show()\\n  {\\n    cout<<\\"ProductB2 Show\\"<<endl;\\n  }\\n};\\n\\nclass ConcreteFactory1 : public AbstractFactory\\n{\\npublic:\\n    virtual AbstractProductA* CreateProductA()\\n    {\\n      return new ProductA1();\\n    }\\n\\n    virtual AbstractProductB* CreateProductB()\\n    {\\n      return new ProductB1();\\n    }\\n};\\n\\nclass ConcreteFactory2 : public AbstractFactory\\n{\\npublic:\\n    virtual AbstractProductA* CreateProductA()\\n    {\\n      return new ProductA2();\\n    }\\n\\n    virtual AbstractProductB* CreateProductB()\\n    {\\n      return new ProductB2();\\n    }\\n};\\n\\nclass Client\\n{\\nprivate:\\n  AbstractProductA* _abstractProductA;\\n  AbstractProductB* _abstractProductB;\\n\\npublic:\\n    Client(AbstractFactory\\\\* factory)\\n    {\\n      _abstractProductB = factory->CreateProductB();\\n      _abstractProductA = factory->CreateProductA();\\n    }\\n\\n    void Run()\\n    {\\n      _abstractProductA->Show();\\n      _abstractProductB->Show();\\n\\n      delete _abstractProductA;\\n      delete _abstractProductB;\\n    }\\n};\\n\\nvoid main()\\n{\\n  // Abstract factory #1\\n  AbstractFactory* factory1 = new ConcreteFactory1();\\n  Client* client1 = new Client(factory1);\\n  client1->Run();\\n\\n  delete factory1;\\n  delete client1;\\n\\n  // Abstract factory #2\\n  AbstractFactory* factory2 = new ConcreteFactory2();\\n  Client* client2 = new Client(factory2);\\n  client2->Run();\\n\\n  delete factory2;\\n  delete client2;\\n\\n  getchar();\\n}\\n\\n/*\\nOUT PUT\\n-------\\n\\\\[ProductA1\\\\] Show\\n\\\\[ProductB1\\\\] Show\\n\\\\[ProductA2\\\\] Show\\n\\\\[ProductB2\\\\] Show\\n\\\\*/\\n\\n```"},{"id":"/2012/04/04/linkedlist","metadata":{"permalink":"/blog/2012/04/04/linkedlist","source":"@site/blog/2012-04-04-linkedlist.md","title":"Simple LinkedList program in C++","description":"Definition:","date":"2012-04-04T00:00:00.000Z","formattedDate":"April 4, 2012","tags":[{"label":"Data Structures","permalink":"/blog/tags/data-structures"},{"label":"C++","permalink":"/blog/tags/c"}],"readingTime":2.695,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Data Structures","C++"]},"prevItem":{"title":"\u2018AbstractFactory\u2019 Design Pattern using simple program","permalink":"/blog/2012/04/04/abstractfactory-designpatter"},"nextItem":{"title":"\'Builder\' Design Pattern using simple program","permalink":"/blog/2012/04/03/builderdesignpatter"}},"content":"**Definition:**\\n\\nA linked list is a data structure that consists of a sequence of data records such that in each record there is a field that contains a reference (i.e., a link) to the next record in the sequence.\\n\\n```cpp\\n#include \\"stdafx.h\\"\\n#include \\"iostream\\"\\nusing namespace std;\\n\\nclass LinkList\\n{\\nprivate:\\n      struct Node\\n      {\\n        int data;\\n        Node* link;\\n      }*p;\\n\\npublic:\\n      LinkList();\\n      ~LinkList();\\n\\n       void Print();         // Prints the contents of linkedlist\\n       void Append(int num); // Adds a new node at the end of the linkedlist\\n       void Delete(int num); // Deletes the specified node from the linkedlist\\n\\n       void AddatBeg(int num);// Adds a new node at the beginning of the linkedlist\\n       void AddAfter(int c, int num); // Adds a new node after specified number of nodes\\n       int Count();          // Counts number of nodes present in the linkedlist\\n\\n};\\n\\nLinkList::LinkList()\\n{\\n  p = NULL;\\n}\\n\\nLinkList::~LinkList()\\n{\\n  if (p == NULL)\\n        return;\\n\\n  Node* tmp;\\n  while(p != NULL)\\n  {\\n       tmp = p->link ;\\n       delete p;\\n       p = tmp;\\n  }\\n}\\n\\n// Prints the contents of linkedlist\\nvoid LinkList::Print()\\n{\\n  if (p == NULL)\\n  {\\n        cout<< \\"EMPTY\\";\\n        return;\\n  }\\n\\n  //Traverse\\n  Node* tmp = p;\\n  while(tmp != NULL)\\n  {\\n       cout<data<<endl;\\n       tmp = tmp->link ;\\n  }\\n}\\n\\n// Adds a new node at the end of the linkedlist\\nvoid LinkList::Append(int num)\\n{\\n      Node *newNode;\\n\\n      newNode = new Node;\\n      newNode->data = num;\\n      newNode->link = NULL;\\n\\n       if(p == NULL)\\n      {\\n       //create first node\\n         p = newNode;\\n      }\\n       else\\n      {\\n             //Traverse\\n            Node *tmp = p;\\n             while(tmp->link != NULL)\\n            {\\n                  tmp = tmp->link;\\n            }\\n\\n             //add node to the end\\n        tmp->link = newNode;\\n      }\\n}\\n\\n// Deletes the specified node from the linkedlist\\nvoid LinkList::Delete( int num )\\n{\\n   Node *tmp;\\n\\n   tmp = p;\\n   //If node to be delete is first node\\n   if( tmp->data == num )\\n   {\\n      p = tmp->link;\\n      delete tmp;\\n      return;\\n   }\\n\\n   // traverse list till the last but one node is reached\\n   Node *tmp2 = tmp;\\n   while( tmp!=NULL )\\n   {\\n      if( tmp->data == num )\\n      {\\n         tmp2->link = tmp->link;\\n         delete tmp;\\n         return;\\n      }\\n\\n      tmp2 = tmp;\\n      tmp = tmp->link;\\n   }\\n   cout<< \\"nElement \\"<<num<<\\" not Found.\\" ;\\n}\\n\\n// Adds a new node at the beginning of the linkedlist\\nvoid LinkList::AddatBeg(int num)\\n{\\n      Node *tmp;\\n\\n       //add new node\\n      tmp = new Node;\\n      tmp->data = num;\\n      tmp->link = p;\\n      p = tmp;\\n}\\n\\n//Adds a new node after specified number of nodes\\nvoid LinkList::AddAfter(int c, int num)\\n{\\n      Node *tmp;\\n      Node *tmp2;\\n       int i;\\n       //Skip to the desired portion\\n       for( i = 0, tmp = p; i\\n       {\\n            tmp = tmp->link;\\n\\n             //if end of linked list is encountered\\n             if(tmp == NULL)\\n            {\\n                  cout<<endl<< \\"There are less than \\"<<c<<\\" elements\\" ;\\n                   return;\\n            }\\n      }\\n\\n       //insert new node\\n      tmp2 = new Node;\\n      tmp2->data = num;\\n      tmp2->link = tmp->link;\\n      tmp->link = tmp2;\\n}\\n\\n// Counts number of nodes present in the linkedlist\\nint LinkList::Count()\\n{\\n      Node *tmp;\\n       int c = 0;\\n\\n       //Traverse the entire Linked List\\n       for (tmp = p; tmp != NULL; tmp = tmp->link)\\n            c++;\\n\\n       return (c);\\n}\\n\\nvoid main()\\n{\\n      LinkList* pobj = new LinkList();\\n      pobj->Append(11);\\n      pobj->Append(22);\\n      pobj->Append(33);\\n      pobj->Delete(33);\\n      pobj->AddatBeg(44);\\n      pobj->AddAfter(1, 55);\\n      pobj->Print();\\n      cout<<endl<< \\"no. of elements in linked list=\\"<<pobj->Count()<<endl;\\n\\n       delete pobj;\\n}\\n\\n/*\\nOUTPUT\\n----------------\\n44\\n11\\n55\\n22\\n\\nNo. of elements in linked list = 4\\n*/\\n```"},{"id":"/2012/04/03/builderdesignpatter","metadata":{"permalink":"/blog/2012/04/03/builderdesignpatter","source":"@site/blog/2012-04-03-builderdesignpatter.md","title":"\'Builder\' Design Pattern using simple program","description":"Definition:","date":"2012-04-03T00:00:00.000Z","formattedDate":"April 3, 2012","tags":[{"label":"C++","permalink":"/blog/tags/c"},{"label":"Design Patterns","permalink":"/blog/tags/design-patterns"}],"readingTime":0.915,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++","Design Patterns"]},"prevItem":{"title":"Simple LinkedList program in C++","permalink":"/blog/2012/04/04/linkedlist"},"nextItem":{"title":"Simple Queue program in C++","permalink":"/blog/2012/04/02/queue"}},"content":"**Definition:**\\n\\nSeparate the construction of a complex object from its representation so that the same construction process can create different representations.\\n\\n**Program:**\\n\\n```cpp\\n#include \\"iostream\\"\\nusing namespace std;\\n\\n// Builder pattern -- Creational example\\nclass Product\\n{\\nprivate:\\n    char* _parts[10];\\n    int i;\\n\\npublic:\\n    Product()\\n    {\\n      i = 0;\\n    }\\n\\n    void Add(char* part)\\n    {\\n      _parts[i] = part;\\n      i++;\\n    }\\n\\n    void Show()\\n    {\\n        cout<\\n      for(int j = 0; j    {\\n         cout<<_parts[j]<BuildPartA();\\n      builder->BuildPartB();\\n    }\\n};\\n\\nclass ConcreteBuilder1 : public Builder\\n{\\n    private:\\n      Product _product;\\n\\n    public:\\n    virtual void BuildPartA()\\n    {\\n      _product.Add(\\"PartA\\");\\n    }\\n\\n    virtual void BuildPartB()\\n    {\\n      _product.Add(\\"PartB\\");\\n    }\\n\\n    virtual Product GetResult()\\n    {\\n      return _product;\\n    }\\n};\\n\\nclass ConcreteBuilder2 : public Builder\\n{\\n    private:\\n      Product _product;\\n\\n    public:\\n    virtual void BuildPartA()\\n    {\\n      _product.Add(\\"PartX\\");\\n    }\\n\\n    virtual void BuildPartB()\\n    {\\n      _product.Add(\\"PartY\\");\\n    }\\n\\n    virtual Product GetResult()\\n    {\\n      return _product;\\n    }\\n};\\n\\nvoid main()\\n{\\n  // Create director and builders\\n  Director director;\\n\\n  ConcreteBuilder1 b1;\\n  ConcreteBuilder2 b2;\\n\\n  Product p1;\\n  Product p2;\\n\\n  // Construct product p1\\n  director.Construct(&amp;b1);\\n  p1 = b1.GetResult();\\n  p1.Show();\\n\\n  // Construct product p2\\n  director.Construct(&amp;b2);\\n  p2 = b2.GetResult();\\n  p2.Show();\\n\\n  getchar();\\n}\\n\\n/*\\nOUT PUT\\n\\nProduct Parts:\\nPartA\\nPartB\\n\\nProduct Parts:\\nPartX\\nPartY\\n*/\\n```"},{"id":"/2012/04/02/queue","metadata":{"permalink":"/blog/2012/04/02/queue","source":"@site/blog/2012-04-02-queue.md","title":"Simple Queue program in C++","description":"Definition:","date":"2012-04-02T00:00:00.000Z","formattedDate":"April 2, 2012","tags":[{"label":"Data Structures","permalink":"/blog/tags/data-structures"},{"label":"C++","permalink":"/blog/tags/c"}],"readingTime":0.87,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Data Structures","C++"]},"prevItem":{"title":"\'Builder\' Design Pattern using simple program","permalink":"/blog/2012/04/03/builderdesignpatter"},"nextItem":{"title":"Simple Stack Program in C++","permalink":"/blog/2012/04/02/stack"}},"content":"**Definition:**\\n\\nA Queue\xa0is a data structure in which addition of new element takes place at the end called _**rear**_ of Queue and\xa0deletion of existing element takes place at the other end called _**front**_ of Queue\xa0.\\n\\n**Principle:**\\n\\nQueue\xa0works on the **FIFO** \u2013 **F**irst\xa0**I**n **F**irst **O**ut principle\\n\\n```cpp\\n#include \\"stdafx.h\\"\\n#include \\"iostream\\"\\nusing namespace std;\\n\\n#define MAX 10\\n\\nclass Queue\\n{\\nprivate:\\n       int arr[MAX];\\n       int front, rear;\\n\\npublic:\\n      Queue()\\n      {\\n            front = -1;\\n            rear  = -1;\\n\\n      }\\n\\n       void Add(int item)\\n      {\\n             if(rear == MAX-1)\\n            {\\n                  cout<<endl<< \\"Queue is full\\";\\n                   return;\\n            }\\n\\n            rear++;\\n            arr[rear] = item;\\n\\n             if( front == -1 )\\n                  front = 0;\\n      }\\n\\n       int Delete()\\n      {\\n             if(front == -1)\\n            {\\n                  cout<<endl<< \\"Queue is empty\\";\\n                   return NULL;\\n            }\\n\\n        int data = arr[front];\\n\\n             if( front == rear)\\n                  front = rear = -1;\\n             else\\n                  front++;\\n\\n             return data;\\n      }\\n};\\n\\nint main()\\n{\\n      Queue q;\\n\\n      q.Add(1);\\n      q.Add(2);\\n      q.Add(3);\\n\\n       int i = q.Delete();\\n      cout<<endl<< \\"item=\\"\\" deleted=\\"<<i<<endl;\\n\\n      i = q.Delete();\\n      cout<<endl<< \\"Item deleted = \\"<<i<<endl;\\n\\n       return 0;\\n}\\n\\n/*\\nOUTPUT\\n----------------\\nItem deleted = 1\\n\\nItem deleted = 2\\n*/\\n```"},{"id":"/2012/04/02/stack","metadata":{"permalink":"/blog/2012/04/02/stack","source":"@site/blog/2012-04-02-stack.md","title":"Simple Stack Program in C++","description":"Definition:","date":"2012-04-02T00:00:00.000Z","formattedDate":"April 2, 2012","tags":[{"label":"Data Structures","permalink":"/blog/tags/data-structures"},{"label":"C++","permalink":"/blog/tags/c"}],"readingTime":0.185,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Data Structures","C++"]},"prevItem":{"title":"Simple Queue program in C++","permalink":"/blog/2012/04/02/queue"},"nextItem":{"title":"How to Expand and Contract a MFC Dialog ?","permalink":"/blog/2012/04/01/expand-and-contract-a-mfc-dialog"}},"content":"**Definition:**\\n\\nA stack is a data structure in which addition of new elements or deletion of existing elements takes place at the same end.\\n\\n**Principle**:\\n\\nStack works on the\xa0**LIFO** - **L**ast **I**n **F**irst **O**ut principle\\n\\n**Program**: [https://gist.github.com/nagvbt/1bc930d01d113cb75a10](https://gist.github.com/nagvbt/1bc930d01d113cb75a10)"},{"id":"/2012/04/01/expand-and-contract-a-mfc-dialog","metadata":{"permalink":"/blog/2012/04/01/expand-and-contract-a-mfc-dialog","source":"@site/blog/2012-04-01-expand-and-contract-a-mfc-dialog.md","title":"How to Expand and Contract a MFC Dialog ?","description":"This article gives the ability to make MFC dialogs expand or contract. The\xa0CExpandContractHelper simplifies the process to \xa0expand or contract MFC Dialog.","date":"2012-04-01T00:00:00.000Z","formattedDate":"April 1, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":2.64,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Simple Stack Program in C++","permalink":"/blog/2012/04/02/stack"},"nextItem":{"title":"Tutorial to create MFC ActiveX Control which can be used in HTML Pages","permalink":"/blog/2012/04/01/mfc-activex-control-which-can-be-used-in-html-pages"}},"content":"This article gives the ability to make MFC dialogs expand or contract. The\xa0CExpandContractHelper simplifies the process to \xa0expand or contract MFC Dialog.\\n\\n**Steps to use CExpandContractHelper\xa0:** \\n\\n1. Create Dialog Based application \\n2. Place the controls as shown below \\n3. Add the CExpandContractHelper.cpp & CExpandContractHelper.h files to the project \\n4. Create the in the Dialog class CExpandContractHelper\\\\* m_pECH;\\n\\n```cpp\\nCExpandDialogDlg::CExpandDialogDlg(CWnd* pParent =NULL)\\n    : CDialog(CExpandDialogDlg::IDD, pParent)\\n{\\n    m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);\\n    //Step - 1 Create CExpandContractHelper\\n    m_pECH = new CExpandContractHelper(IDC_PIC_START, IDC_PIC_END, this);\\n}\\n```\\n\\n5. Call ExpandContract in the OnInitDialog\\n\\n```cpp\\nBOOL CExpandDialogDlg::OnInitDialog()\\n{\\n    CDialog::OnInitDialog();\\n    SetIcon(m_hIcon, TRUE);         // Set big icon\\n    SetIcon(m_hIcon, FALSE);        // Set small icon\\n    //Step - 2 Call ExpandContract\\n    m_pECH->ExpandContract((CButton*)GetDlgItem(IDC_BN_EXPAND_CONTRACT));\\n    return TRUE;\\n}\\n```\\n\\n6. Call ExpandContract in the button handler OnBnClickedBnExpandContract\\n\\n```cpp\\nvoid CExpandDialogDlg::OnBnClickedBnExpandContract()\\n{\\n    //Step - 3 Call ExpandContract\\n    m_pECH->ExpandContract((CButton*)GetDlgItem(IDC_BN_EXPAND_CONTRACT));\\n}\\n```\\n\\nCExpandContractHelper class\\n\\n```cpp\\n//////////////////////////////////////////////////\\n// Purpose: To exapand or contract a dialog control\\n// Author : nagvbt.blogspot.com\\n//////////////////////////////////////////////////\\nclass CExpandContractHelper\\n{\\npublic:\\n    CExpandContractHelper(UINT nStart, UINT nEnd, CDialog\\\\* dlg);\\n    ~CExpandContractHelper(void);\\nprotected:\\n    // ID of start picture control\\n    UINT m_nStart;\\n    // ID of end picture control\\n    UINT m_nEnd;\\n    CDialog* m_dlg;\\n    CButton* m_pButton;\\n    CString m_sExpand;\\n    CString m_sContract;\\npublic:\\n    void ExpandContract(CButton* pButton);\\nprotected:\\n    BOOL IsExpand();\\n};\\n```\\n\\nCExpandContractHelper.cpp\\n\\n```cpp\\n#include \\"StdAfx.h\\"\\n#include \\"ExpandContractHelper.h\\"\\nCExpandContractHelper::~CExpandContractHelper(void)\\n{\\n}\\nCExpandContractHelper::CExpandContractHelper(\\n    UINT nStart, // Start Picture control ID\\n    UINT nEnd,   // End  Picture control ID\\n    CDialog *dlg // Dialog pointer\\n    )\\n{\\n    m_nStart = nStart;\\n    m_nEnd   = nEnd;\\n    m_dlg    = dlg;\\n}\\nBOOL CExpandContractHelper::IsExpand()\\n{\\n    // 1 - Load button caption Expand/Contact\\n    m_sExpand = \\"&amp;Expand >>\\";\\n    m_sContract = \\"&lt;&lt; &amp;Contract\\";\\n    // 2 - Find out if we need to expand or collapse the dialog\\n    CString strCaption;\\n    m_pButton->GetWindowText( strCaption );\\n    BOOL bExpand = ( strCaption == m_sExpand ); // Collapse by default\\n    return bExpand;\\n}\\nvoid CExpandContractHelper::ExpandContract(\\n    CButton* pButton  // Expand Contract button pointer\\n    )\\n{\\n    m_pButton = pButton;\\n    // 3 - Get current dialog window rectangle\\n    CRect rcDialog;\\n    m_dlg->GetWindowRect( &amp;rcDialog );\\n    int nNewHeight = -1;\\n    if( IsExpand() )\\n    {\\n        // 4a - Change Expand/Contract button caption\\n        pButton->SetWindowText( m_sContract );\\n        // 4b - Calculate new dialog height\\n        CWnd* pWndLarge = m_dlg->GetDlgItem( m_nEnd );\\n        ASSERT_VALID( pWndLarge );\\n        CRect rcLarge;\\n        pWndLarge->GetWindowRect( &amp;rcLarge );\\n        nNewHeight = rcLarge.top-rcDialog.top;\\n    }\\n    else\\n    {\\n        // 5a - Change Expand/Contract button caption\\n        pButton->SetWindowText( m_sExpand );\\n        // 5b - Calculate new dialog height\\n        CWnd* pWndSmall = m_dlg->GetDlgItem( m_nStart );\\n        ASSERT_VALID( pWndSmall );\\n        pWndSmall->ShowWindow(FALSE);\\n        CRect rcSmall;\\n        pWndSmall->GetWindowRect( &amp;rcSmall );\\n        nNewHeight = rcSmall.top-rcDialog.top;\\n    }\\n    // 6 - Set new dialog height\\n    ASSERT( nNewHeight > 0 );\\n    m_dlg->SetWindowPos( NULL, 0, 0,\\n                        rcDialog.Width(), nNewHeight,\\n                        SWP_NOMOVE | SWP_NOZORDER );\\n    // 7 - Set the enabled state for each control depending on whether\\n    // the control is currently visible or not\\n    CWnd* pWndControl = m_dlg->GetWindow( GW_CHILD );\\n    while( pWndControl != NULL )\\n    {\\n        CRect rcControl;\\n        pWndControl->GetWindowRect( &amp;rcControl );\\n        pWndControl->EnableWindow( rcControl.top &lt;= rcDialog.top + nNewHeight );\\n        pWndControl = pWndControl->GetWindow( GW_HWNDNEXT );\\n    }\\n    // 8 - Check if a control still has the focus\\n    // (can lose it if the active control becomes disabled)\\n    CWnd* pWndActiveControl = CWnd::GetFocus();\\n    if( pWndActiveControl == NULL )\\n    {\\n        // 9 - Set focus to \\"first\\" control on dialog\\n        CWnd* pWndFirstControl = m_dlg->GetNextDlgTabItem( NULL );\\n        ASSERT_VALID( pWndFirstControl );\\n        ASSERT( pWndFirstControl->IsWindowEnabled() );\\n        pWndFirstControl->SetFocus();\\n    }\\n}\\n```"},{"id":"/2012/04/01/mfc-activex-control-which-can-be-used-in-html-pages","metadata":{"permalink":"/blog/2012/04/01/mfc-activex-control-which-can-be-used-in-html-pages","source":"@site/blog/2012-04-01-mfc-activex-control-which-can-be-used-in-html-pages.md","title":"Tutorial to create MFC ActiveX Control which can be used in HTML Pages","description":"Definition:\xa0ActiveX controls are COM components which are self-registering and Implements standard interfaces that deal specifically with GUI-based tasks such as rendering, sizing, activation, and property persistence.","date":"2012-04-01T00:00:00.000Z","formattedDate":"April 1, 2012","tags":[{"label":"ATL","permalink":"/blog/tags/atl"},{"label":"MFC","permalink":"/blog/tags/mfc"},{"label":"Tutorial","permalink":"/blog/tags/tutorial"}],"readingTime":2.66,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["ATL","MFC","Tutorial"]},"prevItem":{"title":"How to Expand and Contract a MFC Dialog ?","permalink":"/blog/2012/04/01/expand-and-contract-a-mfc-dialog"},"nextItem":{"title":"Invoke Native C++ DLL from .NET Code","permalink":"/blog/2012/03/30/invoke-native-c-dll-from-net-code"}},"content":"**Definition:**\xa0ActiveX controls are COM components which are self-registering and Implements standard interfaces that deal specifically with GUI-based tasks such as rendering, sizing, activation, and property persistence.\\n\\nAn ActiveX control is anything you might see in the Toolbox of Visual studio (i.e. EditBox, combobox e.t.c) we can even use the Activex controls in web pages using and handling events with Javascript.\\n\\n**Steps**\\n\\n1. Open VS 2008\\n2. File->NewProject give the project name as \\"MathOCX\\" 3.Click OK and Click Finish\\n3. To add a method\\n    - Go to class View, Expand \\"MathOCXLib\\"\\n    - RightClick on the \\"_DMathOCX\\" and click \'Add >\' Add Method...\\n4. \'Add Method Wizard\' Dialog will be displayed as shown in below fig Add the function returntype, parameter and function names as Add and Sub\\n\\n    ```cpp\\n    DOUBLE Add(DOUBLE i, DOUBLE j)\\n    \\n    DOUBLE Sub(DOUBLE i, DOUBLE j);\\n    ```\\n    \\n5. Three Major classes are created\\n    ```cpp\\n    class\xa0CMathOCXApp :\xa0public\xa0COleControlModule    \\n    class\xa0CMathOCXCtrl :\xa0public\xa0COleControl    \\n    class\xa0CMathOCXPropPage :\xa0public\xa0COlePropertyPage\\n    ```\\n    \\n## Descriptions of the Generated classes & Notes\\n    \\n    **class\xa0CMathOCXApp :\xa0public\xa0COleControlModule -> CWinApp**\\n    \\n    **COleControlModule\xa0provides** member functions for initializing control module it is an application object for running the ActivexControl. Only one global object is present.\\n    \\n    class\xa0CMathOCXCtrl :\xa0public\xa0COleControl\\n    \\n1. COleControl\xa0Derived from CWnd, this class inherits all the functionality of a Windows window object plus additional functionality specific to OLE, such as event firing and the ability to support methods and properties.\\n    \\n2. COleControl\xa0has\xa0a dispatch map, which is used to expose a set of functions (called methods) and attributes (called properties) to the control user.\\n\\n**Dispatch Maps** \\n1. OLE Automation provides ways to call methods and to access properties across applications.\\n\\n2. The mechanism supplied by the MFC for dispatching these requests is the \\"dispatch map,\\" which designates the internal and external names of object functions and properties, as well as the data types of the properties themselves and of function arguments.\\n\\n**DISP_FUNCTION(theClass, pszName, pfnMember, vtRetVal, vtsParams )**\\n\\n**Parameters** \\n- theClass -\xa0Name of the class. \\n- pszName -\xa0External name of the function. \\n- pfnMember -\xa0Name of the member function.\\n- vtRetVal -\xa0A value specifying the function\'s return type. \\n- vtsParams -\xa0A space-separated list of one or more constants specifying the function\'s parameter list.\\n\\nExample:\xa0DISP_FUNCTION_ID(CMathOCXCtrl,\xa0\\"Add\\", dispidAdd, Add, VT_R8, VTS_R8 VTS_R8)\\n\\n```cpp\\nclass\xa0CMathOCXPropPage :\xa0public\xa0COlePropertyPage\\n```\\n\\nUsed to display the properties of a custom control in a graphical interface, similar to a dialog box.\\n\\n**Using MathOCX.ocx control in the HTML Page**\\n\\n```html\\n<HTML>\\n<HEAD>\\n<META NAME=\\"GENERATOR\\" Content=\\"Microsoft Visual Studio 8.0\\">\\n<TITLE></TITLE>\\n<style type=\\"text/css\\">\\n .style1 {\\n    width: 25%;\\n    }\\n .style2 { \\n    color: #0000CC;\\n    font-weight: 700;\\n    }\\n .style3 {\\n    width: 213px;\\n    }\\n</style>\\n</HEAD>\\n\\n<script type=\\"text/javascript\\">\\n    function Button1_onclick() {\\n        //Call the MathOCX Add Method\\n        Result.value = MathOCX.Add(Text1.value, Text2.value);\\n    }\\n<\/script>\\n\\n<BODY onload=\\"initPage()\\" scroll=\\"no\\">\\n    <table class=\\"style1\\">\\n        <tr>\\n            <td class=\\"style2\\" colspan=\\"2\\">Addition of two numbers using MathOCX ActiveX Control </td>\\n        </tr>\\n        <tr>\\n            <td class=\\"style3\\">Enter number :</td>\\n            <td><input id=\\"Text1\\" type=\\"text\\" /></td>\\n        </tr>\\n        <tr>\\n            <td class=\\"style3\\"> Enter number :</td>\\n            <td><input id=\\"Text2\\" type=\\"text\\" /></td>\\n        </tr>\\n        <tr>\\n            <td class=\\"style3\\"> <input id=\\"Button1\\" type=\\"button\\" value=\\"Add\\" onclick=\\"return Button1_onclick()\\" />\\n                Result:</td>\\n            <td>\\n                <input id=\\"Result\\" type=\\"text\\" />\\n            </td>\\n        </tr>\\n    </table>\\n\\n\x3c!--Initialize the <span class=\\"hiddenSpellError\\" pre=\\"the \\">MathOCX</span> <span class=\\"hiddenSpellError\\" pre=\\"\\">Activex</span> Control using the control GUID --\x3e\\n</pre>\\n<pre>\\n<pre>\\n style=\\"left: 0px; top: 0px\\" width=\\"1\\" viewastext>\\n            <param name=\\"_Version\\" value=\\"65536\\"/>\\n            <param name=\\"_ExtentX\\" value=\\"26\\"/>\\n            <param name=\\"_ExtentY\\" value=\\"26\\"/>\\n            <param name=\\"_StockProps\\" value=\\"0\\"/>\\n      </object>\\n\\n</BODY>\\n</HTML>\\n```"},{"id":"/2012/03/30/invoke-native-c-dll-from-net-code","metadata":{"permalink":"/blog/2012/03/30/invoke-native-c-dll-from-net-code","source":"@site/blog/2012-03-30-invoke-native-c-dll-from-net-code.md","title":"Invoke Native C++ DLL from .NET Code","description":"There are 4 Approaches to accomplish this.","date":"2012-03-30T00:00:00.000Z","formattedDate":"March 30, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.28,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Tutorial to create MFC ActiveX Control which can be used in HTML Pages","permalink":"/blog/2012/04/01/mfc-activex-control-which-can-be-used-in-html-pages"},"nextItem":{"title":"WinForms in MFC ?","permalink":"/blog/2012/03/29/winforms-in-mfc"}},"content":"There are 4 Approaches to accomplish this.\\n\\nApproach \\n1. (Explicit) P/Invoke Approach\xa0\xa0\\n2. Dynamic P/Invoke Approach\xa0\\n3. Implicit P/Invoke (Use a C++/CLI wrapper) Approach\xa0\\n4. Convert C++ DLL to a COM server, and call it from .NET code through .NET-COM interop\\n\\nI don\'t like to reinvent the wheel so please go through msdn forum answer [here](http://social.msdn.microsoft.com/Forums/en-US/vcgeneral/thread/5df04db1-bbc8-4389-b752-802bc84148fe)"},{"id":"/2012/03/29/winforms-in-mfc","metadata":{"permalink":"/blog/2012/03/29/winforms-in-mfc","source":"@site/blog/2012-03-29-winforms-in-mfc.md","title":"WinForms in MFC ?","description":"The\xa0CWinFormsControl class provides the basic functionality for hosting of a Windows Forms control.","date":"2012-03-29T00:00:00.000Z","formattedDate":"March 29, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.16,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Invoke Native C++ DLL from .NET Code","permalink":"/blog/2012/03/30/invoke-native-c-dll-from-net-code"},"nextItem":{"title":"Center an MFC Dialog","permalink":"/blog/2012/03/28/center-an-mfc-dialog"}},"content":"The\xa0**CWinFormsControl** class provides the basic functionality for hosting of a Windows Forms control.\\n\\nFor more information on using Windows Forms, see below MSDN articles\\n\\n**[Using a Windows Form User Control in MFC](http://msdn.microsoft.com/en-us/library/ahdd1h97.aspx)**"},{"id":"/2012/03/28/center-an-mfc-dialog","metadata":{"permalink":"/blog/2012/03/28/center-an-mfc-dialog","source":"@site/blog/2012-03-28-center-an-mfc-dialog.md","title":"Center an MFC Dialog","description":"Use the CWnd::CenterWindow method to center the dialog. Write CenterWindow() method in the OnInitDialog() method.","date":"2012-03-28T00:00:00.000Z","formattedDate":"March 28, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.12,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"WinForms in MFC ?","permalink":"/blog/2012/03/29/winforms-in-mfc"},"nextItem":{"title":"Creating a CDC from a HDC","permalink":"/blog/2012/03/28/creating-a-cdc-from-a-hdc"}},"content":"Use the CWnd::CenterWindow method to center the dialog. Write CenterWindow() method in the OnInitDialog() method.\\n\\n```cpp\\nBOOL CMyDialog::OnInitDialog() { \\n  CenterWindow();\\n  return TRUE;\\n} \\n```"},{"id":"/2012/03/28/creating-a-cdc-from-a-hdc","metadata":{"permalink":"/blog/2012/03/28/creating-a-cdc-from-a-hdc","source":"@site/blog/2012-03-28-creating-a-cdc-from-a-hdc.md","title":"Creating a CDC from a HDC","description":"If we get handle to a DC and sometimes we might want to create a CDC from that. One example is owner-drawn lists, combos, and buttons.  we will receive a draw item message with a hDC. The below code can be used to convert hdc into CDC.","date":"2012-03-28T00:00:00.000Z","formattedDate":"March 28, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.365,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Center an MFC Dialog","permalink":"/blog/2012/03/28/center-an-mfc-dialog"},"nextItem":{"title":"How do I maximize my MDI child ?","permalink":"/blog/2012/03/28/how-do-i-maximize-my-mdi-child"}},"content":"If we get handle to a DC and sometimes we might want to create a CDC from that. One example is owner-drawn lists, combos, and buttons.  we will receive a draw item message with a hDC. The below code can be used to convert hdc into CDC.\\n\\n```cpp\\n void MyList::DrawItem(LPDRAWITEMSTRUCT lpDrawItem) { \\n  CDC* pDC;\\n  pDC = CDC:FromHandle(lpDrawItem->hDC); \\n} \\n```\\n\\n***NOTE:***\\nThis technique for any of the other MFC class/ Windows handle pairs too."},{"id":"/2012/03/28/how-do-i-maximize-my-mdi-child","metadata":{"permalink":"/blog/2012/03/28/how-do-i-maximize-my-mdi-child","source":"@site/blog/2012-03-28-how-do-i-maximize-my-mdi-child.md","title":"How do I maximize my MDI child ?","description":"In CMainFrame class ad the following code.","date":"2012-03-28T00:00:00.000Z","formattedDate":"March 28, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.175,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Creating a CDC from a HDC","permalink":"/blog/2012/03/28/creating-a-cdc-from-a-hdc"},"nextItem":{"title":"Programmatically terminate MFC application","permalink":"/blog/2012/03/25/programmatically-terminate-mfc-application"}},"content":"In CMainFrame class ad the following code.\\n\\n```cpp\\nvoid CMainFrame::ActivateFrame(int nCmdShow)\\n{\\n    if (!m_bActivated)\\n    {\\n        m_bActivated = TRUE;\\n        nCmdShow = SW_SHOWMAXIMIZED;\\n    }\\n\\n    CFrameWnd::ActivateFrame(nCmdShow);\\n}\\n```\\n\\nwhere m_bActivated is a member variable of your frame object."},{"id":"/2012/03/25/programmatically-terminate-mfc-application","metadata":{"permalink":"/blog/2012/03/25/programmatically-terminate-mfc-application","source":"@site/blog/2012-03-25-programmatically-terminate-mfc-application.md","title":"Programmatically terminate MFC application","description":"MFC does not provide a public function to exit an application. The following method shutdowns the Application. The method simply sends a WM_CLOSE message to application\'s mainframe window.","date":"2012-03-25T00:00:00.000Z","formattedDate":"March 25, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.2,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"How do I maximize my MDI child ?","permalink":"/blog/2012/03/28/how-do-i-maximize-my-mdi-child"},"nextItem":{"title":"Reading Books","permalink":"/blog/2012/03/25/reading-books"}},"content":"MFC does not provide a public function to exit an application. The following method shutdowns the Application. The method simply sends a WM_CLOSE message to application\'s mainframe window.\\n\\n```cpp\\nvoid CmfcApp::ExitApplication()\\n{\\n    if(AfxGetApp()->m_pMainWnd != NULL))\\n    {\\n        AfxGetApp()->m_pMainWnd->SendMessage(WM_CLOSE);\\n    }\\n}\\n```"},{"id":"/2012/03/25/reading-books","metadata":{"permalink":"/blog/2012/03/25/reading-books","source":"@site/blog/2012-03-25-reading-books.md","title":"Reading Books","description":"Every book we read makes us grow taller. Reading helps in expanding the thinking of the mind. Most successful people from history to the present are having the habit of reading books.","date":"2012-03-25T00:00:00.000Z","formattedDate":"March 25, 2012","tags":[{"label":"Books","permalink":"/blog/tags/books"}],"readingTime":0.555,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Books"]},"prevItem":{"title":"Programmatically terminate MFC application","permalink":"/blog/2012/03/25/programmatically-terminate-mfc-application"},"nextItem":{"title":"Limiting the maximum and minimum sizing  of a Frame Window","permalink":"/blog/2012/03/17/limiting-maximum-minimum-sizing-of-a-window"}},"content":"Every book we read makes us grow taller. Reading helps in expanding the thinking of the mind. Most successful people from history to the present are having the habit of reading books.\\r\\n\\r\\nThe best investment that we can make is buying one or two books and reading them in a month every rupee you spent is worth. Reading can be a relaxing hobby as well.\\r\\n\\r\\n## How to read:\\r\\nUse pencil or marker to highlight the important points\\r\\nUse Book Mark (Card with thread)\\r\\nTake notes on the margins best thing is use notebook to write points that you like most\\r\\nTo get started with what books to read are below."},{"id":"/2012/03/17/limiting-maximum-minimum-sizing-of-a-window","metadata":{"permalink":"/blog/2012/03/17/limiting-maximum-minimum-sizing-of-a-window","source":"@site/blog/2012-03-17-limiting-maximum-minimum-sizing-of-a-window.md","title":"Limiting the maximum and minimum sizing  of a Frame Window","description":"To limit the maximum and minimum size of a Frame Window.","date":"2012-03-17T00:00:00.000Z","formattedDate":"March 17, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.615,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Reading Books","permalink":"/blog/2012/03/25/reading-books"},"nextItem":{"title":"Centering an Application Frame Window to desktop","permalink":"/blog/2012/03/16/centering-an-application-frame-window-to-desktop"}},"content":"To limit the maximum and minimum size of a Frame Window.\\n\\n1. Define Min and Mix size in pixels\\n    \\n2. Handle the **WM_GETMINMAXINFO** message in a CFrameWnd derived class. \xa0The MINMAXINFO struct sets limits on the entire window, we need to take into account scroll bars,\xa0toolbars, \xa0etc\\n    \\n\\n```cpp\\n // Min and Mix size in pixels\\n# define MINX 500\\n# define MINY 300\\n# define MAXX 600\\n# define MAXY 400\\n\\nvoid CMainFrame::OnGetMinMaxInfo(MINMAXINFO* lpMMI) { \\n  CRect rectWnd; CRect rectClient;\\n  GetWindowRect(&rectWnd); \\n  GetClientRect(&rectClient);\\n\\n  // get offset of toolbars, scrollbars, etc. \\n  int nWidthOffset = rectWnd.Width() - rectClient.Width(); \\n  int nHeightOffset = rectWnd.Height() - rectClient.Height();\\n\\n  lpMMI->ptMinTrackSize.x = MINX + nWidthOffset; \\n  lpMMI->ptMinTrackSize.y = MINY + nHeightOffset;\\n  lpMMI->ptMaxTrackSize.x = MAXX + nWidthOffset;\\n  lpMMI->ptMaxTrackSize.y = MAXY + nHeightOffset;\\n\\n  CFrameWnd::OnGetMinMaxInfo(lpMMI);\\n\\n}\\n ```"},{"id":"/2012/03/16/centering-an-application-frame-window-to-desktop","metadata":{"permalink":"/blog/2012/03/16/centering-an-application-frame-window-to-desktop","source":"@site/blog/2012-03-16-centering-an-application-frame-window-to-desktop.md","title":"Centering an Application Frame Window to desktop","description":"To center Application\'s Frame Window call CenterWindow() in MainFrame\'s OnCreate() fucntion.","date":"2012-03-16T00:00:00.000Z","formattedDate":"March 16, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.225,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Limiting the maximum and minimum sizing  of a Frame Window","permalink":"/blog/2012/03/17/limiting-maximum-minimum-sizing-of-a-window"},"nextItem":{"title":"How to create a minimal MFC Window ?","permalink":"/blog/2012/03/16/how-to-create-a-minimal-mfc-window"}},"content":"To center Application\'s Frame Window call CenterWindow() in MainFrame\'s OnCreate() fucntion.\\n\\nSee the code snippet below\\n\\n```cpp\\nint CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)\\n{\\n    if (CFrameWnd::OnCreate(lpCreateStruct) == -1)\\n        return -1;\\n\\n   //////////////////////////////////////////////////////////\\n   //  Center Application Frame Window                     //\\n    /////////////////////////////////////////////////////////\\n   CWnd* pWnd = GetDesktopWindow();\\n   CenterWindow(pWnd);\\n   //////////////////////////////////////////////////////////\\n\\n    return 0;\\n}\\n```"},{"id":"/2012/03/16/how-to-create-a-minimal-mfc-window","metadata":{"permalink":"/blog/2012/03/16/how-to-create-a-minimal-mfc-window","source":"@site/blog/2012-03-16-how-to-create-a-minimal-mfc-window.md","title":"How to create a minimal MFC Window ?","description":"We need at least two classes derived to construct an window","date":"2012-03-16T00:00:00.000Z","formattedDate":"March 16, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.69,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Centering an Application Frame Window to desktop","permalink":"/blog/2012/03/16/centering-an-application-frame-window-to-desktop"},"nextItem":{"title":"Remove MAXIMIZE BOX and MINIMIZE BOX from an MFC Window","permalink":"/blog/2012/03/16/remove-maximize-box-and-minimize-box"}},"content":"We need at least two classes derived to construct an window  \\n1. Window class / Frame class (CMainFrame) which is derived from CFrameWnd  \\n2. Application class (CMyApp) which is derived from CWinApp\\n\\n```cpp\\n#include <afxwin.h>;\\n\\nclass CMainFrame : public CFrameWnd\\n{\\npublic:\\n    CMainFrame()\\n    {\\n        Create(NULL, \\"HELLO MFC\\");\\n    }\\nprotected:\\n    afx_msg void OnPaint()\\n    {\\n     CPaintDC dc(this);\\n     dc.TextOut(100, 100, \\"This is the my MFC window\\");\\n    }\\n\\n    afx_msg void OnLButtonDown(UINT nFlags, CPoint point)\\n    {\\n        AfxMessageBox(\\"Mouse OnLButtonDown !!\\");\\n        CFrameWnd::OnLButtonDown(nFlags, point);\\n    }\\n    // Declare the Message Map\\n    DECLARE_MESSAGE_MAP()\\n};\\n\\n// Define the Message Map out side the class Definition\\nBEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)\\n    ON_WM_PAINT()       // Paint Message\\n    ON_WM_LBUTTONDOWN() // Mouse LButton down message\\nEND_MESSAGE_MAP()\\n\\nclass CMyApp : public CWinApp\\n{\\npublic:\\n    virtual BOOL InitInstance()\\n    {\\n        m_pMainWnd = new CMainFrame();\\n        m_pMainWnd-&gt;ShowWindow(SW_SHOWNORMAL);\\n        m_pMainWnd-&gt;UpdateWindow();\\n        return TRUE;\\n    }\\n};\\n\\n// The one and only Application Object\\nCMyApp theApp;\\n```"},{"id":"/2012/03/16/remove-maximize-box-and-minimize-box","metadata":{"permalink":"/blog/2012/03/16/remove-maximize-box-and-minimize-box","source":"@site/blog/2012-03-16-remove-maximize-box-and-minimize-box.md","title":"Remove MAXIMIZE BOX and MINIMIZE BOX from an MFC Window","description":"In order to remove MAXIMIZE BOX and MINIMIZE BOX from an MFC Window see the below code snippet.","date":"2012-03-16T00:00:00.000Z","formattedDate":"March 16, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.32,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"How to create a minimal MFC Window ?","permalink":"/blog/2012/03/16/how-to-create-a-minimal-mfc-window"},"nextItem":{"title":"Making first MDI child window start out maximized","permalink":"/blog/2012/03/15/mdi-child-window-start-out-maximized"}},"content":"In order to remove MAXIMIZE BOX and MINIMIZE BOX from an MFC Window see the below code snippet.\\n\\n```cpp\\nBOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)\\n{\\n    if( !CFrameWnd::PreCreateWindow(cs) )\\n        return FALSE;\\n\\n    cs.dwExStyle &amp;= ~WS\\\\_EX\\\\_CLIENTEDGE;\\n    cs.lpszClass = AfxRegisterWndClass(0);\\n\\n    //////////////////////////////////////////////////////////\\n    //  To remove MAXIMIZE BOX from window                  //\\n    //////////////////////////////////////////////////////////\\n    cs.style &amp;= ~WS\\\\_MAXIMIZEBOX;\\n\\n    //////////////////////////////////////////////////////////\\n    //  To remove MINIMIZE BOX from window                  //\\n    //////////////////////////////////////////////////////////\\n    cs.style &amp;= ~WS\\\\_MINIMIZEBOX;\\n\\n    return TRUE;\\n}\\n```"},{"id":"/2012/03/15/mdi-child-window-start-out-maximized","metadata":{"permalink":"/blog/2012/03/15/mdi-child-window-start-out-maximized","source":"@site/blog/2012-03-15-mdi-child-window-start-out-maximized.md","title":"Making first MDI child window start out maximized","description":"To make first MDI child window start out maximized","date":"2012-03-15T00:00:00.000Z","formattedDate":"March 15, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.365,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Remove MAXIMIZE BOX and MINIMIZE BOX from an MFC Window","permalink":"/blog/2012/03/16/remove-maximize-box-and-minimize-box"},"nextItem":{"title":"Check whether a given file exists in the given path","permalink":"/blog/2012/03/15/whether-a-given-file-exists-in-the-givenpath"}},"content":"To make first MDI child window start out maximized\\n\\n1. Add a ActivateFrame() which is a CChildFrame virtual function\\n2. Modify the function with the below code snnipet\\n\\n```cpp \\nvoid CChildFrame::ActivateFrame(int nCmdShow) { \\n  //////////////////////////////////////////////////////////////////////////// \\n  // To make first MDI child window start out maximized \\n  // //////////////////////////////////////////////////////////////////////////// \\n  m_pMainWnd->ShowWindow(SW_SHOWMAXIMIZED);\\n\\n// if another window is open, use default \\nif(GetMDIFrame()->MDIGetActive()) {\\n   CMDIChildWnd::ActivateFrame(nCmdShow); \\n} else // else open the child window maximized.\\n{ \\n  CMDIChildWnd::ActivateFrame(SW_SHOWMAXIMIZED); \\n}\\n\\n//////////////////////////////////////////////////////////////////////////// } \\n```"},{"id":"/2012/03/15/whether-a-given-file-exists-in-the-givenpath","metadata":{"permalink":"/blog/2012/03/15/whether-a-given-file-exists-in-the-givenpath","source":"@site/blog/2012-03-15-whether-a-given-file-exists-in-the-givenpath.md","title":"Check whether a given file exists in the given path","description":"Using Win32 API FindFirstFile we can find whether a given file exists in the given path (szFilePath) or not. BOOL IsFileExists( LPCTSTR szFilePath) method shown below serves our purpose.","date":"2012-03-15T00:00:00.000Z","formattedDate":"March 15, 2012","tags":[{"label":"Win32","permalink":"/blog/tags/win-32"}],"readingTime":0.355,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Win32"]},"prevItem":{"title":"Making first MDI child window start out maximized","permalink":"/blog/2012/03/15/mdi-child-window-start-out-maximized"},"nextItem":{"title":"Hash Data using Win32 API through a CHashDataProvider class","permalink":"/blog/2012/03/15/win32-api-through-a-chashdataprovider-class"}},"content":"Using Win32 API FindFirstFile we can find whether a given file exists in the given path (szFilePath) or not. BOOL IsFileExists( LPCTSTR szFilePath) method shown below serves our purpose.\\n\\n```cpp \\nBOOL IsFileExists( LPCTSTR szFilePath) // szFilePath in | file path \\n{ \\n  BOOL bFileExists; \\n  WIN32_FIND_DATA FindFileData; \\n  HANDLE hFind;\\n  hFind = FindFirstFile(szFilePath, &FindFileData); \\n  if (hFind == INVALID_HANDLE_VALUE) \\n  { \\n    bFileExists = FALSE; \\n  } else { \\n    FindClose(hFind);\\n    bFileExists = TRUE; \\n  }\\n\\nreturn bFileExists; \\n} \\n```"},{"id":"/2012/03/15/win32-api-through-a-chashdataprovider-class","metadata":{"permalink":"/blog/2012/03/15/win32-api-through-a-chashdataprovider-class","source":"@site/blog/2012-03-15-win32-api-through-a-chashdataprovider-class.md","title":"Hash Data using Win32 API through a CHashDataProvider class","description":"Cryptography is the use of codes to convert data so that only a specific recipient will be able to read it. Microsoft provide win32 API to Hash Data/string. The class CHashDataProvider developed to provides simple function HashData(ALG_ID algorithmID, LPCTSTR plainText, LPTSTR hashedText); which takes algorithmID and inputText to convert plainText to hashedText","date":"2012-03-15T00:00:00.000Z","formattedDate":"March 15, 2012","tags":[{"label":"win32","permalink":"/blog/tags/win-32"}],"readingTime":2.785,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["win32"]},"prevItem":{"title":"Check whether a given file exists in the given path","permalink":"/blog/2012/03/15/whether-a-given-file-exists-in-the-givenpath"},"nextItem":{"title":"Creating an SDI/MDI application that is initially maximized","permalink":"/blog/2012/03/14/sdimdi-application-that-is-initially-maximized"}},"content":"Cryptography is the use of codes to convert data so that only a specific recipient will be able to read it. Microsoft provide win32 API to Hash Data/string. The class CHashDataProvider developed to provides simple function HashData(ALG_ID algorithmID, LPCTSTR plainText, LPTSTR hashedText); which takes algorithmID and inputText to convert plainText to hashedText\\n\\nALG_ID algorithmID - Algorithm ID to be used LPCTSTR plainText - plainText that to be converted to hashedText LPTSTR hashedText - Hashed Test using the input algorithmID.\\n\\n**CHashDataProvider Code**\\n\\n***HashDataProvider.h***\\n\\n```cpp\\n#include <wincrypt.h>;\\n#define BUFFER_SIZE 256\\n\\nclass CHashDataProvider\\n{\\npublic:\\n    CHashDataProvider(void);\\n    ~CHashDataProvider(void);\\n\\nprivate:\\n    // Handle to a cryptographic service provider (CSP)\\n    HCRYPTPROV  m_hProv;\\n\\n    // Handle to the hash object needed to create a hash.\\n    HCRYPTHASH  m_hHash;\\n\\n    // Pointer to the hash.\\n    PBYTE       m_pbHash;\\n\\nprivate:\\n    void FreeResources();\\n    void InitializeData();\\n    LPTSTR FormatData(PBYTE pbHash, DWORD dwDataLen, LPTSTR hashedText);\\n\\npublic:\\n    bool HashData(ALG_ID  algorithmID, LPCTSTR plainText, LPTSTR  hashedText);\\n};\\n```\\n\\n***HashDataProvider.cpp***\\n\\n```cpp\\n#include \\"HashDataProvider.h\\"\\n\\nCHashDataProvider::CHashDataProvider(void)\\n{\\n    InitializeData();\\n}\\n\\nCHashDataProvider::~CHashDataProvider(void)\\n{\\n}\\n\\n//\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\n// des:    Hashes data based on the ALG_ID\\n// return: Hashing of the text is sucessful or not\\n//\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\\nbool\\nCHashDataProvider::HashData(ALG_ID  algorithmID, // in | Algorithm ID (Sha1 or MD5 )\\n                            LPCTSTR plainText,   // in | Original string to be hashed\\n                            LPTSTR  hashedText)    //out | string to store hashed text\\n{\\n    InitializeData();\\n\\n    bool        rc          = true;      // Default is success\\n    DWORD       dwDataLen   = 0;         // Length, in bytes, of the hash.\\n\\n    //--------------------------------------------------------------------\\n    // Acquire a handle to the default RSA cryptographic service provider.\\n    if (!CryptAcquireContext(\\n        &amp;m_hProv,                 // handle of the CSP\\n        NULL,                     // key container name\\n        NULL,                     // CSP name\\n        PROV_RSA_FULL,            // provider type\\n        CRYPT_VERIFYCONTEXT))     // no key access is requested\\n    {\\n        AfxMessageBox(\\"Error in AcquireContext 0x%08x n\\", GetLastError());\\n        rc = false;\\n        FreeResources();\\n    }\\n\\n    if (!CryptCreateHash(\\n        m_hProv,                  // handle of the CSP\\n        algorithmID,              // hash algorithm to use\\n        0,                        // hash key\\n        0,                        // reserved\\n        &amp;m_hHash))                // address of hash object handle\\n    {\\n        AfxMessageBox(\\"Error in CryptCreateHash 0x%08x n\\", GetLastError());\\n        rc = false;\\n        FreeResources();\\n    }\\n\\n    if (!CryptHashData(\\n        m_hHash,                  // handle of the hash object\\n        (const BYTE *) plainText, // text to be hash\\n        _tcslen(plainText)*sizeof(TCHAR), // number of bytes of data\\n        0))                       // flags\\n    {\\n        AfxMessageBox(\\"Error in CryptHashData 0x%08x n\\", GetLastError());\\n        rc = false;\\n        FreeResources();\\n    }\\n\\n    if (!CryptGetHashParam(\\n        m_hHash,                 // handle of the HMAC hash object\\n        HP_HASHVAL,              // query on the hash value\\n        NULL,                    // pointer to the HMAC hash value\\n        &amp;dwDataLen,              // length,in bytes, of the hash\\n        0))\\n    {\\n        AfxMessageBox(\\"Error in CryptGetHashParam 0x%08x n\\", GetLastError());\\n        rc = false;\\n        FreeResources();\\n    }\\n\\n    m_pbHash = (BYTE\\\\*)malloc(dwDataLen);\\n    if(NULL == m_pbHash)\\n    {\\n       AfxMessageBox(\\"unable to allocate memoryn\\");\\n       rc = false;\\n       FreeResources();\\n    }\\n\\n    if (!CryptGetHashParam(\\n        m_hHash,                   // handle of the HMAC hash object\\n        HP_HASHVAL,                // query on the hash value\\n        m_pbHash,                  // pointer to the HMAC hash value\\n        &amp;dwDataLen,                // length,in bytes, of the hash\\n        0))\\n    {\\n        AfxMessageBox(\\"Error in CryptGetHashParam 0x%08x n\\", GetLastError());\\n        rc = false;\\n        FreeResources();\\n    }\\n\\n    hashedText = FormatData(m_pbHash, dwDataLen, hashedText);\\n\\n    FreeResources();\\n\\n    return rc;\\n}\\n\\n//Helper functions\\nvoid CHashDataProvider::FreeResources()\\n{\\n    if(m_hHash)\\n        CryptDestroyHash(m_hHash);\\n    if(m_hProv)\\n        CryptReleaseContext(m_hProv, 0);\\n    if(m_pbHash)\\n       free(m_pbHash);\\n}\\n\\nvoid CHashDataProvider::InitializeData()\\n{\\n    m_hProv = NULL;\\n    m_hHash = NULL;\\n    m_pbHash = NULL;\\n}\\n\\nLPTSTR CHashDataProvider::FormatData(PBYTE pbHash, DWORD dwDataLen, LPTSTR hashedText)\\n{\\n    TCHAR rstData[BUFFER_SIZE]= {0}; // Buffer to receive hashed result\\n    TCHAR tmpBuffer[3] = {0};\\n    for (DWORD i = 0 ; i &lt; dwDataLen ; i++)\\n    {\\n        tmpBuffer[0] = 0;\\n        tmpBuffer[1] = 0;\\n        tmpBuffer[2] = 0;\\n        _stprintf_s(tmpBuffer, _T(\\"%2.2x\\"), pbHash\\\\[i\\\\]);\\n        _tcscat_s(rstData, tmpBuffer);\\n    }\\n    _tcscpy(hashedText, rstData);\\n\\n    return hashedText;\\n}\\n```"},{"id":"/2012/03/14/sdimdi-application-that-is-initially-maximized","metadata":{"permalink":"/blog/2012/03/14/sdimdi-application-that-is-initially-maximized","source":"@site/blog/2012-03-14-sdimdi-application-that-is-initially-maximized.md","title":"Creating an SDI/MDI application that is initially maximized","description":"To Creating an SDI/MDI application that is initially maximized Pass SW_SHOWMAXIMIZED as paramater to\xa0m_pMainWnd->ShowWindow() in the\xa0\xa0in the CWinApp::InitInstance()","date":"2012-03-14T00:00:00.000Z","formattedDate":"March 14, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.22,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Hash Data using Win32 API through a CHashDataProvider class","permalink":"/blog/2012/03/15/win32-api-through-a-chashdataprovider-class"},"nextItem":{"title":"Change a Window\'s title of an SDI/MDI Application","permalink":"/blog/2012/03/13/change-a-windows-title-of-an-sdimdi"}},"content":"To Creating an SDI/MDI application that is initially maximized Pass **SW_SHOWMAXIMIZED** as paramater to\xa0m_pMainWnd->ShowWindow() in the\xa0\xa0in the CWinApp::InitInstance()\\n\\nCode Snippet:\\n\\n```cpp\\nBOOL CWindowTitleApp::InitInstance() { \\n  //////////////////////////////////////////////////////////////////////////// \\n  // To Create an SDI/MDI application that is initially maximized \\n  // /////////////////////////////////////////////////////////////////////////\\n \\n  m_pMainWnd->ShowWindow(SW_SHOWMAXIMIZED); \\n  m_pMainWnd->UpdateWindow(); \\n  m_pMainWnd->DragAcceptFiles();\\n\\nreturn TRUE; \\n} \\n\\n```"},{"id":"/2012/03/13/change-a-windows-title-of-an-sdimdi","metadata":{"permalink":"/blog/2012/03/13/change-a-windows-title-of-an-sdimdi","source":"@site/blog/2012-03-13-change-a-windows-title-of-an-sdimdi.md","title":"Change a Window\'s title of an SDI/MDI Application","description":"Call **SetWindowText** method by passing required title as a string in the CWinApp::InitInstance() method after\xa0ProcessShellCommand() method. Please see the below code snippet","date":"2012-03-13T00:00:00.000Z","formattedDate":"March 13, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.465,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Creating an SDI/MDI application that is initially maximized","permalink":"/blog/2012/03/14/sdimdi-application-that-is-initially-maximized"},"nextItem":{"title":"Converting from CString","permalink":"/blog/2012/03/13/converting-from-cstring"}},"content":"Call _**SetWindowText**_ method by passing required title as a string in the CWinApp::InitInstance() method after\xa0ProcessShellCommand() method. Please see the below code snippet\\n\\n`m_pMainWnd->SetWindowText(\\"My New Window Title\\");`\\n\\n```cpp\\nBOOL CWindowTitleApp::InitInstance()\\n{\\n    INITCOMMONCONTROLSEX InitCtrls;\\n    InitCtrls.dwSize = sizeof(InitCtrls);\\n    InitCtrls.dwICC = ICC_WIN95_CLASSES;\\n    InitCommonControlsEx(&amp;InitCtrls);\\n\\n    CWinApp::InitInstance();\\n    SetRegistryKey(_T(\\"Local AppWizard-Generated Applications\\"));\\n    LoadStdProfileSettings(4);\\n\\n    CSingleDocTemplate\\\\* pDocTemplate;\\n    pDocTemplate = new CSingleDocTemplate(\\n        IDR_MAINFRAME,\\n        RUNTIME_CLASS(CWindowTitleDoc),\\n        RUNTIME_CLASS(CMainFrame),       // main SDI frame window\\n        RUNTIME_CLASS(CWindowTitleView));\\n    if (!pDocTemplate)\\n        return FALSE;\\n    AddDocTemplate(pDocTemplate);\\n\\n    EnableShellOpen();\\n    RegisterShellFileTypes(TRUE);\\n\\n    CCommandLineInfo cmdInfo;\\n    ParseCommandLine(cmdInfo);\\n\\n    if (!ProcessShellCommand(cmdInfo))\\n        return FALSE;\\n    ////////////////////////////////////////////////////////////////////////////\\n    //                       To Change Window Title                           //\\n    ////////////////////////////////////////////////////////////////////////////\\n    m_pMainWnd-&gt;SetWindowText(\\"My New Window Title\\");\\n    ////////////////////////////////////////////////////////////////////////////\\n\\n    m_pMainWnd-&gt;ShowWindow(SW_SHOW);\\n    m_pMainWnd-&gt;UpdateWindow();\\n    m_pMainWnd-&gt;DragAcceptFiles();\\n\\n    return TRUE;\\n}\\n```"},{"id":"/2012/03/13/converting-from-cstring","metadata":{"permalink":"/blog/2012/03/13/converting-from-cstring","source":"@site/blog/2012-03-13-converting-from-cstring.md","title":"Converting from CString","description":"This post demonstrates how to convert from a CString\xa0to the other string types","date":"2012-03-13T00:00:00.000Z","formattedDate":"March 13, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":1.07,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Change a Window\'s title of an SDI/MDI Application","permalink":"/blog/2012/03/13/change-a-windows-title-of-an-sdimdi"},"nextItem":{"title":"How do remove \'Untitled\' in main window caption","permalink":"/blog/2012/03/13/how-do-remove-untitled-in-main-window-caption"}},"content":"This post demonstrates how to convert from a **CString**\xa0to the other string types\\n\\n**CString to\xa0LPTSTR**\\n\\n```cpp\\nCString origCString = \\"HelloWorld\\";\\n\\n// Get the internal buffer pointer of CString.\\nLPTSTR pString = origCString.GetBuffer(0);\\n\\n//Release it.\\norigCString.ReleaseBuffer();\\n```\\n\\n**LPTSTR to** CString\xa0\\n\\n```cpp\\nLPTSTR origLPTSTR = \\"HelloWorld\\";\\nCString sCString = CString(origLPTSTR);\\n```\\n\\n**CString to\xa0char\\\\***\\n\\n```cpp\\nCString origCString = \\"HelloWorld\\";\\n\\n// Get the internal buffer pointer of CString.\\nchar* pString = origCString.GetBuffer();\\n\\n//Release it.\\norigCString.ReleaseBuffer();\\n```\\n\\n**char* to** CString\\n\\n```cpp\\nchar* origchar = \\"HelloWorld\\";\\nCString cstring = CString(origchar);\\n```\\n\\n**CString to\xa0CComBSTR**\\n\\n```cpp\\nCString origCString = \\"HelloWorld\\";\\nCComBSTR ccombstr = CComBSTR(origCString);\\n```\\n\\n**CComBSTR to** CString\\n\\n```cpp\\nCComBSTR origCComBSTR = \\"HelloWorld\\";\\nCString cstring = CString(origCComBSTR);\\n```\\n\\n**CString\xa0to** _bstr_t\\n\\n```cpp\\nCString origCString = \\"HelloWorld\\";\\n_bstr_t bstrt = _bstr_t(origCString);\\n```\\n\\n**_bstr_t to** CString\\n\\n```cpp\\n_bstr_t origbstrt  = \\"HelloWorld\\";\\nCString cstring = CString((char\\\\*)origbstrt);\\n```\\n\\n**CString\xa0to** BSTR\\n\\n```cpp\\nCString origCString = \\"HelloWorld\\";\\nBSTR bstr = origCString.AllocSysString();\\n::SysFreeString(bstr); //Free the string.\\n```\\n\\n**BSTR to** CString\\n\\n```cpp\\nBSTR origbstr  = \\"HelloWorld\\";\\nCString cstring = CString(origbstr);\\n```\\n\\n**CString\xa0to** CComVariant\\n\\n```cpp\\nCString origCString = \\"HelloWorld\\";\\nCComVariant comvariant =  CComVariant(origCString);\\n```\\n\\n**CComVariant to** CString\\n\\n```cpp\\nCComVariant origcomvariant  = \\"HelloWorld\\";\\nCString cstring = CString(origcomvariant);\\n```\\n\\n**CString\xa0to** COleVariant\\n\\n```cpp\\nCString origCString = \\"HelloWorld\\";\\nCOleVariant olevariant =  CComVariant(origCString);\\n```\\n\\n**COleVariant to** CString\\n\\n```cpp\\nCOleVariant origolevariant  = \\"HelloWorld\\";\\nCString cstring = CString(origolevariant);\\n```"},{"id":"/2012/03/13/how-do-remove-untitled-in-main-window-caption","metadata":{"permalink":"/blog/2012/03/13/how-do-remove-untitled-in-main-window-caption","source":"@site/blog/2012-03-13-how-do-remove-untitled-in-main-window-caption.md","title":"How do remove \'Untitled\' in main window caption","description":"To remove \'Untitled\' in main window caption","date":"2012-03-13T00:00:00.000Z","formattedDate":"March 13, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.305,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Converting from CString","permalink":"/blog/2012/03/13/converting-from-cstring"},"nextItem":{"title":"Steve Jobs by Walter Isaacson","permalink":"/blog/2012/03/10/steve-jobs-walter"}},"content":"To remove \'Untitled\' in main window caption\\n\\n1. Override the PreCreateWindow() function in CMainFrame class\\n2. Modify the CREATESTRUCT style by adding the below code **cs.style &= ~FWS\\\\_ADDTOTITLE ;**\\n\\n**Code snippet:**\\n\\n```c\\nBOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)\\n{\\nif( !CFrameWnd::PreCreateWindow(cs) )\\nreturn FALSE;\\n\\n////////////////////////////////////////////////////////////////////////////\\n// To remove \'Untitled\' in main window caption //\\n////////////////////////////////////////////////////////////////////////////\\ncs.style &amp;= ~FWS\\\\_ADDTOTITLE ;\\n////////////////////////////////////////////////////////////////////////////\\n\\nreturn TRUE;\\n}\\n```"},{"id":"/2012/03/10/steve-jobs-walter","metadata":{"permalink":"/blog/2012/03/10/steve-jobs-walter","source":"@site/blog/2012-03-10-steve-jobs-walter.md","title":"Steve Jobs by Walter Isaacson","description":"Bought Steve Jobs by Walter Isaacson) Biography on Feburary 14, 2012 to present it to my self through flipkart.com.","date":"2012-03-10T00:00:00.000Z","formattedDate":"March 10, 2012","tags":[{"label":"Books","permalink":"/blog/tags/books"}],"readingTime":1.35,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Books"]},"prevItem":{"title":"How do remove \'Untitled\' in main window caption","permalink":"/blog/2012/03/13/how-do-remove-untitled-in-main-window-caption"},"nextItem":{"title":"Get back the Recent Documents Menu in Windows 7","permalink":"/blog/2012/01/23/get-back-recent-documents-menu-win7"}},"content":"Bought [Steve Jobs by Walter Isaacson](http://en.wikipedia.org/wiki/Steve_Jobs_(book)) Biography on Feburary 14, 2012 to present it to my self through flipkart.com.\\r\\n\\r\\nToday March 10, 2012 12.20 PM I had completed reading the book it contains 42 chapters spread over 571 pages\\r\\n\\r\\nReality Distortion Field: It can be done\\r\\n\\r\\n![](/img/steve-jobs-walter.JPG)\\r\\n\\r\\n## Books That Inspired Steve Jobs\\r\\n\\r\\n1. \'Autobiography of a Yogi\' by Paramahansa Yogananda\\r\\nJobs read and re-read many times during his life. Jobs had first read as a teenager,\\" Isaacson writes, \\"then re-read in India and had read once a year ever since.\\r\\n\\r\\n2. \'Be Here Now\' by Ram Dass\\r\\n\\r\\n3. Zen Mind, Beginner\'s Mind by Shunryu Suzuki\\r\\n\\r\\n4. \'The Innovator\'s Dilemma\' by Clayton Christensen\\r\\n\\r\\n5. \'The Whole Earth Catalog\' periodicals\\r\\n\\r\\n6. Herman Melville\'s Moby Dick\\r\\n\\r\\n7. Shakespeare\'s King Lear\\r\\n\\r\\n8. Poems of Dylan Thomas\\r\\n\\r\\n9. \'Diet For A Small Planet\' by Frances Lapp\\r\\n\\r\\n10. \'Mucusless Diet Healing System\' by Arnold Ehret\\r\\n\\r\\n11. Chogyam Trungpa\'s \\"Cutting Through Spiritual Materialism\\"\\r\\n\\r\\n## Articles\\r\\n1. \\"Secrets of the Little Blue Box,\\"\\r\\n\\r\\n## The Music That Inspired Steve Jobs\\r\\n1. Bob Dylan - bootlegs\\r\\n2. Beatles\\r\\n3. Stones\\r\\n4. Joan Baez - Love Is A Four Letter Word song\\r\\n5. Joni Mitchell - Both Sides Now song\\r\\n6. \\"Uncle John\'s Band\\" by the Grateful Dead\\r\\n7. Glenn Gould\\r\\n\\r\\n## Quotes From His Biography\\r\\n\\"If you don\'t cannibalize yourself, someone else will.\\"\\r\\n\\r\\n\\"People don\u2019t know what they want until you show it to them.\\"\\r\\n\\r\\n\\"I hate it when people call themselves \'entrepreneurs\' when what they\u2019re really trying to do is launch a startup and then sell or go public, so they can cash in and move on.\\""},{"id":"/2012/01/23/get-back-recent-documents-menu-win7","metadata":{"permalink":"/blog/2012/01/23/get-back-recent-documents-menu-win7","source":"@site/blog/2012-01-23-get-back-recent-documents-menu-win7.md","title":"Get back the Recent Documents Menu in Windows 7","description":"Here is how I got it back:","date":"2012-01-23T00:00:00.000Z","formattedDate":"January 23, 2012","tags":[{"label":"Tools","permalink":"/blog/tags/tools"}],"readingTime":0.245,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Tools"]},"prevItem":{"title":"Steve Jobs by Walter Isaacson","permalink":"/blog/2012/03/10/steve-jobs-walter"},"nextItem":{"title":"Sending SMS using C","permalink":"/blog/2012/01/23/sending-sms-using-c"}},"content":"Here is how I got it back:\\n\\n1. Right click the\xa0**Start**/Win button, select\xa0**Properties**\\n2. Click the\xa0**Start Menu** tab (it should be select as default)\\n3. Click the\xa0**Customize**\xa0button\\n4. Scroll down and check the\xa0**Recent Items\xa0check box**\\n5. Click\xa0Ok\\n6. Click\xa0Apply\\n7. Click\xa0Ok\\n8. Check \\"Recent\\" option in the start menu."},{"id":"/2012/01/23/sending-sms-using-c","metadata":{"permalink":"/blog/2012/01/23/sending-sms-using-c","source":"@site/blog/2012-01-23-sending-sms-using-c.md","title":"Sending SMS using C","description":"Step 1: Create a new project in Microsoft Visual Studio 2008 (File -> New -> Project -> Visual C# -> Console Application). Give SMS_Sender name and also specify the location where to store the project.","date":"2012-01-23T00:00:00.000Z","formattedDate":"January 23, 2012","tags":[{"label":"CSharp","permalink":"/blog/tags/c-sharp"}],"readingTime":1.35,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["CSharp"]},"prevItem":{"title":"Get back the Recent Documents Menu in Windows 7","permalink":"/blog/2012/01/23/get-back-recent-documents-menu-win7"},"nextItem":{"title":"Message Map vs Virtual Functions","permalink":"/blog/2012/01/21/message-map-vs-virtual-functions"}},"content":"**Step 1:** Create a new project in Microsoft Visual Studio 2008 (File -> New -> Project -> Visual C# -> Console Application). Give SMS_Sender name and also specify the location where to store the project.\\n\\n**Step 2:** Now add a new item to the project we just created (Project -> Add New Item -> Class). Specify a name to the class as \u2018SMSHelper\u2019. The code now looks like as follows. The namespace used is\\n\\n```cpp\\nusing System.IO; \\nusing System.Net; \\n```\\n\\n**SMSHelper.cs**\\n\\n```cs\\n public class SMSHelper { \\n  private WebResponse myResponse = null; \\n  private string result = string.Empty; \\n  private string formatUrl(string ToMobileNo, string Message) {\\n     DateTime mydate = System.DateTime.Now; \\n     string url = \\"\\"; url += \\"method=sendMessage\\"; \\n     url += \\"&userid=2000053959\\"; // your loginId - 1 \\n     url += \\"&password=Gdgek2yiY\\";//password - 2 \\n     url += \\"&msg=\\" + mydate.ToString(); \\n     url += Message; \\n     url += \\"&send_to=\\"; // a valid 10 digit phone no. \\n     url += ToMobileNo; url += \\"&v=1.1\\"; \\n     url += \\"&msg_type=TEXT\\";  // Can be \\"FLASH\\" or \\"UNICODE\\\\_TEXT\\" or \\"BINARY\\" \\n     url += \\"&auth_scheme=PLAIN\\"; \\n     return url; \\n     }\\n\\n    public string SendSms(string ToMobileNo , string Message)\\n    {\\n        try\\n          {\\n            string finalUrl = \\"http://enterprise.smsgupshup.com/GatewayAPI/rest?\\" + formatUrl(ToMobileNo, Message);\\n            HttpWebRequest myRequest = (HttpWebRequest)WebRequest.Create(finalUrl);\\n            myResponse = myRequest.GetResponse();\\n            Stream st = myResponse.GetResponseStream();\\n\\n            Encoding ec = System.Text.Encoding.GetEncoding(\\"utf-8\\");\\n            StreamReader reader = new System.IO.StreamReader(st, ec);\\n\\n            result = reader.ReadToEnd();\\n\\n            reader.Close();\\n            st.Close();\\n            return result;\\n        }\\n        catch (Exception exp)\\n        {\\n           return result;\\n        }\\n        finally\\n        {\\n            if (myResponse != null) myResponse.Close();\\n        }\\n    }\\n}\\n```\\n\\n**Step 3:** Open Program.cs and in Main write the following lines to send the SMS\\n\\n```cpp\\n class Program { \\n  static void Main(string[] args) { \\n    SMSHelper smsObj = new SMSHelper(); \\n    string Text = smsObj.SendSms(\\"1234567890\\", \\"HelloWorld\\"); \\n    Console.WriteLine(Text); \\n    } \\n} \\n```"},{"id":"/2012/01/21/message-map-vs-virtual-functions","metadata":{"permalink":"/blog/2012/01/21/message-map-vs-virtual-functions","source":"@site/blog/2012-01-21-message-map-vs-virtual-functions.md","title":"Message Map vs Virtual Functions","description":"Message Map is a logical table that maps the windows messages to the member functions of the class. Message map is preferred than virtual functions due\xa0 to avoid following drawbacks:","date":"2012-01-21T00:00:00.000Z","formattedDate":"January 21, 2012","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.385,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Sending SMS using C","permalink":"/blog/2012/01/23/sending-sms-using-c"},"nextItem":{"title":"C FAQ 4 to 7: Simple Programms","permalink":"/blog/2012/01/20/c-faq-4-to-7-simple-programms"}},"content":"Message Map is a logical table that maps the windows messages to the member functions of the class. Message map is preferred than virtual functions due\xa0 to avoid following drawbacks:\\n\\n1. Most windows only process a small number of messages, yet each window require to giant virtual function table with the entries of each message. \\n\\n2. More efficient and use less space then virtual functions. \\n\\n3. Virtual functions don\'t handle user defined messages and other custom cases."},{"id":"/2012/01/20/c-faq-4-to-7-simple-programms","metadata":{"permalink":"/blog/2012/01/20/c-faq-4-to-7-simple-programms","source":"@site/blog/2012-01-20-c-faq-4-to-7-simple-programms.md","title":"C FAQ 4 to 7: Simple Programms","description":"4.\xa0Swap of two numbers \xa0with out temp","date":"2012-01-20T00:00:00.000Z","formattedDate":"January 20, 2012","tags":[{"label":"C","permalink":"/blog/tags/c"}],"readingTime":0.275,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C"]},"prevItem":{"title":"Message Map vs Virtual Functions","permalink":"/blog/2012/01/21/message-map-vs-virtual-functions"},"nextItem":{"title":"Write a code to Outputs its own code\\"","permalink":"/blog/2012/01/19/c-faq-how-to-write-a-code-to-outputs-its-own-code"}},"content":"## 4.\xa0Swap of two numbers \xa0with out temp\\n\\n```c\\n#include \\"stdio.h\\";\\n\\nint main()\\n{\\n  int a,b;\\n  a=10;\\n  b=20;\\n  printf(\\"Before swapingn\\");\\n  printf(\\"%dt%dn\\",a,b);\\n\\n  /* normal temp\\n  int temp;\\n  temp=a;\\n  a=b;\\n  b=temp;\\n\\n  //sol:-1\\n  a=a+b;\\n  b=a-b;\\n  a=a-b;\\n\\n  //sol:-2\\n  a=ab;\\n  b=a/b;\\n  a=a/b;/\\n\\n  //sol:-3\\n  //a^=b^=a^=b;\\n\\n  a= a^b;\\n  b= a^b;\\n  a= a^b;\\n  printf(\\"%dt\\",a);\\n  printf(\\"After swapingn\\");\\n  printf(\\"%dt%dn\\",a,b);\\n  return 0;\\n}\\n ```\\n\\n[Read More](/docs/articles/C/CFaq)"},{"id":"/2012/01/19/c-faq-how-to-write-a-code-to-outputs-its-own-code","metadata":{"permalink":"/blog/2012/01/19/c-faq-how-to-write-a-code-to-outputs-its-own-code","source":"@site/blog/2012-01-19-c-faq-how-to-write-a-code-to-outputs-its-own-code.md","title":"Write a code to Outputs its own code\\"","description":"FILE macro  is a Predefined Macros : The name of the current source file.","date":"2012-01-19T00:00:00.000Z","formattedDate":"January 19, 2012","tags":[{"label":"C","permalink":"/blog/tags/c"}],"readingTime":0.35,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C"]},"prevItem":{"title":"C FAQ 4 to 7: Simple Programms","permalink":"/blog/2012/01/20/c-faq-4-to-7-simple-programms"},"nextItem":{"title":"All About Design Patterns","permalink":"/blog/2012/01/18/all-about-design-patterns"}},"content":"__FILE__ macro  is a Predefined Macros : The name of the current source file.\\nFILE expands to a string surrounded by double quotation marks.\\n\\nfgetc: Read a character from a stream. returns an integer putchar: Writes a character to a stream\\n\\n```c\\n# include \\"stdio.h\\"\\n//Program that outputs its own code \\n\\nint main () { \\n  FILE *fp; char c;\\n  fp = fopen(__FILE__,\\"r\\");\\n\\n while((c=getc(fp))!= EOF) { \\n  printf(\\"%c\\",c); \\n  } \\n  fclose(fp);\\n} \\n```"},{"id":"/2012/01/18/all-about-design-patterns","metadata":{"permalink":"/blog/2012/01/18/all-about-design-patterns","source":"@site/blog/2012-01-18-all-about-design-patterns.md","title":"All About Design Patterns","description":"Definition:","date":"2012-01-18T00:00:00.000Z","formattedDate":"January 18, 2012","tags":[{"label":"Design Patterns","permalink":"/blog/tags/design-patterns"}],"readingTime":0.53,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"All About Design Patterns","date":"2012-01-18","categories":["Design Patterns"],"tags":["Design Patterns"]},"prevItem":{"title":"Write a code to Outputs its own code\\"","permalink":"/blog/2012/01/19/c-faq-how-to-write-a-code-to-outputs-its-own-code"},"nextItem":{"title":"Design Pattern: C# Singleton","permalink":"/blog/2012/01/18/design-pattern-c-singleton"}},"content":"## Definition: \\n\\nDesign Patterns represent solutions to problems that arise when developing software within a particular context.\\nPatterns help you learn from other\'s successes, instead of your own failures. Mark Johnson (cited by Bruce Eckel)\\n\\n## Types of Design\xa0Patterns \\n\\nThere are three types of design patterns\\n\\n1. Creational Patterns: Creational Patterns deals with initializing and configuring classes and objects\\n2. Structural Patterns: Structural Patterns deals with decoupling the interface and implementation of classes and objects\\n3. Behavioral Patterns: Behavioral Patterns deals with dynamic interactions among societies of classes and objects\\n\\nThese three design patters are divided in to 22 different kinds of patterns as shown below."},{"id":"/2012/01/18/design-pattern-c-singleton","metadata":{"permalink":"/blog/2012/01/18/design-pattern-c-singleton","source":"@site/blog/2012-01-18-design-pattern-c-singleton.md","title":"Design Pattern: C# Singleton","description":"","date":"2012-01-18T00:00:00.000Z","formattedDate":"January 18, 2012","tags":[{"label":"CSharp","permalink":"/blog/tags/c-sharp"},{"label":"Design Patterns","permalink":"/blog/tags/design-patterns"}],"readingTime":0.46,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["CSharp","Design Patterns"]},"prevItem":{"title":"All About Design Patterns","permalink":"/blog/2012/01/18/all-about-design-patterns"},"nextItem":{"title":"Restore a Database Backup in MS SQL Server 2008","permalink":"/blog/2012/01/18/restore-db-backup-using-bak-file-sql2008"}},"content":"```cpp \\nusing System;\\n\\nnamespace CSharp { \\n  //Singleton: Ensure a class only has one instance, \\n  //and provide a global point of access to it. \\n  class Singleton { \\n    //Member Variable \\n    private static Singleton instance = null;\\n    \\n    //Memeber Functions\\n    private Singleton()\\n    {\\n    }\\n\\n    public static Singleton Instance()\\n    {\\n        if(instance == null )\\n        {\\n          instance = new Singleton ();\\n        }\\n\\n        return instance;\\n    }\\n\\n    public void print()\\n    {\\n      Console.WriteLine(\\"Singleton Class\\" );\\n    }\\n\\n};\\n\\nclass Program { \\n\\n  static void Main(string[] args) {\\n     Singleton n = Singleton .Instance(); \\n     n.print();\\n     Singleton p = Singleton .Instance();\\n     p.print();\\n  }\\n\\n } \\n\\n}\\n\\n```"},{"id":"/2012/01/18/restore-db-backup-using-bak-file-sql2008","metadata":{"permalink":"/blog/2012/01/18/restore-db-backup-using-bak-file-sql2008","source":"@site/blog/2012-01-18-restore-db-backup-using-bak-file-sql2008.md","title":"Restore a Database Backup in MS SQL Server 2008","description":"How to Restore a Database Backup Using .bak file in MS SQL Server 2008","date":"2012-01-18T00:00:00.000Z","formattedDate":"January 18, 2012","tags":[{"label":"SQL Server","permalink":"/blog/tags/sql-server"}],"readingTime":0.52,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["SQL Server"]},"prevItem":{"title":"Design Pattern: C# Singleton","permalink":"/blog/2012/01/18/design-pattern-c-singleton"},"nextItem":{"title":"Simple Windows Form in C","permalink":"/blog/2012/01/18/simple-windows-form-in-c"}},"content":"How to Restore a Database Backup Using .bak file in MS SQL Server 2008\\n\\n\\\\.bak files are database backups we can restore the Database backup using SQL Server Management Studio.\\n\\nA. Open SQL Server Management Studio in Object Explorer Right Click on \'Databases\' Node and select \'Restore Database\'\\n\\n\\nB.\xa0\'Restore Database\' Dialog will be displayed on the\xa0**General**\xa0page\\n\\n1. The name of the restoring database appears in the\xa0**To database**\xa0list box. To create a new database, enter its name in the list box.\\n    \\n2. Select \'From device\'\\n    \\n3. Click button to\xa0display \'Specify Backup\' Dialog\\n    \\n4. Click \'Add\'\xa0 to browse the .bak file from the\xa0directory and click OK"},{"id":"/2012/01/18/simple-windows-form-in-c","metadata":{"permalink":"/blog/2012/01/18/simple-windows-form-in-c","source":"@site/blog/2012-01-18-simple-windows-form-in-c.md","title":"Simple Windows Form in C","description":"Minimal code to write a c# windows form:","date":"2012-01-18T00:00:00.000Z","formattedDate":"January 18, 2012","tags":[{"label":"CSharp","permalink":"/blog/tags/c-sharp"}],"readingTime":0.21,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["CSharp"]},"prevItem":{"title":"Restore a Database Backup in MS SQL Server 2008","permalink":"/blog/2012/01/18/restore-db-backup-using-bak-file-sql2008"},"nextItem":{"title":"Change the name of the Debug Version of a DLL or Exe","permalink":"/blog/2012/01/05/changedebug-version-of-a-dll-or-exe"}},"content":"Minimal code to write a c# windows form:\\n\\n```cpp \\nusing System.Windows.Forms;\\n\\nnamespace ConsoleFormApp { \\n  class MyWindow : Form { \\n    public MyWindow() { \\n      this.Text = \\"First Form\\"; \\n      } \\n    }\\n\\nclass Program { \\n  static void Main(string\\\\[\\\\] args) { \\n    Application.Run(new MyWindow());\\n    }\\n  }\\n} \\n```"},{"id":"/2012/01/05/changedebug-version-of-a-dll-or-exe","metadata":{"permalink":"/blog/2012/01/05/changedebug-version-of-a-dll-or-exe","source":"@site/blog/2012-01-05-changedebug-version-of-a-dll-or-exe.md","title":"Change the name of the Debug Version of a DLL or Exe","description":"Its very useful to name the Debug version of the exe or DLL with letter \\"D\\" appended inoder to avoid confisuion between release and debug version of binaries","date":"2012-01-05T00:00:00.000Z","formattedDate":"January 5, 2012","tags":[{"label":"C++","permalink":"/blog/tags/c"},{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.37,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++","MFC"]},"prevItem":{"title":"Simple Windows Form in C","permalink":"/blog/2012/01/18/simple-windows-form-in-c"},"nextItem":{"title":"Reading a file using JavaScript","permalink":"/blog/2012/01/05/reading-a-file-using-javascript"}},"content":"Its very useful to name the Debug version of the exe or DLL with letter \\"D\\" appended inoder to avoid confisuion between release and debug version of binaries\\n\\n**Steps:**\\n\\n1. Create a console application with name \\"MyProject\\"\\n\\n2. To change the output file name in debug configuration\\n\\nplace\xa0**D**\xa0as shown in below figure\\n\\nProject Project Properties -> Linker -> General -> Output File\\n\\n**Release Version:** MyProject Application Name: c:MyProjectReleaseMyProject.exe **Debug Version:** MyProject Application Name: c:MyProjectDebugMyProjectD.exe"},{"id":"/2012/01/05/reading-a-file-using-javascript","metadata":{"permalink":"/blog/2012/01/05/reading-a-file-using-javascript","source":"@site/blog/2012-01-05-reading-a-file-using-javascript.md","title":"Reading a file using JavaScript","description":"To read a file from the browser used the below sample code.","date":"2012-01-05T00:00:00.000Z","formattedDate":"January 5, 2012","tags":[{"label":"Javascript","permalink":"/blog/tags/javascript"}],"readingTime":0.26,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Javascript"]},"prevItem":{"title":"Change the name of the Debug Version of a DLL or Exe","permalink":"/blog/2012/01/05/changedebug-version-of-a-dll-or-exe"},"nextItem":{"title":"Single Document Interface Class Diagram","permalink":"/blog/2011/10/22/sdi_classdiagra"}},"content":"To read a file from the browser used the below sample code.\\n\\n```js\\n function ReadFile(filename) {\\n   try {\\n    var fso = new ActiveXObject(\\"Scripting.FileSystemObject\\"); \\n    var fh = fso.OpenTextFile(filename,1); \\n    var contents = fh.ReadAll(); \\n    fh.Close(); \\n    return contents;\\n    } catch (Exception) {\\n      var msg = \\"ERROR:\\"+\\"\\"\\"+filename+ \\"\\"\\"+ \\": \\" +Exception.description; alert(msg); \\n      return msg; \\n    } \\n} \\n ```"},{"id":"/2011/10/22/sdi_classdiagra","metadata":{"permalink":"/blog/2011/10/22/sdi_classdiagra","source":"@site/blog/2011-10-22-sdi_classdiagra.md","title":"Single Document Interface Class Diagram","description":"A CSDIApp MFC application will have a single CWinApp class object. This holds a CDocManager object which is used by the MFC to handle all the CDocTemplate objects that we registered with the framework.","date":"2011-10-22T00:00:00.000Z","formattedDate":"October 22, 2011","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.43,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Reading a file using JavaScript","permalink":"/blog/2012/01/05/reading-a-file-using-javascript"},"nextItem":{"title":"Steve Jobs Documentary & Best videos","permalink":"/blog/2011/10/09/steve-jobs-documentary-best-videos"}},"content":"A CSDIApp MFC application will have a single CWinApp class object. This holds a CDocManager object which is used by the MFC to handle all the CDocTemplate objects that we registered with the framework.\\n\\nThe CWinApp object also creates a CMainFrame object which is the main window of CSDIApp application.\\n\\nEvery time if we open/create a document in CSDIApp application, a CDocument object of the right type will be created. A pointer to CDocument object will be stored in a list under the corresponding CDocTemplate object."},{"id":"/2011/10/09/steve-jobs-documentary-best-videos","metadata":{"permalink":"/blog/2011/10/09/steve-jobs-documentary-best-videos","source":"@site/blog/2011-10-09-steve-jobs-documentary-best-videos.md","title":"Steve Jobs Documentary & Best videos","description":"To day I had found popular \'Steve Jobs Documentary\' and inspiring speechs of Steve Jobs ...","date":"2011-10-09T00:00:00.000Z","formattedDate":"October 9, 2011","tags":[{"label":"Others","permalink":"/blog/tags/others"}],"readingTime":0.265,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Others"]},"prevItem":{"title":"Single Document Interface Class Diagram","permalink":"/blog/2011/10/22/sdi_classdiagra"},"nextItem":{"title":"Memory Layout of a class (C++) Object","permalink":"/blog/2011/09/18/memory-layout-of-a-class-c-object"}},"content":"To day I had found popular \'Steve Jobs Documentary\' and inspiring speechs of Steve Jobs ...\\n\\n### **Documentary** \\n\\n## Documentary Part 1\\n\\n[[youtube=](http://www.youtube.com/watch?v=QgiEG-NsAB0&feature=related)[http://www.youtube.com/watch?v=QgiEG-NsAB0&feature=related](http://www.youtube.com/watch?v=QgiEG-NsAB0&amp;feature=related)\\\\]\\n\\n## Documentary Part 2\\n\\n[\\\\[youtube=](http://www.youtube.com/watch?NR=1&v=3zvBLxvg7ds)[http://www.youtube.com/watch?NR=1&v=3zvBLxvg7ds](http://www.youtube.com/watch?NR=1&amp;v=3zvBLxvg7ds)\\\\]\\n\\n## Documentary Part 3\\n\\n[\\\\[youtube=](http://www.youtube.com/watch?NR=1&v=6tnz3NpR1xg)[http://www.youtube.com/watch?NR=1&v=6tnz3NpR1xg](http://www.youtube.com/watch?NR=1&amp;v=6tnz3NpR1xg)\\\\]\\n\\n## Documentary Part 4\\n\\n[\\\\[youtube=](http://www.youtube.com/watch?NR=1&v=K7tdqL_M87Y)[http://www.youtube.com/watch?NR=1&v=K7tdqL\\\\_M87Y](http://www.youtube.com/watch?NR=1&amp;v=K7tdqL_M87Y)\\\\]\\n\\n## Documentary Part 5\\n\\n\\\\[youtube=[http://www.youtube.com/watch?NR=1&v=TUXUbVG-Lx8](http://www.youtube.com/watch?NR=1&amp;v=TUXUbVG-Lx8)\\\\]\\n\\n## Stanford Commencement Address\\n\\nSteve Jobs\' Stanford Commencement Addres\\n\\n[\\\\[youtube=](http://www.youtube.com/watch?v=UF8uR6Z6KLc)[http://www.youtube.com/watch?v=UF8uR6Z6KLc](http://www.youtube.com/watch?v=UF8uR6Z6KLc)\\\\]"},{"id":"/2011/09/18/memory-layout-of-a-class-c-object","metadata":{"permalink":"/blog/2011/09/18/memory-layout-of-a-class-c-object","source":"@site/blog/2011-09-18-memory-layout-of-a-class-c-object.md","title":"Memory Layout of a class (C++) Object","description":"Let us know how the members of a class are stored in the C++ class object.","date":"2011-09-18T00:00:00.000Z","formattedDate":"September 18, 2011","tags":[{"label":"C++","permalink":"/blog/tags/c"}],"readingTime":0.595,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++"]},"prevItem":{"title":"Steve Jobs Documentary & Best videos","permalink":"/blog/2011/10/09/steve-jobs-documentary-best-videos"},"nextItem":{"title":"Size Matters (C++)","permalink":"/blog/2011/09/18/size-matters-c"}},"content":"Let us know how the members of a class are stored in the C++ class object.\\n\\n1. All Static Members Functions, Static member variables and Non static Members Functions are hoisted outside the class object.\\n2. All non static member variables are stored in the class object.\\n3. All virtual functions are part of Virtual Table. And a pointer (vptr) to the created Virtual Table is inserted with in each class object.\\n\\n**Sample Program:**\\n\\n```cpp\\nclass Sample\\n{\\npublic:\\n     Sample() {};\\n\\n     virtual ~Sample() {}\\n     virtual void virtualFun1() {}\\n     virtual void virtualFun2() {}\\n\\n     void normalFun() {}\\n\\n     static int getCount() //static function\\n     {\\n       return nCount;\\n     }\\n\\nprivate:\\n     int i;\\n     static int nCount;\\n};\\n\\nvoid main()\\n{\\n    Sample obj;\\n    cout<<obj;\\n}\\n\\n```"},{"id":"/2011/09/18/size-matters-c","metadata":{"permalink":"/blog/2011/09/18/size-matters-c","source":"@site/blog/2011-09-18-size-matters-c.md","title":"Size Matters (C++)","description":"C++ class have","date":"2011-09-18T00:00:00.000Z","formattedDate":"September 18, 2011","tags":[{"label":"C++","permalink":"/blog/tags/c"}],"readingTime":1.655,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++"]},"prevItem":{"title":"Memory Layout of a class (C++) Object","permalink":"/blog/2011/09/18/memory-layout-of-a-class-c-object"},"nextItem":{"title":"Variable arguments handling in C/C++","permalink":"/blog/2011/09/18/variable-arguments-handling"}},"content":"C++ class have \\n\\nA. Data Members\\nB. Members Functions\\n\\n## Data Members\\n\\n1. Static Data Member The size of a class object with only Static data members irrespective of Data Type (say float, long e.tc.) is\xa0equal to [one Byte (~ size of Empty class)](http://nagvbt.blogspot.com/2011/09/18/why-size-of-an-empty-c-class-not-zero/) \\n    \\n```cpp\\n    class CStaticDataMemberCls\\n    {\\n    public:\\n    static int i;\\n    static float f;\\n    };\\n    \\n\\nvoid main() { \\n    CStaticDataMemberCls objSDMC; \\n    cout<<objSDMC;\\n    } \\n```\\n\\n2. Non Static Data Member The size of a class with non static data members is equal to sum of the data type size i.e. size of int = 4 size of float = 4 so total = 8\\n    \\n```cpp\\n    class CNonStaticDataMemberCls\\n    {\\n    public:\\n    int i;\\n    float f;\\n    };\\n    \\n\\nvoid main() { \\n    CNonStaticDataMemberCls objNSDMC; \\n    cout<<objNSDMC;\\n    } \\n``` \\n    \\n## Members Functions\\n\\n1. Static Members Functions\\n2. Non Static Members Functions\\n\\nAs Static Members Functions and Non static Members Functions are hoisted outside the class object. The size of the class will also be equal to [one Byte (~ size of Empty class)](http://nagvbt.blogspot.com/2011/09/18/why-size-of-an-empty-c-class-not-zero/) \\n\\n```cpp\\nclass CMemberFunctionsCls\\n{\\npublic:\\n    int fun1() { return 1; }\\n    static int staticFun() { return 1; }\\n\\n};\\n\\nvoid main()\\n{\\n    CMemberFunctionsCls objMFC;\\n    cout<<objMFC;\\n}\\n```\\n\\n3. Virtual Members Functions If a class consists of virtual functions a table of pointers(i.e. Virtual Table) to virtual functions is generated for each class. And a pointer (vptr) to the created Virtual Table is inserted with in each class object. So the size of CVirtualFunctionCls object will be 4 Bytes which is nothing but a size of vptr.\\n    \\n```cpp\\n    class CVirtualFunctionCls\\n    {\\n    public:\\n    virtual ~CVirtualFunctionCls() {}\\n        virtual void virtualFun1() {}\\n    virtual void virtualFun2() {}\\n    };\\n    \\n\\nvoid main() { \\n    CVirtualFunctionCls objVFC; \\n    cout<<objVFC;\\n} \\n``` \\nLet us see the class with all the above members\\n\\n```cpp\\nclass Sample\\n{\\npublic:\\n     Sample() {};\\n\\n     virtual ~Sample() {}\\n     virtual void virtualFun1() {}\\n     virtual void virtualFun2() {}\\n\\n     void normalFun() {}\\n\\n     static int getCount() //static function\\n     {\\n       return nCount;\\n     }\\n\\nprivate:\\n     int i;\\n     static int nCount;\\n};\\n\\nvoid main()\\n{\\n    Sample obj;\\n    cout<<obj;\\n}\\n\\n```"},{"id":"/2011/09/18/variable-arguments-handling","metadata":{"permalink":"/blog/2011/09/18/variable-arguments-handling","source":"@site/blog/2011-09-18-variable-arguments-handling.md","title":"Variable arguments handling in C/C++","description":"Use valist to accept a VARYING NUMBER OF ARGUMENTS for any function in C/C++. printf(const char\\\\* Format, ...) is a real time function which uses va_list.","date":"2011-09-18T00:00:00.000Z","formattedDate":"September 18, 2011","tags":[{"label":"C++","permalink":"/blog/tags/c"}],"readingTime":0.65,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++"]},"prevItem":{"title":"Size Matters (C++)","permalink":"/blog/2011/09/18/size-matters-c"},"nextItem":{"title":"Why size of an empty C++ class not zero?","permalink":"/blog/2011/09/18/why-size-of-an-empty-c-class-not-zero"}},"content":"Use va_list to accept a VARYING NUMBER OF ARGUMENTS for any function in C/C++. printf(const char\\\\* _Format, ...) is a real time function which uses va_list.\\n\\nFor using va_list we need to know about the following macros\\n\\nva_start Initialize a variable argument list (macro) va_arg Retrieve next argument (macro) va_end End using variable argument list (macro)\\n\\nThe sample explains how to use VARYING NUMBER OF ARGUMENTS\\n\\n```cpp\\n\\n# include <stdarg.h>\\n\\nint Add(int args, ...) \\n{ \\n  int sum = 0; \\n  int temp = 0;\\n\\n  va_list va; //1. Declare a va_list\\n\\n  va_start(va, args); //2. Initialise\\n\\n  for(int i = 0; i<=args; i++) { \\n    temp = va_arg(va, int); //3. Retrieve \\n    sum = temp+sum; \\n  }\\n\\nva_end(va); //4. END\\n\\nreturn sum; \\n}\\n\\nvoid main() { \\n  printf(\\"sum=%d n \\", Add(2, 1, 2, 5)); \\n  //OutPut: 8 \\n  }\\n```"},{"id":"/2011/09/18/why-size-of-an-empty-c-class-not-zero","metadata":{"permalink":"/blog/2011/09/18/why-size-of-an-empty-c-class-not-zero","source":"@site/blog/2011-09-18-why-size-of-an-empty-c-class-not-zero.md","title":"Why size of an empty C++ class not zero?","description":"To ensure that the addresses of two different objects will be different C++ compiler will allocate one byte of memory. The below sample code explains clearly. Because of this behaviour the addresses of class X objects are not equal even though there is no data present in the class X.","date":"2011-09-18T00:00:00.000Z","formattedDate":"September 18, 2011","tags":[{"label":"C++","permalink":"/blog/tags/c"}],"readingTime":0.505,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++"]},"prevItem":{"title":"Variable arguments handling in C/C++","permalink":"/blog/2011/09/18/variable-arguments-handling"},"nextItem":{"title":"Console Application Event Handling","permalink":"/blog/2011/09/03/console-application-event-handling"}},"content":"To ensure that the addresses of two different objects will be different C++ compiler will allocate one byte of memory. The below sample code explains clearly. Because of this behaviour the addresses of class X objects are not equal even though there is no data present in the class X.\\n\\n```cpp \\nclass X {\\n\\n};\\n\\nclass Y {\\n\\n};\\n\\nvoid main() { \\n  X objX1, objX2; Y objY;\\n\\ncout<<\\"size of objX1: \\"<<sizeof(objX1)<<endl; //Output: 1 \\ncout<<\\"size of objY: \\"<<sizeof(objY)<<endl; //Output: 1\\n\\n//Addresses\\n cout<<\\"Address of objX1: \\"<<&objX1<<endl; \\n cout<<\\"Address of objX2: \\"<<&objX2<<endl;\\n\\ncout<<\\"Address of objY: \\"<<&objY<<endl;\\n\\nif(&objX1 == &objX2) { \\n  cout<<\\"Never Happens\\"; \\n  }\\n}\\n```"},{"id":"/2011/09/03/console-application-event-handling","metadata":{"permalink":"/blog/2011/09/03/console-application-event-handling","source":"@site/blog/2011-09-03-console-application-event-handling.md","title":"Console Application Event Handling","description":"Using SetConsoleCtrlHandler we can Add an application-defined HandlerRoutine function say myConsoleHandler.","date":"2011-09-03T00:00:00.000Z","formattedDate":"September 3, 2011","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.58,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Why size of an empty C++ class not zero?","permalink":"/blog/2011/09/18/why-size-of-an-empty-c-class-not-zero"},"nextItem":{"title":"Obtain a pointer to various objects in MFC","permalink":"/blog/2011/09/03/MFC-pointer"}},"content":"Using **SetConsoleCtrlHandler** we can Add an application-defined HandlerRoutine function say myConsoleHandler.\\n\\n**Note:** If the second parameter is TRUE, the handler is added; if it is FALSE, the handler is removed by SetConsoleCtrlHandler function.\\n\\n**Sample code is Shown Below**\\n\\n```c\\n#include \\"stdafx.h\\"\\n#include \\"windows.h\\"\\n\\nvoid myConsoleHandler(DWORD ctrlEvent)\\n{\\n   switch(ctrlEvent)\\n   {\\n        case CTRL_CLOSE_EVENT:\\n            MessageBox(NULL,\\"Program being closed!\\",\\"CTRL_CLOSE_EVENT\\",MB_OK);\\n        break;\\n\\n        case CTRL_C_EVENT:\\n            MessageBox(NULL,\\"Copy Event!\\",\\"CTRL_C_EVENT\\",MB_OK);\\n        break;\\n   }\\n\\n}\\n\\nint main(int argc, _TCHAR* argv[])\\n{\\n    SetConsoleTitle(\\"Console Event Handler Demo\\");\\n\\n    if(SetConsoleCtrlHandler((PHANDLER_ROUTINE)myConsoleHandler, TRUE))\\n    {\\n         printf( \\"nThe Control Handler is installed.n\\" );\\n         printf( \\"n -- Now try pressing Ctrl+C or closing the console...\\" );\\n         while(1)\\n         {\\n           //Do Nothing\\n         }\\n    }\\n    else\\n    {\\n        printf( \\"nERROR: Could not set control handler\\");\\n        return 1;\\n    }\\n    return 0;\\n}\\n```"},{"id":"/2011/09/03/MFC-pointer","metadata":{"permalink":"/blog/2011/09/03/MFC-pointer","source":"@site/blog/2011-09-03-MFC-pointer.md","title":"Obtain a pointer to various objects in MFC","description":"The Table is very Handy when writing MFC SDI or MDI Applications","date":"2011-09-03T00:00:00.000Z","formattedDate":"September 3, 2011","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.17,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Console Application Event Handling","permalink":"/blog/2011/09/03/console-application-event-handling"},"nextItem":{"title":"MFC:Fill Background color of the Dialog","permalink":"/blog/2011/09/03/mfcdailogbckcolor"}},"content":"The Table is very Handy when writing MFC SDI or MDI Applications\\n\\n**Note:** To access only the current view, the document class \\n\\n- For SDI can call `AfxGetMainWnd()->GetActiveView()` \\n\\n- For MDI can call `AfxGetMainWnd()->MDIGetActive()->GetActiveView()`"},{"id":"/2011/09/03/mfcdailogbckcolor","metadata":{"permalink":"/blog/2011/09/03/mfcdailogbckcolor","source":"@site/blog/2011-09-03-mfcdailogbckcolor.md","title":"MFC:Fill Background color of the Dialog","description":"MFC Tip: To fill the Background color of the Dialog and get the background of the controls to look correct","date":"2011-09-03T00:00:00.000Z","formattedDate":"September 3, 2011","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.705,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"Obtain a pointer to various objects in MFC","permalink":"/blog/2011/09/03/MFC-pointer"},"nextItem":{"title":"XAML Auto formatting in Visual Studio 2010","permalink":"/blog/2011/08/24/xaml-auto-formatting-in-visual-studio-2010"}},"content":"MFC Tip: To fill the Background color of the Dialog and get the background of the controls to look correct\\n\\n1. Handle the ON_WM_ERASEBKGND Message and write the following code\\n   ```cpp \\n    BOOL CTNV_MFCDialogDemoDlg::OnEraseBkgnd(CDC\\\\* pDC)\\n    {\\n    CRect r;\\n    //GetClientRect gets the width & height of the client area of the Dialog\\n    GetClientRect(&r);\\n    CBrush br(RGB(0,255,0));\\n    pDC->SelectObject(br);\\n    pDC->FillRect(r,&br);\\n    \\n    //Make sure to return TRUE;\\n     //return CDialogEx::OnEraseBkgnd(pDC);\\n    return TRUE;\\n    }\\n    ```\\n    \\n    \\n2. To \xa0get the background of the controls to look correct Handle the ON_WM_CTLCOLOR Message and write the following code - Make sure to return the Brush Handle which was created same as a color of Dialog Background.\\n     ```cpp \\n    HBRUSH CTNV_MFCDialogDemoDlg::OnCtlColor(CDC\\\\* pDC, CWnd* pWnd, UINT nCtlColor)\\n    {\\n     //HBRUSH hbr = CDialogEx::OnCtlColor(pDC, pWnd, nCtlColor);\\n     //return hbr;\\n    \\n\\n     //Make sure to return the Brush color should be same as Dialog Background color \\n     CBrush br(RGB(0,255,0));\\n     return (HBRUSH)br; \\n    }\\n```"},{"id":"/2011/08/24/xaml-auto-formatting-in-visual-studio-2010","metadata":{"permalink":"/blog/2011/08/24/xaml-auto-formatting-in-visual-studio-2010","source":"@site/blog/2011-08-24-xaml-auto-formatting-in-visual-studio-2010.md","title":"XAML Auto formatting in Visual Studio 2010","description":"To Auto format XAML code in a readable and organized way","date":"2011-08-24T00:00:00.000Z","formattedDate":"August 24, 2011","tags":[{"label":"WPF","permalink":"/blog/tags/wpf"}],"readingTime":0.405,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["WPF"]},"prevItem":{"title":"MFC:Fill Background color of the Dialog","permalink":"/blog/2011/09/03/mfcdailogbckcolor"},"nextItem":{"title":"LightSwitch 2011","permalink":"/blog/2011/07/27/lightswitch-2011"}},"content":"To Auto format XAML code in a readable and organized way\\n\\n1. Open Visual Studio 2010\\n2. Go to Menu: Tools->Options\\n3. Select Text Editor |->XAML |->Formatting |->Spacing\\n4. Set the options 1 & 2 as shown in the below image\\n\\n\\n**Sample Code:**\\n\\n```xml \\n<Window x:Class=\\"WpfApplication1.MainWindow\\" xmlns=\\"[http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"](http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot); xmlns:x=\\"[http://schemas.microsoft.com/winfx/2006/xaml\\"](http://schemas.microsoft.com/winfx/2006/xaml&quot); Title=\\"MainWindow\\" Height=\\"350\\" Width=\\"525\\"> \\n<Grid> \x3c!--Before Auto formatting --\x3e \\n<Button Content=\\"Button\\" Height=\\"23\\" HorizontalAlignment=\\"Left\\" Margin=\\"66,52,0,0\\" Name=\\"button1\\" VerticalAlignment=\\"Top\\" Width=\\"75\\" /> \x3c!--After Auto formatting --\x3e \\n<Button Content=\\"Button\\" Height=\\"23\\" HorizontalAlignment=\\"Left\\" Margin=\\"248,68,0,0\\" Name=\\"button2\\" VerticalAlignment=\\"Top\\" Width=\\"75\\" /> </Grid> \\n</Window> \\n```"},{"id":"/2011/07/27/lightswitch-2011","metadata":{"permalink":"/blog/2011/07/27/lightswitch-2011","source":"@site/blog/2011-07-27-lightswitch-2011.md","title":"LightSwitch 2011","description":"Microsoft\xae Visual Studio\xae LightSwitch\u2122 is used to build business applications for the desktop and cloud and focused on making it easy to develop line of business applications. It is based on data + screens which is common for LOB Applications.","date":"2011-07-27T00:00:00.000Z","formattedDate":"July 27, 2011","tags":[{"label":"Tools","permalink":"/blog/tags/tools"}],"readingTime":0.32,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Tools"]},"prevItem":{"title":"XAML Auto formatting in Visual Studio 2010","permalink":"/blog/2011/08/24/xaml-auto-formatting-in-visual-studio-2010"},"nextItem":{"title":"Installing MS SQL Server 2008 in Windows 7 O.S","permalink":"/blog/2011/05/31/mssql"}},"content":"Microsoft\xae Visual Studio\xae LightSwitch\u2122 is used to build business applications for the desktop and cloud and focused on making it easy to develop line of business applications. It is based on data + screens which is common for LOB Applications.\\n\\n**Here are important links:** Download a trial of LightSwitch 2011 for 90 days :\\n\\n[](http://www.microsoft.com/download/en/confirmation.aspx?id=26830)[http://www.microsoft.com/download/en/confirmation.aspx?id=26830](http://www.microsoft.com/download/en/confirmation.aspx?id=26830)\\n\\nIS0 format: [](http://go.microsoft.com/fwlink/?LinkId=216813)[http://go.microsoft.com/fwlink/?LinkId=216813](http://go.microsoft.com/fwlink/?LinkId=216813) LightSwitch Developer Center: [](http://msdn.microsoft.com/en-US/lightswitch/ff938857)[http://msdn.microsoft.com/en-US/lightswitch/ff938857](http://msdn.microsoft.com/en-US/lightswitch/ff938857)\\n\\nOverView: [](http://www.microsoft.com/visualstudio/en-us/lightswitch/overview)[http://www.microsoft.com/visualstudio/en-us/lightswitch/overview](http://www.microsoft.com/visualstudio/en-us/lightswitch/overview)"},{"id":"/2011/05/31/mssql","metadata":{"permalink":"/blog/2011/05/31/mssql","source":"@site/blog/2011-05-31-mssql.md","title":"Installing MS SQL Server 2008 in Windows 7 O.S","description":"INSTALL THE FOLLOWING IN ORDER for Windows 7 O.S","date":"2011-05-31T00:00:00.000Z","formattedDate":"May 31, 2011","tags":[{"label":"SQL Server","permalink":"/blog/tags/sql-server"}],"readingTime":0.285,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["SQL Server"]},"prevItem":{"title":"LightSwitch 2011","permalink":"/blog/2011/07/27/lightswitch-2011"},"nextItem":{"title":"Logging using Log4Net in ASP.Net","permalink":"/blog/2011/04/30/logging-using-log4net-in-asp-net"}},"content":"INSTALL THE FOLLOWING IN ORDER for Windows 7 O.S\\n\\n **1. Microsoft .NET Framework 4 (Standalone Installer) - dotNetFx40\\\\_Full\\\\_x86\\\\_x64.exe** [](http://www.microsoft.com/downloads/en/details.aspx?FamilyID=0a391abd-25c1-4fc0-919f-b21f31ab88b7&displaylang=en)[http://www.microsoft.com/downloads/en/details.aspx?FamilyID=0a391abd-25c1-4fc0-919f-b21f31ab88b7&displaylang=en](http://www.microsoft.com/downloads/en/details.aspx?FamilyID=0a391abd-25c1-4fc0-919f-b21f31ab88b7&amp;displaylang=en)\\n\\n**2. Install SQL Server 2008** a. Throws firewall warning - Ignore it and proceed b. Don\'t open the sql server management studio\\n\\n**3. Download and instal SQLServer2008SP1 -** **SQLServer2008SP1-KB968369-x64-ENU.exe** [](http://www.microsoft.com/downloads/en/details.aspx?FamilyID=66ab3dbb-bf3e-4f46-9559-ccc6a4f9dc19&displaylang=en)[http://www.microsoft.com/downloads/en/details.aspx?FamilyID=66ab3dbb-bf3e-4f46-9559-ccc6a4f9dc19&displaylang=en](http://www.microsoft.com/downloads/en/details.aspx?FamilyID=66ab3dbb-bf3e-4f46-9559-ccc6a4f9dc19&amp;displaylang=en)\\n\\n**4. Download and install SQLServer2008SP2 -** **SQLServer2008SP2-KB2285068-x64-ENU.exe** [](http://www.microsoft.com/downloads/en/details.aspx?FamilyID=8fbfc1de-d25e-4790-88b5-7dda1f1d4e17)[http://www.microsoft.com/downloads/en/details.aspx?FamilyID=8fbfc1de-d25e-4790-88b5-7dda1f1d4e17](http://www.microsoft.com/downloads/en/details.aspx?FamilyID=8fbfc1de-d25e-4790-88b5-7dda1f1d4e17)"},{"id":"/2011/04/30/logging-using-log4net-in-asp-net","metadata":{"permalink":"/blog/2011/04/30/logging-using-log4net-in-asp-net","source":"@site/blog/2011-04-30-logging-using-log4net-in-asp-net.md","title":"Logging using Log4Net in ASP.Net","description":"Log4net is an Open Source utility used for log/report statements to various kinds of output targets Namely.","date":"2011-04-30T00:00:00.000Z","formattedDate":"April 30, 2011","tags":[{"label":"ASP.Net","permalink":"/blog/tags/asp-net"}],"readingTime":0.14,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["ASP.Net"]},"prevItem":{"title":"Installing MS SQL Server 2008 in Windows 7 O.S","permalink":"/blog/2011/05/31/mssql"},"nextItem":{"title":"Code Snippets in VS2008 for C","permalink":"/blog/2011/04/29/snippets-in-vs2008"}},"content":"Log4net is an Open Source utility used for log/report statements to various kinds of output targets Namely.\\n\\n- TextFile\\n- EventViewer\\n- SQL Server\\n- Email\\n \\n [Read More](/docs/articles/CSharp/Log4netIntegration)"},{"id":"/2011/04/29/snippets-in-vs2008","metadata":{"permalink":"/blog/2011/04/29/snippets-in-vs2008","source":"@site/blog/2011-04-29-snippets-in-vs2008.md","title":"Code Snippets in VS2008 for C","description":"Usage:","date":"2011-04-29T00:00:00.000Z","formattedDate":"April 29, 2011","tags":[{"label":"Tools","permalink":"/blog/tags/tools"}],"readingTime":1.665,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Tools"]},"prevItem":{"title":"Logging using Log4Net in ASP.Net","permalink":"/blog/2011/04/30/logging-using-log4net-in-asp-net"},"nextItem":{"title":"WCF Step by Step Tutorial","permalink":"/blog/2011/04/28/wcf-step-by-step-tutorial"}},"content":"## Usage:\\n\\nEnter snippet Keyword shown below and press TAB-TAB to expand the snippet\\n\\n<table class=\\"ArticleTable\\"><tbody><tr><td valign=\\"top\\" width=\\"74\\"><strong>Snippet Keyword</strong></td><td valign=\\"top\\" width=\\"542\\"><strong>Expanded Snippet</strong></td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>#if</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>#if</code></td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>#region</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>#region</code></td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>attribute</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for attribute using recommended pattern</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>checked</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>checked</code> block</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>class</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>class</code></td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>ctor</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for constructor</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>~</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for destructor</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>cw</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>Console.WriteLine</code></td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>do</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>do\u2026while</code> loop</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>else</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>else</code> statement</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>enum</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>enum</code></td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>equals</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for implementing <code>Equals()</code> according to guidelines</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>exception</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for exception</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>for</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for \u2018<code>for</code>\u2019 loop</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>foreach</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>foreach</code> statement</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>forr</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for reverse \u2018<code>for</code>\u2019 loop</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>if</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>if</code> statement</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>indexer</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for indexer</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>interface</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for interface</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>invoke</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for safely invoking an event</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>iterator</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for a simple iterator</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>iterindex</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for \u2018named\u2019 iterator/indexer pair using a nested class</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>lock</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>lock</code> statement</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>mbox</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>MessageBox.Show</code></td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>namespace</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>namespace</code></td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>prop</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for an automatically implemented property</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>propg</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for an automatically implemented property with a \u2018<code>get</code>\u2019 access or/and a private \u2018<code>set</code>\u2019 accessor</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>sim</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for int Main()</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>struct</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>struct</code></td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>svm</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for \u2018<code>void Main</code>\u2019 method</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>switch</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>switch</code> statement</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>try</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>try catch</code></td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>tryf</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>try finally</code></td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>unchecked</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>unchecked</code> block</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>unsafe</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>unsafe</code> statement</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>using</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>using</code> statement</td></tr><tr><td valign=\\"top\\" width=\\"74\\"><code>while</code></td><td valign=\\"top\\" width=\\"542\\">Code snippet for <code>while</code> loop</td></tr></tbody></table>"},{"id":"/2011/04/28/wcf-step-by-step-tutorial","metadata":{"permalink":"/blog/2011/04/28/wcf-step-by-step-tutorial","source":"@site/blog/2011-04-28-wcf-step-by-step-tutorial.md","title":"WCF Step by Step Tutorial","description":"Windows Communication Foundation (WCF) is a framework for building service-oriented applications. Using WCF we can build secure, reliable, transacted solutions that integrate across platforms.","date":"2011-04-28T00:00:00.000Z","formattedDate":"April 28, 2011","tags":[{"label":"WCF","permalink":"/blog/tags/wcf"}],"readingTime":0.275,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["WCF"]},"prevItem":{"title":"Code Snippets in VS2008 for C","permalink":"/blog/2011/04/29/snippets-in-vs2008"},"nextItem":{"title":"WPF SnippetManager","permalink":"/blog/2010/10/21/wpf-snippetmanager"}},"content":"Windows Communication Foundation (WCF) is a framework for building service-oriented applications. Using WCF we can build secure, reliable, transacted solutions that integrate across platforms.\\n\\nWCF is a unified framework which provides :\\n\\n1. NET Remoting \\n2. Distributed Transactions \\n3. Message Queues and \\n4. Web Services\xa0into a single service-oriented programming model for distributed computing.\\n\\n[Read more](/docs/articles/WCF/Tutorial)"},{"id":"/2010/10/21/wpf-snippetmanager","metadata":{"permalink":"/blog/2010/10/21/wpf-snippetmanager","source":"@site/blog/2010-10-21-wpf-snippetmanager.md","title":"WPF SnippetManager","description":"FEATURES","date":"2010-10-21T00:00:00.000Z","formattedDate":"October 21, 2010","tags":[{"label":"Tools","permalink":"/blog/tags/tools"}],"readingTime":0.24,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Tools"]},"prevItem":{"title":"WCF Step by Step Tutorial","permalink":"/blog/2011/04/28/wcf-step-by-step-tutorial"},"nextItem":{"title":"C FAQ","permalink":"/blog/2010/10/03/c-faq"}},"content":"***FEATURES***\\n\\n- To use a snippet:\xa0 Drag the title of the snippet to the desired target app.\\n\\n- In order to move the app around: Drag the black bottom portion of the window.\\n\\n- The topmost checkbox and load/close buttons will work as expected.\\n\\n\\nLink\xa0to complete article [](http://scorbs.com/2008/03/18/snippetmanager/comment-page-1/#comment-3479)[http://scorbs.com/2008/03/18/snippetmanager/comment-page-1/#comment-3479](http://scorbs.com/2008/03/18/snippetmanager/comment-page-1/#comment-3479)"},{"id":"/2010/10/03/c-faq","metadata":{"permalink":"/blog/2010/10/03/c-faq","source":"@site/blog/2010-10-03-c-faq.md","title":"C FAQ","description":"1. How to write a code to count number of characters/Spaces/numbers/special characters present in a sentence.\xa0 sentence =\\"1. GOD IS GREAT !!!\\"\xa0Click me for Answer","date":"2010-10-03T00:00:00.000Z","formattedDate":"October 3, 2010","tags":[{"label":"C","permalink":"/blog/tags/c"}],"readingTime":0.295,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C"]},"prevItem":{"title":"WPF SnippetManager","permalink":"/blog/2010/10/21/wpf-snippetmanager"},"nextItem":{"title":"MFC: Fill the Client area with a\xa0bitmap","permalink":"/blog/2010/10/03/fill-the-client-area-bitmap"}},"content":"1. How to write a code to count number of characters/Spaces/numbers/special characters present in a sentence.\xa0 sentence =\\"1. GOD IS GREAT !!!\\"\xa0[Click me for Answer](http://nagvbt.wordpress.com/c-faq/ascii-count/)\\n\\n2.\xa0How to insert space between each character in a sentence.\xa0sentence =\\"GOOD MORNING\\" newsentence = \\"G O O D\xa0 M O R N I N G\\"\xa0[Click me for Answer](http://nagvbt.wordpress.com/c-faq/insertspace/)\\n\\n[Click here to read complete Article](/docs/articles/C/CFaq)"},{"id":"/2010/10/03/fill-the-client-area-bitmap","metadata":{"permalink":"/blog/2010/10/03/fill-the-client-area-bitmap","source":"@site/blog/2010-10-03-fill-the-client-area-bitmap.md","title":"MFC: Fill the Client area with a\xa0bitmap","description":"In MFC to fill the client area with a bitmap use the following code.","date":"2010-10-03T00:00:00.000Z","formattedDate":"October 3, 2010","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.26,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"C FAQ","permalink":"/blog/2010/10/03/c-faq"},"nextItem":{"title":"MFC: Fill Client area with a desired color","permalink":"/blog/2010/10/03/mfc-fill-coloe-in-the-client-area"}},"content":"In MFC to fill the client area with a bitmap use the following code.\\n\\n```cpp\\nBOOL CMySDIView::OnEraseBkgnd(CDC\\\\* pDC)\\n{\\n    CDC mymem;\\n    //Create a dc to represent display surface\\n    mymem.CreateCompatibleDC(pDC);\\n\\n    CBitmap bmp;\\n    bmp.LoadBitmap(IDB\\\\_MYBITMAP);\\n    mymem.SelectObject(&amp;bmp);\\n\\n    //BitBlt Copyes bitbamp from source (mymem) to destination (pDC)\\n    pDC-&gt;BitBlt(0,0,740, 520, &amp;mymem,0,0, SRCCOPY);\\n\\n    return TRUE; // CView::OnEraseBkgnd(pDC);\\n}\\n```"},{"id":"/2010/10/03/mfc-fill-coloe-in-the-client-area","metadata":{"permalink":"/blog/2010/10/03/mfc-fill-coloe-in-the-client-area","source":"@site/blog/2010-10-03-mfc-fill-coloe-in-the-client-area.md","title":"MFC: Fill Client area with a desired color","description":"MFC Tip: To fill the Background of the client area with a desired color keeping the text in the client area unchanged","date":"2010-10-03T00:00:00.000Z","formattedDate":"October 3, 2010","tags":[{"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.255,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"prevItem":{"title":"MFC: Fill the Client area with a\xa0bitmap","permalink":"/blog/2010/10/03/fill-the-client-area-bitmap"},"nextItem":{"title":"Developer to Architect","permalink":"/blog/2010/09/29/software-architect"}},"content":"MFC Tip: To fill the Background of the client area with a desired color keeping the text in the client area unchanged\\n\\n```c\\nBOOL CMySDIView::OnEraseBkgnd(CDC\\\\* pDC)\\n{\\n    CRect r;\\n    //GetClientRect gets the width &amp; height of the client area of\\n    //the window\\n    GetClientRect(&amp;r);\\n    CBrush br(RGB(255,250,100));\\n    pDC-&gt;SelectObject(br);\\n    pDC-&gt;FillRect(r,&amp;br);\\n\\n    return TRUE;\\n}\\n```"},{"id":"/2010/09/29/software-architect","metadata":{"permalink":"/blog/2010/09/29/software-architect","source":"@site/blog/2010-09-29-software-architect.md","title":"Developer to Architect","description":"To become an Software Architect you can use following resources.","date":"2010-09-29T00:00:00.000Z","formattedDate":"September 29, 2010","tags":[{"label":"Design Patterns","permalink":"/blog/tags/design-patterns"}],"readingTime":0.245,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["Design Patterns"]},"prevItem":{"title":"MFC: Fill Client area with a desired color","permalink":"/blog/2010/10/03/mfc-fill-coloe-in-the-client-area"},"nextItem":{"title":"WPF View\xa0Switcher","permalink":"/blog/2010/09/29/wpf-view-switcher"}},"content":"To become an Software Architect you can use following resources.\\n\\n1. www.architecturejournal.net\\n    \\n2. [http://en.wikipedia.org/wiki/Software\\\\_architect](http://en.wikipedia.org/wiki/Software_architect)\\n    \\n3. [http://www.ibm.com/developerworks/library/ws-soa-proarch1.html](http://www.ibm.com/developerworks/library/ws-soa-proarch1.html)\\n    \\n4. Book Search Google Books Search: [http://www.google.co.in/search?hl=en&tbs=bks:1&&sa=X&ei=s7M6TOHwO8L58Aa1p4imBg&ved=0CDUQBSgA&q=how+to+become+software+architect&spell=1](http://www.google.co.in/search?hl=en&amp;tbs=bks:1&amp;&amp;sa=X&amp;ei=s7M6TOHwO8L58Aa1p4imBg&amp;ved=0CDUQBSgA&amp;q=how+to+become+software+architect&amp;spell=1)\\n    \\n5. Register for Microsoft monthly journals:[http://msdn.microsoft.com/en-us/architecture/aa699369.aspx#Subscribe](http://msdn.microsoft.com/en-us/architecture/aa699369.aspx#Subscribe)\\n    \\n6. An A-Z Guide to Being an Architect: [http://msdn.microsoft.com/en-us/architecture/cc505969.aspx](http://msdn.microsoft.com/en-us/architecture/cc505969.aspx)\\n    \\n7. Follow or learn from MSDN FORUMS : [http://social.msdn.microsoft.com/Forums/en-US/category/architecture](http://social.msdn.microsoft.com/Forums/en-US/category/architecture)\\n    \\n8. [http://www.kanneganti.com/technical/architect](http://www.kanneganti.com/technical/architect)"},{"id":"/2010/09/29/wpf-view-switcher","metadata":{"permalink":"/blog/2010/09/29/wpf-view-switcher","source":"@site/blog/2010-09-29-wpf-view-switcher.md","title":"WPF View\xa0Switcher","description":"A Step by Step Tutorial","date":"2010-09-29T00:00:00.000Z","formattedDate":"September 29, 2010","tags":[{"label":"WPF","permalink":"/blog/tags/wpf"}],"readingTime":0.085,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["WPF"]},"prevItem":{"title":"Developer to Architect","permalink":"/blog/2010/09/29/software-architect"},"nextItem":{"title":"Introduction Post","permalink":"/blog/2006/08/26/welcome"}},"content":"**[A Step by Step Tutorial](/docs/articles/WPF/ViewSwitcherTutorial)**\\n\\nDynamic\xa0Switching of views in WPF using UserControl and Grid Layout.\\n\\n[Read More](/docs/articles/WPF/ViewSwitcherTutorial)"},{"id":"/2006/08/26/welcome","metadata":{"permalink":"/blog/2006/08/26/welcome","source":"@site/blog/2006-08-26-welcome/index.md","title":"Introduction Post","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2006-08-26T00:00:00.000Z","formattedDate":"August 26, 2006","tags":[],"readingTime":0.405,"hasTruncateMarker":false,"authors":[{"name":"Nag VBT","title":"Sr. Software Architect","url":"https://nagvbt.github.io/","imageURL":"/img/logo.png","key":"nagvbt"}],"frontMatter":{"authors":["nagvbt"]},"prevItem":{"title":"WPF View\xa0Switcher","permalink":"/blog/2010/09/29/wpf-view-switcher"},"nextItem":{"title":"Interactive MDX Post","permalink":"/blog/2006/08/01/Interactive-post-MDX"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\n\\nSimply add Markdown files (or folders) to the `blog` directory.\\n\\nRegular blog authors can be added to `authors.yml`.\\n\\nThe blog post date can be extracted from filenames, such as:\\n\\n- `2019-05-30-welcome.md`\\n- `2019-05-30-welcome/index.md`\\n\\nA blog post folder can be convenient to co-locate blog post images:\\n\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\n\\nThe blog supports tags as well!\\n\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"/2006/08/01/Interactive-post-MDX","metadata":{"permalink":"/blog/2006/08/01/Interactive-post-MDX","source":"@site/blog/2006-08-01-Interactive-post-MDX.mdx","title":"Interactive MDX Post","description":"Blog posts support Docusaurus Markdown features, such as MDX.","date":"2006-08-01T00:00:00.000Z","formattedDate":"August 1, 2006","tags":[],"readingTime":0.175,"hasTruncateMarker":false,"authors":[{"name":"Nag VBT","title":"Sr. Software Architect","url":"https://nagvbt.github.io/","imageURL":"/img/logo.png","key":"nagvbt"}],"frontMatter":{"authors":["nagvbt"]},"prevItem":{"title":"Introduction Post","permalink":"/blog/2006/08/26/welcome"}},"content":"Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\\n\\n:::tip\\n\\nUse the power of React to create interactive blog posts.\\n\\n```js\\n<button onClick={() => alert(\\"button clicked!\\")}>Click me!</button>\\n```\\n\\n<button onClick={() => alert(\\"button clicked!\\")}>Click me!</button>\\n\\n:::"}]}')}}]);