"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[1477],{10:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"/2022/06/08/rn-minimal-app","metadata":{"permalink":"/blog/2022/06/08/rn-minimal-app","source":"@site/blog/2022-06-08-rn-minimal-app.md","title":"React Native minimal app component","description":"Minimal code required to start a React-Native component is","date":"2022-06-08T00:00:00.000Z","formattedDate":"June 8, 2022","tags":[{"label":"React Native","permalink":"/blog/tags/react-native"}],"readingTime":0.355,"hasTruncateMarker":false,"authors":[{"name":"Nag VBT","title":"Sr. Software Architect","url":"https://nagvbt.github.io/","imageURL":"/img/logo.png","key":"nagvbt"}],"frontMatter":{"authors":"nagvbt","tags":["React Native"]},"nextItem":{"title":"Using Flow in React Native project","permalink":"/blog/2022/06/04/using-flow"}},"content":"Minimal code required to start a React-Native component is\\r\\n\\r\\na. An App Class which extends from React.Component\\r\\n\\r\\nb. styles that are created from `StyleSheet.Create({})`\\r\\n\\r\\n```jsx\\r\\nimport React from \\"react\\";\\r\\nimport { StyleSheet, Text, View } from \\"react-native\\";\\r\\n\\r\\nexport default class App extends React.Component {\\r\\n  render() {\\r\\n    return (\\r\\n      <View style={styles.container}>\\r\\n        <Text>Hello World</Text>\\r\\n      </View>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nconst styles = StyleSheet.create({\\r\\n  container: {\\r\\n    flex: 1,\\r\\n    alignItems: \'center\',\\r\\n    justifyContent: \'center\'\\r\\n  }\\r\\n\\r\\n});\\r\\n```"},{"id":"/2022/06/04/using-flow","metadata":{"permalink":"/blog/2022/06/04/using-flow","source":"@site/blog/2022-06-04-using-flow.md","title":"Using Flow in React Native project","description":"Flow is used for static type checking in javascript. Flow works best when installed per-project with explicit versioning rather than globally.","date":"2022-06-04T00:00:00.000Z","formattedDate":"June 4, 2022","tags":[{"label":"React","permalink":"/blog/tags/react"}],"readingTime":0.29,"hasTruncateMarker":false,"authors":[{"name":"Nag VBT","title":"Sr. Software Architect","url":"https://nagvbt.github.io/","imageURL":"/img/logo.png","key":"nagvbt"}],"frontMatter":{"authors":"nagvbt","tags":["React"]},"prevItem":{"title":"React Native minimal app component","permalink":"/blog/2022/06/08/rn-minimal-app"},"nextItem":{"title":"Component Library With Ionic+Angular","permalink":"/blog/2022/06/02/ionic-lib"}},"content":"Flow is used for static type checking in javascript. Flow works best when installed per-project with explicit versioning rather than globally.\\r\\n\\r\\n*   ***Add a `devDependency`\xa0on the\xa0`flow-bin`\xa0npm package:***\\r\\n\\r\\n`yarn add \u2013dev flow-bin`\\r\\n\\r\\n*   ***Run\xa0`yarn run flow init`\xa0before executing\xa0`yarn run flow`.***\\r\\n\\r\\n`yarn run flow init`\xa0\\r\\n\\r\\n*   ***To run Flow***\\r\\n\\r\\n`yarn run flow`\\r\\n\\r\\n*   Add \u2018.flowconfig\u2019 and add ./node\\\\_modules/.\\\\\\\\\\\\* \xa0under \\\\[ignore\\\\]"},{"id":"/2022/06/02/ionic-lib","metadata":{"permalink":"/blog/2022/06/02/ionic-lib","source":"@site/blog/2022-06-02-ionic-lib.md","title":"Component Library With Ionic+Angular","description":"1\\\\. Summary","date":"2022-06-02T00:00:00.000Z","formattedDate":"June 2, 2022","tags":[{"label":"Ionic","permalink":"/blog/tags/ionic"},{"label":"Angular","permalink":"/blog/tags/angular"}],"readingTime":1.96,"hasTruncateMarker":false,"authors":[{"name":"Nag VBT","title":"Sr. Software Architect","url":"https://nagvbt.github.io/","imageURL":"/img/logo.png","key":"nagvbt"}],"frontMatter":{"authors":"nagvbt","tags":["Ionic","Angular"]},"prevItem":{"title":"Using Flow in React Native project","permalink":"/blog/2022/06/04/using-flow"},"nextItem":{"title":"Building A Component Library With React","permalink":"/blog/2021/05/30/building-a-component-library-with-react"}},"content":"1\\\\. Summary\\r\\n-----------\\r\\n\\r\\nA component library is a collection of logically group components so that one can explore, select components and helps in maintaining consistent design across projects. nag-ionic-lib built using following components.\\r\\n\\r\\n1.  Angular cli (ng generate library)\\r\\n2.  Ionic cli\\r\\n3.  Storybook\\r\\n\\r\\n2\\\\. How to Create a Ionic Library [Refer Code:](https://github.com/nagvbt/nag-ionic-lib/commit/773b8a681b655a705648fe43d4a887f6143cbf19)\\r\\n----------------------------------------------------------------------------------------------------------------------------------------\\r\\n\\r\\n1.  Generate library skeleton in a new workspace with the following commands.\\r\\n```\\r\\n    ng new nag-workspace --create-application=false\\r\\n    cd nag-workspace\\r\\n    ng generate library nag-ionic-lib\\r\\n````\\r\\n    \\r\\n\\r\\n1.  Add a custom component\\r\\n\\r\\n    `ng g component customCard`\\r\\n    \\r\\n\\r\\n2.  Add symlink between your local node modules folder and this dist folder [Refer Code:](https://github.com/nagvbt/nag-ionic-lib/commit/4e2430e9812dd8e45d252e68ed294ed69524de51)\\r\\n\\r\\nYou can now run `yarn link \\"nag-ionic-lib\\"` in the projects where you want to use this package and it will be used instead.\\r\\n```js\\r\\n    ng build\\r\\n    cd dist/nag-ionic-lib\\r\\n    yarn link\\r\\n    \\r\\n    ****** Command output ******\\r\\n    yarn link\\r\\n    yarn link v1.22.4\\r\\n    warning package.json: No license field\\r\\n    warning package.json: No license field\\r\\n    success Registered \\"nag-ionic-lib\\".\\r\\n    info You can now run yarn link <span class=\\"hljs-string\\">\\"nag-ionic-lib\\"</span> in the projects where you want to use this package and it will be used instead. Done in 0.09s. \\r\\n````\\r\\n\\r\\n3.  Adding Ionic to your Library\\r\\n    ```\\r\\n        cd projects/nag-ionic-lib\\r\\n        yarn add --dev @ionic/angular\\r\\n    ```    \\r\\n    \\r\\n\\r\\n4. And Modify the \'nag-ionic-lib.module.ts\'\\r\\n```jsx\\r\\n    import { NgModule, ModuleWithProviders, InjectionToken } from \'@angular/core\';\\r\\n    import { NagIonicLibComponent } from \'./nag-ionic-lib.component\';\\r\\n    import { CustomCardComponent } from \'./custom-card/custom-card.component\';\\r\\n    \\r\\n    import { CommonModule } from \'@angular/common\';\\r\\n    import { IonicModule } from \'@ionic/angular\';\\r\\n    import { HttpClientModule } from \'@angular/common/http\';\\r\\n    import { NagIonicLibService } from \'nag-ionic-lib\';\\r\\n    \\r\\n    export interface LibConfig {\\r\\n      apiUrl: string;\\r\\n    }\\r\\n    \\r\\n    export const LibConfigService = new InjectionToken<LibConfig>(\'LibConfig\');\\r\\n    \\r\\n    @NgModule({\\r\\n      declarations: [\\r\\n        NagIonicLibComponent,\\r\\n        CustomCardComponent\\r\\n      ],\\r\\n      imports: [\\r\\n        CommonModule,\\r\\n        HttpClientModule,\\r\\n        IonicModule\\r\\n      ],\\r\\n      exports: [\\r\\n        NagIonicLibComponent, CustomCardComponent\\r\\n      ]\\r\\n    })\\r\\n    export class NagIonicLibModule {\\r\\n    static forRoot(config: LibConfig): ModuleWithProviders<NagIonicLibModule> {\\r\\n        return {\\r\\n          ngModule: NagIonicLibModule,\\r\\n          providers: [\\r\\n            NagIonicLibService,\\r\\n            {\\r\\n              provide: LibConfigService,\\r\\n              useValue: config\\r\\n            }\\r\\n          ]\\r\\n        };\\r\\n      }\\r\\n     }\\r\\n```    \\r\\n\\r\\n[Refer Code](https://github.com/nagvbt/nag-ionic-lib/commit/5afea14b8bfd457cf7396a56d96fb361ee4f7850)\\r\\n\\r\\n#### Modify the Custom-Card [Refer Code](https://github.com/nagvbt/nag-ionic-lib/commit/ca6bdf5d2f1f6b4555095fa7e6d72a17de4167bc)\\r\\n```jsx\\r\\n    // custom-card.component.ts\\r\\n    import { Component, OnInit, Input } from \'@angular/core\';\\r\\n    \\r\\n    @Component({\\r\\n      selector: \'custom-card\',\\r\\n      templateUrl: \'./custom-card.component.html\',\\r\\n      styleUrls: [\'./custom-card.component.css\']\\r\\n    })\\r\\n    export class CustomCardComponent implements OnInit {\\r\\n      @Input() title: string = \\"\\";\\r\\n      @Input() content: string = \\"\\";\\r\\n    \\r\\n      constructor() { }\\r\\n    \\r\\n      ngOnInit(): void {\\r\\n      }\\r\\n    \\r\\n    }\\r\\n    \\r\\n    \x3c!-- custom-card.component.html --\x3e\\r\\n    <ion-card>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>{{ title }}</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        {{ content }}\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n  ```  \\r\\n\\r\\n3\\\\. Publish the Lib to npm\\r\\n--------------------------\\r\\n\\r\\nUse the below commands\\r\\n```\\r\\n    ng build --prod\\r\\n    cd dist/nag-ionic-lib\\r\\n    npm publish\\r\\n```"},{"id":"/2021/05/30/building-a-component-library-with-react","metadata":{"permalink":"/blog/2021/05/30/building-a-component-library-with-react","source":"@site/blog/2021-05-30-building-a-component-library-with-react.md","title":"Building A Component Library With React","description":"Docusaurus Plushie","date":"2021-05-30T00:00:00.000Z","formattedDate":"May 30, 2021","tags":[{"label":"React","permalink":"/blog/tags/react"}],"readingTime":5.99,"hasTruncateMarker":true,"authors":[{"name":"Nag VBT","title":"Sr. Software Architect","url":"https://nagvbt.github.io/","imageURL":"/img/logo.png","key":"nagvbt"}],"frontMatter":{"authors":"nagvbt","tags":["React"]},"prevItem":{"title":"Component Library With Ionic+Angular","permalink":"/blog/2022/06/02/ionic-lib"},"nextItem":{"title":"When Breath Becomes Air","permalink":"/blog/2018/12/06/when-breath-becomes-air"}},"content":"![Docusaurus Plushie](./img/nag-rlib.png)\\r\\n\\r\\n\\r\\n1\\\\. Summary\\r\\n-----------\\r\\n\\r\\nA component library is a collection of logically group components so that one can explore, select components and helps in maintaining consistent design across projects. nag-rlib built usng following components.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n1.  create-react-library\\r\\n2.  Storybook\\r\\n3.  react-testing-library\\r\\n\\r\\n2\\\\. How to Create a React Library\\r\\n---------------------------------\\r\\n\\r\\nYou can create a React Library using the create-react-library ([](https://github.com/transitive-bullshit/create-react-library)[https://github.com/transitive-bullshit/create-react-library](https://github.com/transitive-bullshit/create-react-library)) CLI which uses Rollup.js and create-react-app.\\r\\n\\r\\n[Rollup.js](https://rollupjs.org/guide/en/#overview) is a module bundler for JavaScript which compiles small pieces of code into something larger and more complex, such as a library.\\r\\n\\r\\n**_Steps:_**\\r\\n\\r\\n**1.Install create-react-library globally** \\r\\n\\r\\nThis package requires node >= 10.\\r\\n\\r\\n`npm install -g create-react-library`\\r\\n\\r\\n**2.Create Library**\\r\\n\\r\\nFire up the command prompt and use the below commandcd\\r\\n\\r\\n`npx create-react-library`\\r\\n\\r\\n    Microsoft Windows [Version 10.0.19042.985]\\r\\n    \\r\\n    (c) Microsoft Corporation. All rights reserved.\\r\\n    \\r\\n    C:\\\\Nag\\\\myDrive\\\\blog\\\\React\\\\NagLib>npx create-react-library\\r\\n    npx: installed 150 in 21.621s\\r\\n    ? Package Name nag-rlib\\r\\n    ? Package Description Nag React Library\\r\\n    ? Author\'s GitHub Handle nagvbt\\r\\n    ? GitHub Repo Path nagvbt/nag-rlib\\r\\n    ? License NAG VBT\\r\\n    ? Package Manager yarn\\r\\n    ? Template default\\r\\n    \\r\\n\\r\\n**3\\\\. Install RollupJs and configure**\\r\\n\\r\\n**a. Install Babel Preset**\\r\\n\\r\\n`yarn add --dev @babel/preset-react`\\r\\n\\r\\n`yarn add --dev @babel/preset-env`\\r\\n\\r\\nadd `.babelrc` file with below contents\\r\\n\\r\\n    {\\r\\n      \\"presets\\": [\\"@babel/env\\", \\"@babel/preset-react\\"]\\r\\n    }\\r\\n    \\r\\n\\r\\n**b. Install Rollupjs**\\r\\n\\r\\n`yarn add --dev rollup`\\r\\n\\r\\n`yarn add --dev rollup-plugin-delete`\\r\\n\\r\\n`yarn add --dev rollup-plugin-peer-deps-external`\\r\\n\\r\\n**c. Install Rollupjs Plugins**\\r\\n\\r\\n`yarn add rollup-plugin-commonjs`\\r\\n\\r\\n`yarn add rollup-plugin-node-resolve`\\r\\n\\r\\n`yarn add @rollup/plugin-json`\\r\\n\\r\\n`yarn add --dev @rollup/plugin-babel`\\r\\n\\r\\n`yarn add --dev rollup-plugin-scss`\\r\\n\\r\\n**c. Add rollup.config.js**\\r\\n\\r\\n    import babel from \'@rollup/plugin-babel\';\\r\\n    import external from \'rollup-plugin-peer-deps-external\';\\r\\n    import del from \'rollup-plugin-delete\';\\r\\n    import resolve from \'rollup-plugin-node-resolve\';\\r\\n    import commonjs from \'rollup-plugin-commonjs\';\\r\\n    import json from \'@rollup/plugin-json\';\\r\\n    import pkg from \'./package.json\';\\r\\n    \\r\\n    const extensions = [\'.js\', \'.jsx\'];\\r\\n    \\r\\n    export default {\\r\\n      input: pkg.source,\\r\\n      output: [\\r\\n        { file: pkg.main, format: \'cjs\' },\\r\\n        { file: pkg.module, format: \'esm\' }\\r\\n      ],\\r\\n      plugins: [\\r\\n        resolve({\\r\\n          extensions,\\r\\n          modulesOnly: true\\r\\n        }),\\r\\n        json({\\r\\n          compact: true\\r\\n        }),\\r\\n        commonjs(),\\r\\n        external(),\\r\\n        babel({\\r\\n          exclude: \'node_modules/**\'\\r\\n        }),\\r\\n        del({ targets: [\'dist/*\'] })\\r\\n      ],\\r\\n      external: Object.keys(pkg.peerDependencies || {})\\r\\n    };\\r\\n    \\r\\n\\r\\n**d. Update the commands**\\r\\n\\r\\nAdd below commands in scripts section of package.json\\r\\n\\r\\n    \\"build\\": \\"rollup -c\\",\\r\\n    \\"build:dev\\": \\"rollup -c -w\\",\\r\\n    \\r\\n\\r\\n3\\\\. Build and Launch the example site\\r\\n-------------------------------------\\r\\n\\r\\nTo get started, in one tab, run:\\r\\n\\r\\n`$ cd nag-rlib && yarn build`\\r\\n\\r\\nAnd in another command window, run the create-react-app dev server:\\r\\n\\r\\n`$ cd nag-rlib\\\\example && yarn start`\\r\\n\\r\\n\\r\\n4\\\\. Create Github Repo and push the code\\r\\n----------------------------------------\\r\\n\\r\\nSteps: Refer Code changes [here](https://github.com/nagvbt/nag-rlib/commit/03e8a144f5afa4edf43b8e47f3dd1facf8d63a6b)\\r\\n\\r\\na. Open command prompt and Fire up the command\\r\\n\\r\\n`cd nag-rlib`\\r\\n\\r\\nUse the below Git Commands to set the email and user name of the github\\r\\n\\r\\n1.Update email and username using:\\r\\n\\r\\n        a.git config user.email \\"[email\xa0protected]\\"\\r\\n        b.git config user.name \\"nagvbt\\"\\r\\n    \\r\\n\\r\\n2.Check if they are updated correctly:\\r\\n\\r\\n        a.git config user.email\\r\\n        b.git config user.name\\r\\n    \\r\\n\\r\\nb. Create a new repository in Github with the same project name say nag-rlib\\r\\n\\r\\nCreate a new repository  \\r\\n\u2026or push an existing repository from the command line\\r\\n\\r\\n    git remote add origin https://github.com/nagvbt/nag-rlib.git\\r\\n    git branch -M main\\r\\n    git push -u origin main\\r\\n    \\r\\n\\r\\n5\\\\. Upgrade Packages\\r\\n--------------------\\r\\n\\r\\nTo upgrade the Packages to latest by using the command `yarn upgrade --latest`\\r\\n\\r\\nSteps: Refer Code changes [here](https://github.com/nagvbt/nag-rlib/commit/0243b0a59267e9798502abf72705f6d1b02f7768)\\r\\n\\r\\n6\\\\. Export Multiple Components\\r\\n------------------------------\\r\\n\\r\\nSteps: Refer Code changes [here](https://github.com/nagvbt/nag-rlib/commit/021a6cefe46e436333b0d7fdadb9b30573addf95)\\r\\n\\r\\n1.  Create Two componentsa. src\\\\\\\\ExampleComponent1\\\\\\\\ExampleComponent1.jsx\\r\\n    \\r\\n        import React from \'react\';\\r\\n        import styles from \'../../styles.module.css\';\\r\\n        \\r\\n        function ExampleComponent1({ text }) {\\r\\n          return <div className={styles.test}>Example Component 1: {text}</div>;\\r\\n        }\\r\\n        \\r\\n        export default ExampleComponent1;\\r\\n        \\r\\n    \\r\\n    b. src\\\\\\\\ExampleComponent2\\\\\\\\ExampleComponent2.jsx\\r\\n    \\r\\n        import React from \'react\';\\r\\n        import styles from \'../../styles.module.css\';\\r\\n        \\r\\n        function ExampleComponent2({ text }) {\\r\\n          return <div className={styles.test}>Example Component 2: {text}</div>;\\r\\n        }\\r\\n        \\r\\n        export default ExampleComponent2;\\r\\n        \\r\\n    \\r\\n2.  Rename src\\\\\\\\index.js to src\\\\\\\\index.jsx\\r\\n3.  Change the extension of index.js to index.jsx in package.json`\\"source\\": \\"src/index.jsx\\",`\\r\\n4.  Import the ExampleComponent1 and ExampleComponent2 in index.jsx and export them so that the example component can consume the two components\\r\\n\\r\\n    import ExampleComponent1 from \'./components/ExampleComponent1/ExampleComponent1\';\\r\\n    import ExampleComponent2 from \'./components/ExampleComponent2/ExampleComponent2\';\\r\\n    \\r\\n    export { ExampleComponent1, ExampleComponent2 };\\r\\n    \\r\\n\\r\\n7\\\\. Install Storybook\\r\\n---------------------\\r\\n\\r\\nStorybook makes development faster and easier by isolating components with business logic. Install Storybook using below command.\\r\\n\\r\\n`npx sb init`\\r\\n\\r\\n**_Addons_**\\r\\n\\r\\nInstall Addons.\\r\\n\\r\\nBy Default you will get two Addons  \\r\\na. Essential addons [Refer](https://storybook.js.org/docs/react/essentials/introduction)  \\r\\nb. addon-links\\r\\n\\r\\n1.  Add Aditional addons [Refer Code](https://github.com/nagvbt/nag-rlib/commit/076bb5062ef90720cf6741b2a257ad244865b883)\\r\\n\\r\\n| S# | Addon | Command | Description |\\r\\n|----|------|--------|------|\\r\\n|1 | [a11y](https://github.com/storybookjs/storybook/tree/next/addons/a11y)| yarn add @storybook/addon-a11y \u2013dev | Test components for user accessibility in Storybook|\\r\\n| 2 | [storysource](https://github.com/storybookjs/storybook/tree/next/addons/storysource)| yarn add @storybook/addon-storysource \u2013dev | View the code of your stories within the Storybook UI |\\r\\n\\r\\n8\\\\. Unit Testing and Code Coverage\\r\\n----------------------------------\\r\\n\\r\\n[Refer Code](https://github.com/nagvbt/nag-rlib/commit/5e2778980b9da0a02e43b5e3b69e753f4d35e238)\\r\\n\\r\\n**a. Add React Testing Library** [Refer](https://github.com/testing-library/react-testing-library)\\r\\n\\r\\nIt is a very lightweight solution for testing React components. It provides light utility functions on top of react-dom and react-dom/test-utils, in a way that encourages better testing practices. To install react-testing-library use the below command.\\r\\n\\r\\n`yarn add --dev @testing-library/react`\\r\\n\\r\\n**b. Add DOM Testing Library** [Refer](https://github.com/testing-library/dom-testing-library#readme)\\r\\n\\r\\nThe DOM Testing Library is a very light-weight solution for testing DOM nodes. To install DOM Testing Library use the below command.\\r\\n\\r\\n`yarn add --dev @testing-library/dom`\\r\\n\\r\\n**c. Add Jest-Dom** [Refer](https://github.com/testing-library/jest-dom#readme)\\r\\n\\r\\nThe @testing-library/jest-dom library provides a set of custom jest matchers that you can use to extend jest. These will make your tests more declarative, clear to read and to maintain. To install Jest-Dom use the below command.\\r\\n\\r\\n`yarn add --dev @testing-library/jest-dom`\\r\\n\\r\\n**d. Add user-event** [Refer](https://github.com/testing-library/user-event)\\r\\n\\r\\nuser-event tries to simulate the real events that would happen in the browser as the user interacts with it. For example userEvent.click(checkbox) would change the state of the checkbox. To install user-event use the below command.\\r\\n\\r\\n`yarn add --dev @testing-library/user-event`\\r\\n\\r\\n**e. Add below code in package.json under scripts section to run the tests and generate the code coverage.**\\r\\n\\r\\n`\\"test:dev\\": \\"react-scripts test --coverage --coverageDirectory=\'coverage\' --env=jsdom --watchAll\\",`\\r\\n\\r\\n**f. Install jest-fail-on-console** [Refer](https://github.com/ricardo-ch/jest-fail-on-console)\\r\\n\\r\\nUtility to make jest tests fail when console.error() or console.warn() are used. To install user-event use the below command.\\r\\n\\r\\n`yarn add --dev jest-fail-on-console`\\r\\n\\r\\n9\\\\. Eslint\\r\\n----------\\r\\n\\r\\n[Refer Code](https://github.com/nagvbt/nag-rlib/commit/d3c74d49b9f346a6d15e7d5bfaf1379dee724959)\\r\\n\\r\\n**a. Install airbnb**  \\r\\nThis package provides Airbnb\u2019s .eslintrc as an extensible shared config. [Refer](https://github.com/airbnb/javascript)\\r\\n\\r\\n`npx install-peerdeps --dev eslint-config-airbnb`\\r\\n\\r\\n**b. Install prop-types**\\r\\n\\r\\nRuntime type checking for React props and similar objects. [Refer](https://github.com/facebook/prop-types)\\r\\n\\r\\n`yarn add prop-types`\\r\\n\\r\\n**c. Install eslint-plugin-react-hooks**  \\r\\nThis ESLint plugin enforces the [Rules](https://reactjs.org/docs/hooks-rules.html) of Hooks.\\r\\n\\r\\n`yarn add --dev eslint-plugin-react-hooks`\\r\\n\\r\\nThen extend the recommended eslint config:\\r\\n\\r\\n    {\\r\\n      \\"extends\\": [\\r\\n        // ...\\r\\n        \\"plugin:react-hooks/recommended\\"\\r\\n      ]\\r\\n    }\\r\\n    \\r\\n\\r\\n**d. Install eslint-plugin-testing-library**  \\r\\nESLint plugin to follow best practices and anticipate common mistakes when writing tests with Testing Library  \\r\\n[Refer](https://github.com/testing-library/eslint-plugin-testing-library)\\r\\n\\r\\n`yarn add --dev eslint-plugin-testing-library`\\r\\n\\r\\n**e. Install eslint-plugin-jest-dom**\\r\\n\\r\\nESLint plugin to follow best practices and anticipate common mistakes when writing tests with jest-dom.  \\r\\n[Refer](https://github.com/testing-library/eslint-plugin-jest-dom)\\r\\n\\r\\n`yarn add --dev eslint-plugin-jest-dom`\\r\\n\\r\\nThen extend the recommended eslint config:\\r\\n\\r\\n    {\\r\\n      \\"extends\\": [\\r\\n        // ...\\r\\n        \\"plugin:jest-dom/recommended\\"\\r\\n      ]\\r\\n    }\\r\\n    \\r\\n\\r\\n**f. Install eslint-config-react-app**  \\r\\nThis package includes the shareable ESLint configuration used by Create React App.\\r\\n\\r\\n`yarn add --dev eslint-config-react-app`\\r\\n\\r\\nThen extend the recommended eslint config:\\r\\n\\r\\n    {\\r\\n      \\"extends\\": [\\r\\n        // ...\\r\\n        \\"react-app\\"\\r\\n      ]\\r\\n    }\\r\\n    \\r\\n\\r\\n10\\\\. Publish the Library to npm\\r\\n-------------------------------\\r\\n\\r\\nThe command used to publish the lib as a public library you need to have a login in [](https://www.npmjs.com/)[https://www.npmjs.com/](https://www.npmjs.com/)\\r\\n\\r\\n`yarn publish --access=public`\\r\\n\\r\\nFollowing questions will be asked\\r\\n\\r\\n    yarn publish v1.22.4\\r\\n    [1/4] Bumping version...\\r\\n    info Current version: 1.0.0\\r\\n    question New version:\\r\\n    [2/4] Logging in...\\r\\n    info npm username: nagvbt\\r\\n    info npm email: [email\xa0protected]\\r\\n    question npm password:\\r\\n    success Logged in.\\r\\n    [3/4] Publishing...\\r\\n    $ run-s build\\r\\n    yarn run v1.22.4\\r\\n    $ microbundle-crl --no-compress --format modern,cjs\\r\\n    Build \\"nagRlib\\" to dist:\\r\\n            357 B: index.js.gz\\r\\n            297 B: index.js.br\\r\\n            286 B: index.modern.js.gz\\r\\n            234 B: index.modern.js.br\\r\\n    Done in 3.78s.\\r\\n    success Published.\\r\\n    [4/4] Revoking token...\\r\\n    success Revoked login token.\\r\\n    Done in 24.67s."},{"id":"/2018/12/06/when-breath-becomes-air","metadata":{"permalink":"/blog/2018/12/06/when-breath-becomes-air","source":"@site/blog/2018-12-06-when-breath-becomes-air.md","title":"When Breath Becomes Air","description":"Today I had completed a book When Breath Becomes Air by Paul Kalanithi a Neurosurgeon. Book covers What makes life worth living in the face of death? What do you do when life is catastrophically interrupted? What does it mean to have a child as your own life fades away?","date":"2018-12-06T00:00:00.000Z","formattedDate":"December 6, 2018","tags":[{"label":"Books","permalink":"/blog/tags/books"}],"readingTime":0.29,"hasTruncateMarker":false,"authors":[{"name":"Nag VBT","title":"Sr. Software Architect","url":"https://nagvbt.github.io/","imageURL":"/img/logo.png","key":"nagvbt"}],"frontMatter":{"authors":"nagvbt","tags":["Books"]},"prevItem":{"title":"Building A Component Library With React","permalink":"/blog/2021/05/30/building-a-component-library-with-react"},"nextItem":{"title":"The Biology of Belief","permalink":"/blog/2018/11/18/biology-of-belief"}},"content":"Today I had completed a book [When Breath Becomes Air](https://amzn.to/3yt4tjr) by Paul Kalanithi a Neurosurgeon. Book covers What makes life worth living in the face of death? What do you do when life is catastrophically interrupted? What does it mean to have a child as your own life fades away?\\r\\n\\r\\n![](./img/when-breath-becomes-air.JPG)\\r\\n\\r\\nTo Buy this book in Amazon: [https://amzn.to/3yxxt9R](https://amzn.to/3yxxt9R)"},{"id":"/2018/11/18/biology-of-belief","metadata":{"permalink":"/blog/2018/11/18/biology-of-belief","source":"@site/blog/2018-11-18-biology-of-belief.md","title":"The Biology of Belief","description":"Today completed reading. The Biology of Belief: Unleashing the Power of Consciousness, Matter and Miracles by Bruce Lipton.","date":"2018-11-18T00:00:00.000Z","formattedDate":"November 18, 2018","tags":[{"label":"Books","permalink":"/blog/tags/books"}],"readingTime":0.385,"hasTruncateMarker":false,"authors":[{"name":"Nag VBT","title":"Sr. Software Architect","url":"https://nagvbt.github.io/","imageURL":"/img/logo.png","key":"nagvbt"}],"frontMatter":{"tags":["Books"],"authors":"nagvbt"},"prevItem":{"title":"When Breath Becomes Air","permalink":"/blog/2018/12/06/when-breath-becomes-air"},"nextItem":{"title":"Reading Books","permalink":"/blog/2012/03/25/reading-books"}},"content":"Today completed reading. [The Biology of Belief: Unleashing the Power of Consciousness, Matter and Miracles by Bruce Lipton](https://amzn.to/2UoBvm0).\\r\\n\\r\\nThis book is a groundbreaking work in the field of new biology, and it will forever change how we think about thinking. It covers.  \\r\\n\\r\\na. Interaction between your mind and body and the processes by which cells receive information.  \\r\\n\\r\\nb. Genes and DNA do not control our biology  \\r\\n\\r\\nc. EPigenetics\\r\\n\\r\\n![Docusaurus Plushie](./img/biology-of-belief.jpg)\\r\\n\\r\\nTo buy this book on Amazon: [https://amzn.to/36nLuKV](https://amzn.to/36nLuKV)"},{"id":"/2012/03/25/reading-books","metadata":{"permalink":"/blog/2012/03/25/reading-books","source":"@site/blog/2012-03-25-reading-books.md","title":"Reading Books","description":"Every book we read makes us grow taller. Reading helps in expanding the thinking of the mind. Most successful people from history to the present are having the habit of reading books.","date":"2012-03-25T00:00:00.000Z","formattedDate":"March 25, 2012","tags":[{"label":"Books","permalink":"/blog/tags/books"}],"readingTime":0.555,"hasTruncateMarker":false,"authors":[{"name":"Nag VBT","title":"Sr. Software Architect","url":"https://nagvbt.github.io/","imageURL":"/img/logo.png","key":"nagvbt"}],"frontMatter":{"authors":"nagvbt","tags":["Books"]},"prevItem":{"title":"The Biology of Belief","permalink":"/blog/2018/11/18/biology-of-belief"},"nextItem":{"title":"Steve Jobs by Walter Isaacson","permalink":"/blog/2012/03/10/steve-jobs-walter"}},"content":"Every book we read makes us grow taller. Reading helps in expanding the thinking of the mind. Most successful people from history to the present are having the habit of reading books.\\r\\n\\r\\nThe best investment that we can make is buying one or two books and reading them in a month every rupee you spent is worth. Reading can be a relaxing hobby as well.\\r\\n\\r\\n## How to read:\\r\\nUse pencil or marker to highlight the important points\\r\\nUse Book Mark (Card with thread)\\r\\nTake notes on the margins best thing is use notebook to write points that you like most\\r\\nTo get started with what books to read are below."},{"id":"/2012/03/10/steve-jobs-walter","metadata":{"permalink":"/blog/2012/03/10/steve-jobs-walter","source":"@site/blog/2012-03-10-steve-jobs-walter.md","title":"Steve Jobs by Walter Isaacson","description":"Bought Steve Jobs by Walter Isaacson) Biography on Feburary 14, 2012 to present it to my self through flipkart.com.","date":"2012-03-10T00:00:00.000Z","formattedDate":"March 10, 2012","tags":[{"label":"Books","permalink":"/blog/tags/books"}],"readingTime":1.355,"hasTruncateMarker":false,"authors":[{"name":"Nag VBT","title":"Sr. Software Architect","url":"https://nagvbt.github.io/","imageURL":"/img/logo.png","key":"nagvbt"}],"frontMatter":{"authors":"nagvbt","tags":["Books"]},"prevItem":{"title":"Reading Books","permalink":"/blog/2012/03/25/reading-books"},"nextItem":{"title":"Introduction Post","permalink":"/blog/2006/08/26/welcome"}},"content":"Bought [Steve Jobs by Walter Isaacson](http://en.wikipedia.org/wiki/Steve_Jobs_(book)) Biography on Feburary 14, 2012 to present it to my self through flipkart.com.\\r\\n\\r\\nToday March 10, 2012 12.20 PM I had completed reading the book it contains 42 chapters spread over 571 pages\\r\\n\\r\\nReality Distortion Field: It can be done\\r\\n\\r\\n![Docusaurus Plushie](./img/steve-jobs-walter.jpg)\\r\\n\\r\\n## Books That Inspired Steve Jobs\\r\\n\\r\\n1. \'Autobiography of a Yogi\' by Paramahansa Yogananda\\r\\nJobs read and re-read many times during his life. Jobs had first read as a teenager,\\" Isaacson writes, \\"then re-read in India and had read once a year ever since.\\r\\n\\r\\n2. \'Be Here Now\' by Ram Dass\\r\\n\\r\\n3. Zen Mind, Beginner\'s Mind by Shunryu Suzuki\\r\\n\\r\\n4. \'The Innovator\'s Dilemma\' by Clayton Christensen\\r\\n\\r\\n5. \'The Whole Earth Catalog\' periodicals\\r\\n\\r\\n6. Herman Melville\'s Moby Dick\\r\\n\\r\\n7. Shakespeare\'s King Lear\\r\\n\\r\\n8. Poems of Dylan Thomas\\r\\n\\r\\n9. \'Diet For A Small Planet\' by Frances Lapp\\r\\n\\r\\n10. \'Mucusless Diet Healing System\' by Arnold Ehret\\r\\n\\r\\n11. Chogyam Trungpa\'s \\"Cutting Through Spiritual Materialism\\"\\r\\n\\r\\n## Articles\\r\\n1. \\"Secrets of the Little Blue Box,\\"\\r\\n\\r\\n## The Music That Inspired Steve Jobs\\r\\n1. Bob Dylan - bootlegs\\r\\n2. Beatles\\r\\n3. Stones\\r\\n4. Joan Baez - Love Is A Four Letter Word song\\r\\n5. Joni Mitchell - Both Sides Now song\\r\\n6. \\"Uncle John\'s Band\\" by the Grateful Dead\\r\\n7. Glenn Gould\\r\\n\\r\\n## Quotes From His Biography\\r\\n\\"If you don\'t cannibalize yourself, someone else will.\\"\\r\\n\\r\\n\\"People don\u2019t know what they want until you show it to them.\\"\\r\\n\\r\\n\\"I hate it when people call themselves \'entrepreneurs\' when what they\u2019re really trying to do is launch a startup and then sell or go public, so they can cash in and move on.\\""},{"id":"/2006/08/26/welcome","metadata":{"permalink":"/blog/2006/08/26/welcome","source":"@site/blog/2006-08-26-welcome/index.md","title":"Introduction Post","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2006-08-26T00:00:00.000Z","formattedDate":"August 26, 2006","tags":[],"readingTime":0.405,"hasTruncateMarker":false,"authors":[{"name":"Nag VBT","title":"Sr. Software Architect","url":"https://nagvbt.github.io/","imageURL":"/img/logo.png","key":"nagvbt"}],"frontMatter":{"authors":["nagvbt"]},"prevItem":{"title":"Steve Jobs by Walter Isaacson","permalink":"/blog/2012/03/10/steve-jobs-walter"},"nextItem":{"title":"Interactive MDX Post","permalink":"/blog/2006/08/01/Interactive-post-MDX"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\n\\nSimply add Markdown files (or folders) to the `blog` directory.\\n\\nRegular blog authors can be added to `authors.yml`.\\n\\nThe blog post date can be extracted from filenames, such as:\\n\\n- `2019-05-30-welcome.md`\\n- `2019-05-30-welcome/index.md`\\n\\nA blog post folder can be convenient to co-locate blog post images:\\n\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\n\\nThe blog supports tags as well!\\n\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"/2006/08/01/Interactive-post-MDX","metadata":{"permalink":"/blog/2006/08/01/Interactive-post-MDX","source":"@site/blog/2006-08-01-Interactive-post-MDX.mdx","title":"Interactive MDX Post","description":"Blog posts support Docusaurus Markdown features, such as MDX.","date":"2006-08-01T00:00:00.000Z","formattedDate":"August 1, 2006","tags":[],"readingTime":0.175,"hasTruncateMarker":false,"authors":[{"name":"Nag VBT","title":"Sr. Software Architect","url":"https://nagvbt.github.io/","imageURL":"/img/logo.png","key":"nagvbt"}],"frontMatter":{"authors":["nagvbt"]},"prevItem":{"title":"Introduction Post","permalink":"/blog/2006/08/26/welcome"}},"content":"Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\\n\\n:::tip\\n\\nUse the power of React to create interactive blog posts.\\n\\n```js\\n<button onClick={() => alert(\\"button clicked!\\")}>Click me!</button>\\n```\\n\\n<button onClick={() => alert(\\"button clicked!\\")}>Click me!</button>\\n\\n:::"}]}')}}]);