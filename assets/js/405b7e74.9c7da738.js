"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["10805"],{67194:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>d,default:()=>h,toc:()=>a,metadata:()=>s,assets:()=>c,contentTitle:()=>l});var s=JSON.parse('{"id":"Languages/MathAndStrings","title":"Math and Strings","description":"Table of Contents","source":"@site/docs/Languages/MathAndStrings.md","sourceDirName":"Languages","slug":"/Languages/MathAndStrings","permalink":"/docs/Languages/MathAndStrings","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"User Input","permalink":"/docs/Languages/UserInput"},"next":{"title":"Conditional Statements","permalink":"/docs/Languages/ConditionalStatements"}}'),i=r(85893),t=r(50065);let d={sidebar_position:6},l="Math and Strings",c={},a=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"<strong>Math</strong>",id:"math",level:2},{value:"Definition :",id:"definition-",level:3},{value:"<strong>C++</strong>",id:"c",level:2},{value:"Syntax:",id:"syntax",level:3},{value:"Example",id:"example",level:3},{value:"<strong>C#</strong>",id:"c-1",level:2},{value:"Syntax:",id:"syntax-1",level:3},{value:"Example",id:"example-1",level:3},{value:"<strong>Java</strong>",id:"java",level:2},{value:"Syntax:",id:"syntax-2",level:3},{value:"Example",id:"example-2",level:3},{value:"<strong>Python</strong>",id:"python",level:2},{value:"Syntax:",id:"syntax-3",level:3},{value:"Example",id:"example-3",level:3},{value:"<strong>JavaScript</strong>",id:"javascript",level:2},{value:"Syntax:",id:"syntax-4",level:3},{value:"Example",id:"example-4",level:3},{value:"<strong>TypeScript</strong>",id:"typescript",level:2},{value:"Syntax:",id:"syntax-5",level:3},{value:"Example",id:"example-5",level:3},{value:"Summary Table",id:"summary-table",level:3},{value:"<strong>Strings</strong>",id:"strings",level:2},{value:"Definition (in simple words):",id:"definition-in-simple-words",level:3},{value:"<strong>C++</strong>",id:"c-2",level:2},{value:"Syntax:",id:"syntax-6",level:3},{value:"Example",id:"example-6",level:3},{value:"<strong>C#</strong>",id:"c-3",level:2},{value:"Syntax:",id:"syntax-7",level:3},{value:"Example",id:"example-7",level:3},{value:"<strong>Java</strong>",id:"java-1",level:2},{value:"Syntax:",id:"syntax-8",level:3},{value:"Example",id:"example-8",level:3},{value:"<strong>Python</strong>",id:"python-1",level:2},{value:"Syntax:",id:"syntax-9",level:3},{value:"Example",id:"example-9",level:3},{value:"<strong>JavaScript</strong>",id:"javascript-1",level:2},{value:"Syntax:",id:"syntax-10",level:3},{value:"Example",id:"example-10",level:3},{value:"<strong>TypeScript</strong>",id:"typescript-1",level:2},{value:"Syntax:",id:"syntax-11",level:3},{value:"Example",id:"example-11",level:3},{value:"Common String Operations Across Languages",id:"common-string-operations-across-languages",level:3}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"math-and-strings",children:"Math and Strings"})}),"\n",(0,i.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"No."}),(0,i.jsx)(n.th,{children:"Topic"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#math",children:"Math"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#strings",children:"Strings"})})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"math",children:(0,i.jsx)(n.strong,{children:"Math"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"definition-",children:"Definition :"}),"\n",(0,i.jsxs)(n.p,{children:["In programming, ",(0,i.jsx)(n.strong,{children:"math"})," refers to performing mathematical operations like addition, subtraction,\r\nmultiplication, division, and using built-in functions to work with numbers (like finding square\r\nroots, powers, etc.). Each language provides a set of math functions to make calculations easier."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"c",children:(0,i.jsx)(n.strong,{children:"C++"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax",children:"Syntax:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Basic operators: ",(0,i.jsx)(n.code,{children:"+"}),", ",(0,i.jsx)(n.code,{children:"-"}),", ",(0,i.jsx)(n.code,{children:"*"}),", ",(0,i.jsx)(n.code,{children:"/"}),", ",(0,i.jsx)(n.code,{children:"%"})]}),"\n",(0,i.jsxs)(n.li,{children:["Advanced functions via the ",(0,i.jsx)(n.code,{children:"<cmath>"})," library:\r\n",(0,i.jsx)(n.code,{children:"sqrt()"}),", ",(0,i.jsx)(n.code,{children:"pow()"}),", ",(0,i.jsx)(n.code,{children:"abs()"}),", ",(0,i.jsx)(n.code,{children:"fmax()"}),", ",(0,i.jsx)(n.code,{children:"fmin()"})]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"}),": For ",(0,i.jsx)(n.code,{children:"abs()"}),", use ",(0,i.jsx)(n.code,{children:"<cstdlib>"})," for integers and ",(0,i.jsx)(n.code,{children:"<cmath>"})," for floating-point numbers."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\r\n#include <cmath>    // For sqrt, pow, fmax\r\n#include <cstdlib>  // For abs\r\n\r\nint main() {\r\n    int a = 10;\r\n    int b = 3;\r\n\r\n    // Basic operations\r\n    std::cout << "Addition: " << (a + b) << std::endl;\r\n    std::cout << "Division: " << (a / b) << std::endl;\r\n\r\n    // Math functions\r\n    std::cout << "Square Root of 25: " << sqrt(25) << std::endl;\r\n    std::cout << "2 to the power of 3: " << pow(2, 3) << std::endl;\r\n    std::cout << "Maximum of a and b: " << fmax(a, b) << std::endl;\r\n\r\n    return 0;\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"c-1",children:(0,i.jsx)(n.strong,{children:"C#"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-1",children:"Syntax:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Basic operators: ",(0,i.jsx)(n.code,{children:"+"}),", ",(0,i.jsx)(n.code,{children:"-"}),", ",(0,i.jsx)(n.code,{children:"*"}),", ",(0,i.jsx)(n.code,{children:"/"}),", ",(0,i.jsx)(n.code,{children:"%"})]}),"\n",(0,i.jsxs)(n.li,{children:["Advanced functions via ",(0,i.jsx)(n.code,{children:"Math"})," class:\r\n",(0,i.jsx)(n.code,{children:"Math.Sqrt()"}),", ",(0,i.jsx)(n.code,{children:"Math.Pow()"}),", ",(0,i.jsx)(n.code,{children:"Math.Abs()"}),", ",(0,i.jsx)(n.code,{children:"Math.Max()"}),", ",(0,i.jsx)(n.code,{children:"Math.Min()"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'using System;\r\n\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        int a = 10;\r\n        int b = 3;\r\n\r\n        // Basic operations\r\n        Console.WriteLine("Addition: " + (a + b));\r\n        Console.WriteLine("Division: " + (a / b));\r\n\r\n        // Math class functions\r\n        Console.WriteLine("Square Root of 25: " + Math.Sqrt(25));\r\n        Console.WriteLine("2 to the power of 3: " + Math.Pow(2, 3));\r\n        Console.WriteLine("Maximum of a and b: " + Math.Max(a, b));\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"java",children:(0,i.jsx)(n.strong,{children:"Java"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-2",children:"Syntax:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Basic operators: ",(0,i.jsx)(n.code,{children:"+"}),", ",(0,i.jsx)(n.code,{children:"-"}),", ",(0,i.jsx)(n.code,{children:"*"}),", ",(0,i.jsx)(n.code,{children:"/"}),", ",(0,i.jsx)(n.code,{children:"%"})]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"Math"})," class for advanced operations:\r\n",(0,i.jsx)(n.code,{children:"Math.sqrt()"}),", ",(0,i.jsx)(n.code,{children:"Math.pow()"}),", ",(0,i.jsx)(n.code,{children:"Math.abs()"}),", ",(0,i.jsx)(n.code,{children:"Math.max()"}),", ",(0,i.jsx)(n.code,{children:"Math.min()"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-2",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class Main {\r\n    public static void main(String[] args) {\r\n        int a = 10;\r\n        int b = 3;\r\n\r\n        // Basic operations\r\n        System.out.println("Addition: " + (a + b));\r\n        System.out.println("Division: " + (a / b));\r\n\r\n        // Math class functions\r\n        System.out.println("Square Root of 25: " + Math.sqrt(25));\r\n        System.out.println("2 to the power of 3: " + Math.pow(2, 3));\r\n        System.out.println("Maximum of a and b: " + Math.max(a, b));\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"python",children:(0,i.jsx)(n.strong,{children:"Python"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-3",children:"Syntax:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Basic operators: ",(0,i.jsx)(n.code,{children:"+"}),", ",(0,i.jsx)(n.code,{children:"-"}),", ",(0,i.jsx)(n.code,{children:"*"}),", ",(0,i.jsx)(n.code,{children:"/"}),", ",(0,i.jsx)(n.code,{children:"%"})]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"math"})," module for advanced operations:\r\n",(0,i.jsx)(n.code,{children:"math.sqrt()"}),", ",(0,i.jsx)(n.code,{children:"math.pow()"}),", ",(0,i.jsx)(n.code,{children:"math.fabs()"}),", ",(0,i.jsx)(n.code,{children:"max()"}),", ",(0,i.jsx)(n.code,{children:"min()"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-3",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import math  # Import math module for advanced functions\r\n\r\na = 10\r\nb = 3\r\n\r\n# Basic operations\r\nprint("Addition:", a + b)\r\nprint("Division:", a / b)\r\n\r\n# Math functions\r\nprint("Square Root of 25:", math.sqrt(25))\r\nprint("2 to the power of 3:", math.pow(2, 3))\r\nprint("Maximum of a and b:", max(a, b))\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"javascript",children:(0,i.jsx)(n.strong,{children:"JavaScript"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-4",children:"Syntax:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Basic operators: ",(0,i.jsx)(n.code,{children:"+"}),", ",(0,i.jsx)(n.code,{children:"-"}),", ",(0,i.jsx)(n.code,{children:"*"}),", ",(0,i.jsx)(n.code,{children:"/"}),", ",(0,i.jsx)(n.code,{children:"%"})]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"Math"})," object for advanced operations:\r\n",(0,i.jsx)(n.code,{children:"Math.sqrt()"}),", ",(0,i.jsx)(n.code,{children:"Math.pow()"}),", ",(0,i.jsx)(n.code,{children:"Math.abs()"}),", ",(0,i.jsx)(n.code,{children:"Math.max()"}),", ",(0,i.jsx)(n.code,{children:"Math.min()"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-4",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'let a = 10;\r\nlet b = 3;\r\n\r\n// Basic operations\r\nconsole.log("Addition:", a + b);\r\nconsole.log("Division:", a / b);\r\n\r\n// Math object functions\r\nconsole.log("Square Root of 25:", Math.sqrt(25));\r\nconsole.log("2 to the power of 3:", Math.pow(2, 3));\r\nconsole.log("Maximum of a and b:", Math.max(a, b));\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"typescript",children:(0,i.jsx)(n.strong,{children:"TypeScript"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-5",children:"Syntax:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Basic operators: ",(0,i.jsx)(n.code,{children:"+"}),", ",(0,i.jsx)(n.code,{children:"-"}),", ",(0,i.jsx)(n.code,{children:"*"}),", ",(0,i.jsx)(n.code,{children:"/"}),", ",(0,i.jsx)(n.code,{children:"%"})]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"Math"})," object for advanced operations:\r\n",(0,i.jsx)(n.code,{children:"Math.sqrt()"}),", ",(0,i.jsx)(n.code,{children:"Math.pow()"}),", ",(0,i.jsx)(n.code,{children:"Math.abs()"}),", ",(0,i.jsx)(n.code,{children:"Math.max()"}),", ",(0,i.jsx)(n.code,{children:"Math.min()"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-5",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'let a: number = 10;\r\nlet b: number = 3;\r\n\r\n// Basic operations\r\nconsole.log("Addition:", a + b);\r\nconsole.log("Division:", a / b);\r\n\r\n// Math functions\r\nconsole.log("Square Root of 25:", Math.sqrt(25));\r\nconsole.log("2 to the power of 3:", Math.pow(2, 3));\r\nconsole.log("Maximum of a and b:", Math.max(a, b));\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"summary-table",children:"Summary Table"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Language"}),(0,i.jsx)(n.th,{children:"Math Library/Feature"}),(0,i.jsx)(n.th,{children:"Square Root"}),(0,i.jsx)(n.th,{children:"Power"}),(0,i.jsx)(n.th,{children:"Max Value"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"C++"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<cmath>"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"sqrt(25)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"pow(2, 3)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"std::max(a, b)"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"C#"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math.Sqrt(25)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math.Pow(2, 3)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math.Max(a, b)"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Java"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math.sqrt(25)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math.pow(2, 3)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math.max(a, b)"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Python"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"math"})," module"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"math.sqrt(25)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"math.pow(2, 3)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"max(a, b)"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"JavaScript"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math.sqrt(25)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math.pow(2, 3)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math.max(a, b)"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"TypeScript"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math.sqrt(25)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math.pow(2, 3)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Math.max(a, b)"})})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"#table-of-contents",children:"Back to Top"})}),"\n",(0,i.jsx)(n.h2,{id:"strings",children:(0,i.jsx)(n.strong,{children:"Strings"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"definition-in-simple-words",children:"Definition (in simple words):"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.strong,{children:"string"})," is a sequence of characters enclosed in quotes. It is used to store and work with text\r\nlike names, sentences, or any kind of word-based data."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"c-2",children:(0,i.jsx)(n.strong,{children:"C++"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-6",children:"Syntax:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Declare using ",(0,i.jsx)(n.code,{children:"std::string"})," type (from the ",(0,i.jsx)(n.code,{children:"<string>"})," library)"]}),"\n",(0,i.jsxs)(n.li,{children:["Use double quotes ",(0,i.jsx)(n.code,{children:'"'})," to define a string"]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"}),": Always include the ",(0,i.jsx)(n.code,{children:"#include <string>"})," header when using ",(0,i.jsx)(n.code,{children:"std::string"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example-6",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\r\n#include <string>\r\n\r\nint main() {\r\n    // Declaring a string\r\n    std::string name = "Alice";\r\n\r\n    // String operations\r\n    std::cout << "Name: " << name << std::endl;                          // Concatenation\r\n    std::cout << "Length: " << name.length() << std::endl;              // Length of string\r\n    std::cout << "Uppercase: "; \r\n    for (char c : name) std::cout << (char)toupper(c);                  // Convert to uppercase\r\n    std::cout << std::endl;\r\n    std::cout << "First letter: " << name[0] << std::endl;              // Access character by index\r\n\r\n    return 0;\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"c-3",children:(0,i.jsx)(n.strong,{children:"C#"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-7",children:"Syntax:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Declare using ",(0,i.jsx)(n.code,{children:"string"})," type"]}),"\n",(0,i.jsxs)(n.li,{children:["Use double quotes ",(0,i.jsx)(n.code,{children:'"'})," to define a string"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-7",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'using System;\r\n\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        // Declaring a string\r\n        string name = "Alice";\r\n\r\n        // String operations\r\n        Console.WriteLine("Name: " + name);                      // Concatenation\r\n        Console.WriteLine("Length: " + name.Length);            // Length of string\r\n        Console.WriteLine("Uppercase: " + name.ToUpper());      // Convert to uppercase\r\n        Console.WriteLine("First letter: " + name[0]);          // Access character by index\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"java-1",children:(0,i.jsx)(n.strong,{children:"Java"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-8",children:"Syntax:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"String"})," class"]}),"\n",(0,i.jsxs)(n.li,{children:["Strings are enclosed in double quotes ",(0,i.jsx)(n.code,{children:'"..."'})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-8",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class Main {\r\n    public static void main(String[] args) {\r\n        // Declaring a string\r\n        String name = "Alice";\r\n\r\n        // String operations\r\n        System.out.println("Name: " + name);                       // Concatenation\r\n        System.out.println("Length: " + name.length());            // Length of string\r\n        System.out.println("Uppercase: " + name.toUpperCase());    // Convert to uppercase\r\n        System.out.println("First letter: " + name.charAt(0));     // Access character\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"python-1",children:(0,i.jsx)(n.strong,{children:"Python"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-9",children:"Syntax:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Strings are defined using either single ",(0,i.jsx)(n.code,{children:"' '"})," or double quotes ",(0,i.jsx)(n.code,{children:'" "'})]}),"\n",(0,i.jsx)(n.li,{children:"Strings are objects, so they have built-in methods"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-9",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'name = "Alice"  # Declaring a string\r\n\r\n# String operations\r\nprint("Name:", name)                    # Print the string\r\nprint("Length:", len(name))             # Length of the string\r\nprint("Uppercase:", name.upper())       # Convert to uppercase\r\nprint("First letter:", name[0])         # Access character by index\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"javascript-1",children:(0,i.jsx)(n.strong,{children:"JavaScript"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-10",children:"Syntax:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"let"}),", ",(0,i.jsx)(n.code,{children:"var"}),", or ",(0,i.jsx)(n.code,{children:"const"})," to define a string"]}),"\n",(0,i.jsxs)(n.li,{children:["Strings can be written with ",(0,i.jsx)(n.code,{children:"' '"}),", ",(0,i.jsx)(n.code,{children:'" "'}),", or backticks ",(0,i.jsx)(n.code,{children:"` `"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-10",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'let name = "Alice";  // Declaring a string\r\n\r\n// String operations\r\nconsole.log("Name:", name);                 // Output the string\r\nconsole.log("Length:", name.length);        // Length of the string\r\nconsole.log("Uppercase:", name.toUpperCase()); // Convert to uppercase\r\nconsole.log("First letter:", name[0]);      // Access first character\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"typescript-1",children:(0,i.jsx)(n.strong,{children:"TypeScript"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-11",children:"Syntax:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"string"})," type to declare strings."]}),"\n",(0,i.jsxs)(n.li,{children:["Enclose string values in double (",(0,i.jsx)(n.code,{children:'"'}),") or single (",(0,i.jsx)(n.code,{children:"'"}),") quotes."]}),"\n",(0,i.jsxs)(n.li,{children:["Built-in methods like ",(0,i.jsx)(n.code,{children:".length"}),", ",(0,i.jsx)(n.code,{children:".toUpperCase()"}),", ",(0,i.jsx)(n.code,{children:".charAt()"}),", etc., are available."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example-11",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// Declaring a string\r\nlet name: string = "Alice";\r\n\r\n// String operations\r\nconsole.log("Name:", name);                               // Output the string\r\nconsole.log("Length:", name.length);                      // Length of string\r\nconsole.log("Uppercase:", name.toUpperCase());            // Convert to uppercase\r\nconsole.log("First letter:", name.charAt(0));             // Access character by index\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"common-string-operations-across-languages",children:"Common String Operations Across Languages"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Operation"}),(0,i.jsx)(n.th,{children:"C++"}),(0,i.jsx)(n.th,{children:"C#"}),(0,i.jsx)(n.th,{children:"Java"}),(0,i.jsx)(n.th,{children:"Python"}),(0,i.jsx)(n.th,{children:"JavaScript"}),(0,i.jsx)(n.th,{children:"TypeScript"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Length"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"name.length()"})," or ",(0,i.jsx)(n.code,{children:"name.size()"})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name.Length"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name.length()"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"len(name)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name.length"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name.length"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Uppercase"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"toupper(c)"})," (char by char)"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name.ToUpper()"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name.toUpperCase()"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name.upper()"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name.toUpperCase()"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name.toUpperCase()"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Access first char"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name[0]"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name[0]"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name.charAt(0)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name[0]"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name[0]"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name[0]"})})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\uD83D\uDCA1 In C++, strings don\u2019t have a built-in ",(0,i.jsx)(n.code,{children:".toUpperCase()"})," \u2014 you need to loop through each character and convert with ",(0,i.jsx)(n.code,{children:"toupper(char)"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"#table-of-contents",children:"Back to Top"})})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},50065:function(e,n,r){r.d(n,{Z:()=>l,a:()=>d});var s=r(67294);let i={},t=s.createContext(i);function d(e){let n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);