"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[62792],{98288:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>t,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=a(85893),i=a(11151);const s={sidebar_position:8},t="Arrays",o={id:"articles/C/Arrays",title:"Arrays",description:"1. Define Array ?",source:"@site/docs/articles/C/Arrays.md",sourceDirName:"articles/C",slug:"/articles/C/Arrays",permalink:"/docs/articles/C/Arrays",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Functions",permalink:"/docs/articles/C/Functions"},next:{title:"Structures Unions Enumerations",permalink:"/docs/articles/C/Structures"}},l={},c=[{value:"1. Define Array ?",id:"1-define-array-",level:2},{value:"2. How to declare an single dimensional Array and assign values ?",id:"2-how-to-declare-an-single-dimensional-array-and-assign-values-",level:2},{value:"3. How to access elements of an array?",id:"3-how-to-access-elements-of-an-array",level:2},{value:"4. How to declare an Two dimensional Array and assign values ?",id:"4-how-to-declare-an-two-dimensional-array-and-assign-values-",level:2},{value:"5. Write a program to find an average of seven subjects marks using an array?",id:"5-write-a-program-to-find-an-average-of-seven-subjects-marks-using-an-array",level:2},{value:"6. How to pass Single-Dimension Arrays to Functions?",id:"6-how-to-pass-single-dimension-arrays-to-functions",level:2},{value:"7. Write a program to find the Largest Two Numbers in a given Array ?",id:"7-write-a-program-to-find-the-largest-two-numbers-in-a-given-array-",level:2},{value:"8. Write a program to find smallest among N numbers ?",id:"8-write-a-program-to-find-smallest-among-n-numbers-",level:2},{value:"9. Find the count of each character in a string ?",id:"9-find-the-count-of-each-character-in-a-string-",level:2},{value:"10. Write a program to count the number of Vowels in a string/word ?",id:"10-write-a-program-to-count-the-number-of-vowels-in-a-stringword-",level:2}];function d(n){const e={code:"code",em:"em",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"arrays",children:"Arrays"}),"\n",(0,r.jsx)(e.h2,{id:"1-define-array-",children:"1. Define Array ?"}),"\n",(0,r.jsx)(e.p,{children:"Definition: An Array is a collection of variables of the same data type that are referenced by a common name."}),"\n",(0,r.jsx)(e.h2,{id:"2-how-to-declare-an-single-dimensional-array-and-assign-values-",children:"2. How to declare an single dimensional Array and assign values ?"}),"\n",(0,r.jsx)(e.p,{children:"Like any other variable arrays must be declared before they are used."}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.em,{children:"Declaration Syntax:"})}),"\ndataType arrayName[size];"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.em,{children:"Example:"})})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"int num[10];\ndeclares an array of integers of size 10\n\n* Declaration Assigning Values Syntax: *\ndataType arrayName[size] = {comma separated values};\ndataType arrayName[] = {comma separated values};\n      or\narrayname[index] = value;\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.em,{children:"Example:"})})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"// signed array\nint num[3] = {11, 12, 13, 14};\n// unsigned array\nint num[] = {11, 12, 13, 14};\nor\nnum[0] = 11;\nnum[1] = 12;\nnum[2] = 13;\nnum[3] = 14;\n"})}),"\n",(0,r.jsx)(e.h2,{id:"3-how-to-access-elements-of-an-array",children:"3. How to access elements of an array?"}),"\n",(0,r.jsx)(e.p,{children:"a. Entering Data into an array:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'    for (int i = 0 ; i < size ; i++ )\n {\n  printf ( "Enter marks " );\n           /* store data in array */\n  scanf ( "%d", & arrayName [i] );\n }\n'})}),"\n",(0,r.jsx)(e.p,{children:"b. Reading Data from an array:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"    for (int i = 0 ; i < size ; i++ )\n {\n        /* read data from an array*/\n  int temp = arrayName [i];\n }\n"})}),"\n",(0,r.jsx)(e.h2,{id:"4-how-to-declare-an-two-dimensional-array-and-assign-values-",children:"4. How to declare an Two dimensional Array and assign values ?"}),"\n",(0,r.jsx)(e.p,{children:"Declaration Syntax:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"  int twoDimensional[rowSize][columnSize];\n"})}),"\n",(0,r.jsx)(e.p,{children:"Example:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"//Declares an array of integer matrix of row size 4 and column size 2\nint matrix[4][2];\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Declaration Assigning Values Syntax:"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"dataType twoDimensional[rowSize][columnSize] = {comma separated values};\n"})}),"\n",(0,r.jsx)(e.p,{children:"Example:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"int matrix[4][2] = {\n      {1, 2},\n      {3, 4},\n      {5, 6},\n      {7, 8}\n                    };\n"})}),"\n",(0,r.jsx)(e.h2,{id:"5-write-a-program-to-find-an-average-of-seven-subjects-marks-using-an-array",children:"5. Write a program to find an average of seven subjects marks using an array?"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\nint main()\n{\n int avg, sum = 0; int i;\n   /* array declaration */\n int marks[7];\n\n for ( i = 0 ; i < 7 ; i++ )\n {\n  printf ( "Enter marks " );\n /* store data in array */\n  scanf ( "%d", &marks[i] );\n }\n for ( i = 0 ; i < 7 ; i++ )\n {\n  /* read data from an array*/\n  sum = sum + marks[i];\n }\n avg = sum / 7 ;\n\n   printf ("\\nAverage marks = %d", avg) ;\n   return 0;\n}\n\nOUTPUT:\nEnter marks 1\nEnter marks 2\nEnter marks 3\nEnter marks 4\nEnter marks 5\nEnter marks 6\nEnter marks 7\nAverage marks = 4\n'})}),"\n",(0,r.jsx)(e.h2,{id:"6-how-to-pass-single-dimension-arrays-to-functions",children:"6. How to pass Single-Dimension Arrays to Functions?"}),"\n",(0,r.jsx)(e.p,{children:"In C, you cannot pass an entire array as an argument to a function. You can, however, pass a pointer to an array by specifying the arrays name without an index as shown in below example printArray(num);"}),"\n",(0,r.jsxs)(e.p,{children:["Example",":Passing"," Array to function"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\nvoid printArray(int x[5]); //function declaration\n\nvoid main()\n{\n /*  int num[5];*/\n\n   int num[5] = {0,1,2,3,4};\n   num[4] = 10;\n\n   printArray(num);\n}\n\n//function Definition\nvoid printArray(int x[5])\n{\n   for(int i = 0; i<5; i++)\n   {\n     printf("%d ",x[i]);\n   }\n}\n\n*OUTPUT: *\n0 1 2 3 10\n'})}),"\n",(0,r.jsx)(e.p,{children:"We can write function argument in to three ways pass an array"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Sized Array :"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"void printArray(int x[5])\n{\n//Code\n}\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"2",children:["\n",(0,r.jsx)(e.li,{children:"UnSized Array:"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"void printArray(int x[])\n{\n//Code\n}\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"3",children:["\n",(0,r.jsx)(e.li,{children:"Using pointer :"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"void printArray(int \\*x)\n{\n//Code\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"7-write-a-program-to-find-the-largest-two-numbers-in-a-given-array-",children:"7. Write a program to find the Largest Two Numbers in a given Array ?"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n#define MAX 4\n\nvoid main()\n{\n    int array[MAX], i, largest1, largest2, temp;\n\n    printf("Enter %d integer numbers \\n", MAX);\n    for (i = 0; i < MAX; i++)\n    {\n        scanf("%d", &array[i]);\n    }\n\n    printf("Input interger are \\n");\n    for (i = 0; i < MAX; i++)\n    {\n      printf("%5d", array[i]);\n    }\n    printf("\\n");\n    /*  assume first element of array is the first larges t*/\n    largest1 = array[0];\n    /*  assume first element of array is the second largest */\n    largest2 = array[1];\n    if (largest1 < largest2)\n    {\n        temp = largest1;\n        largest1 = largest2;\n        largest2 = temp;\n    }\n    for (i = 2; i < 4; i++)\n    {\n        if (array[i] >= largest1)\n        {\n            largest2 = largest1;\n            largest1 = array[i];\n        }\n        else if (array[i] > largest2)\n        {\n            largest2 = array[i];\n        }\n    }\n    printf("n%d is the first largest \\n", largest1);\n    printf("%d is the second largest \\n", largest2);\n    printf("nAverage of %d and %d = %d \\n", largest1, largest2, (largest1 + largest2) / 2);\n}\n\nOUTPUT:\nEnter 4 integer numbers\n80\n23\n79\n58\nInput interger are\n80   23   79   58\n\n80 is the first largest\n79 is the second largest\n\nAverage of 80 and 79 = 79\n'})}),"\n",(0,r.jsx)(e.h2,{id:"8-write-a-program-to-find-smallest-among-n-numbers-",children:"8. Write a program to find smallest among N numbers ?"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\nmain()\n{\n int a[10], i, small;\n printf("\\nEnter elements of an array:\\n");\n for (i=0; i<=9; i++)\n scanf("%d", &a[i]);\n small = a[0];\n for (i=0; i<=9; i++)\n if (a[i] < small)\n small = a[i];\n printf("\\nSmallest number is %d", small);\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"9-find-the-count-of-each-character-in-a-string-",children:"9. Find the count of each character in a string ?"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n#define LEN 255  //Total ASCII Characterset\nvoid main()\n{\n int ASCII[LEN];\n char sentence[100];\n int count = 0, j = 0;\n int code;\n\n //Initialize the ASCII Array with Zero\n for(int i = 0; i<LEN; i++)\n {\n  ASCII[i] = 0;\n }\n\n printf("Enter the sentence: \\n");\n for(j = 0; (sentence[j] = getchar())!=\'\\n\'; j++) { }\n\n sentence[j] = \'\\0\';\n count = j;\n\n //Increment the value of the corresponding ASCII Array\n //Index (code) represents the ASCII Character\n for(int idx = 0; idx<count; idx++)\n {\n  code = sentence [ idx ];\n  ASCII[ code]  = ASCII[ code ]+1;\n }\n\n printf("The given sentence is: %s \\n",sentence);\n\n //Print the Result\n int TotalChars = 0;\n for(int ch = 0; ch<LEN; ch++)\n {\n  if(ASCII[ch] != 0)\n  {\n   int cnt = ASCII[ch];\n   TotalChars = TotalChars + cnt;\n   switch(ch)\n   {\n   case 9:\n    printf("Horizontal Tab - %d\\n", cnt);\n    break;\n   case 11:\n    printf("Vertical Tab - %d\\n", cnt);\n    break;\n   case 32:\n    printf("Space - %d\\n", cnt);\n    break;\n   default:\n    printf("%c - %d\\n",ch, cnt);\n    break;\n   }\n  }\n }\n printf("Total Characters - %d\\n", TotalChars);\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"10-write-a-program-to-count-the-number-of-vowels-in-a-stringword-",children:"10. Write a program to count the number of Vowels in a string/word ?"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"#include <stdio.h>\nmain()\n{\n int i, vowels = 0;\n char word[20];\n printf(\"Enter the word\\n\");\n scanf(\"%s\",word);\n i = 0;\n\n while(i<20 && word[i]!='\\0')\n {\n  switch(word[i])\n  {\n   case 'a': case 'A';\n   case 'e': case 'E';\n   case 'i': case 'I';\n   case 'o': case 'O';\n   case 'u': case 'U';\n    vowels++;\n    break;\n  }\n i++;\n }\n printf(\"The number of Vowels in a word are %d\\n\", vowels);\n}\n"})})]})}function m(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},11151:(n,e,a)=>{a.d(e,{Z:()=>o,a:()=>t});var r=a(67294);const i={},s=r.createContext(i);function t(n){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:t(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);