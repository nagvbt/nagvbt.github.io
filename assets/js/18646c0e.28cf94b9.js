"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["87322"],{21880:function(n,e,r){r.r(e),r.d(e,{frontMatter:()=>i,default:()=>d,toc:()=>u,metadata:()=>t,assets:()=>c,contentTitle:()=>o});var t=JSON.parse('{"id":"articles/Languages/Functions","title":"Functions","description":"A function is a block of code that performs a specific task.","source":"@site/docs/articles/Languages/Functions.md","sourceDirName":"articles/Languages","slug":"/articles/Languages/Functions","permalink":"/docs/articles/Languages/Functions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"Articles","previous":{"title":"Languages Comparison","permalink":"/docs/category/languages-comparison-1"},"next":{"title":"React Native","permalink":"/docs/category/react-native-1"}}'),a=r(85893),s=r(50065);let i={},o="Functions",c={},u=[{value:"Types of functions",id:"types-of-functions",level:2},{value:"C++ Function",id:"c-function",level:2},{value:"Javascript Function",id:"javascript-function",level:2},{value:"Python Functions",id:"python-functions",level:2},{value:"Types of Python Function Arguments",id:"types-of-python-function-arguments",level:3},{value:"Python Function within Functions",id:"python-function-within-functions",level:2},{value:"Anonymous functions in Python",id:"anonymous-functions-in-python",level:2}];function l(n){let e={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"functions",children:"Functions"})}),"\n",(0,a.jsx)(e.p,{children:"A function is a block of code that performs a specific task."}),"\n",(0,a.jsx)(e.p,{children:"Dividing a complex problem into smaller functions makes our program easy to understand the program."}),"\n",(0,a.jsx)(e.h2,{id:"types-of-functions",children:"Types of functions"}),"\n",(0,a.jsx)(e.mermaid,{value:"graph TD;\r\n    FunctionTypes--\x3eBuilt-in-library;\r\n    FunctionTypes--\x3eUser-defined;"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"Built-in library function:\r\nThese are Standard functions that are available to use."}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"User-defined function:\r\nOur own functions based on our requirements."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"c-function",children:"C++ Function"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-c",children:"access returnType functionName(dataType param, dataType param2,...) {\r\n // function body\r\n}\r\n\r\n// Example:\r\npublic int add(int i, int j, int k){\r\n    return i+j+k; \r\n}\n"})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.em,{children:(0,a.jsx)(e.strong,{children:"NOTE:"})}),"\r\nC# and Java functions are similar to C++"]}),"\n",(0,a.jsx)(e.h2,{id:"javascript-function",children:"Javascript Function"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:"function functionName (param, param2,...) { \r\n  // function body \r\n}\r\n\r\n// Example:\r\nfunction add(i, j, k){\r\n  return i+j+k;\r\n}\n"})}),"\n",(0,a.jsx)(e.h2,{id:"python-functions",children:"Python Functions"}),"\n",(0,a.jsx)(e.p,{children:"Python function is defined using the def keyword:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"def function_name(arguments):\r\n    # function body \r\n    return\r\n\r\n#Example:\r\ndef add_numbers(i, j, k):\r\n    sum = i + j + k\r\n    return sum\r\n\n"})}),"\n",(0,a.jsx)(e.h3,{id:"types-of-python-function-arguments",children:"Types of Python Function Arguments"}),"\n",(0,a.jsx)(e.mermaid,{value:"graph TD;\r\n    FunctionArguments--\x3eDefault-argument;\r\n    FunctionArguments--\x3eKeyword-arguments;\r\n    FunctionArguments--\x3ePositional-arguments;\r\n    FunctionArguments--\x3eArbitrary-arguments;"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.em,{children:(0,a.jsx)(e.strong,{children:"1. Default Arguments:"})})}),"\n",(0,a.jsx)(e.p,{children:"A default argument is a parameter that assumes a default value if a value is not provided in the function call for that argument."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# Python program to demonstrate\r\n# default arguments\r\ndef myFun(x, y=50):\r\n print("x: ", x)\r\n print("y: ", y)\r\n\r\n\r\n# Driver code (We call myFun() with only\r\n# argument)\r\nmyFun(10)\r\n\r\n""""\r\nOutput\r\nx:  10\r\ny:  50\r\n""""\n'})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.em,{children:(0,a.jsx)(e.strong,{children:"2. Keyword Arguments:"})})}),"\n",(0,a.jsx)(e.p,{children:"Parameter Names are used to pass the argument during the function call.\r\nSo that the caller does not need to remember the order of parameters."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# Python program to demonstrate Keyword Arguments\r\ndef Employee(firstname, lastname):\r\n print(firstname, lastname)\r\n\r\n\r\n# Keyword arguments\r\nEmployee(firstname='Ram', lastname='Das')\r\nEmployee(lastname='Das', firstname='Ram')\r\n\r\n\"\"\"\"\r\nOutput\r\nRam Das\r\nRam Das\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.em,{children:(0,a.jsx)(e.strong,{children:"3.  Positional-arguments:"})})}),"\n",(0,a.jsx)(e.p,{children:"Arguments are passed in the order of parameters. The order defined in the order function declaration."}),"\n",(0,a.jsx)(e.p,{children:"Order of values cannot be changed to avoid the unexpected output."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'def Person(name, age):\r\n print("Hi, I am", name)\r\n print("My age is ", age)\r\n\r\n\r\n# You will get correct output because\r\n# argument is given in order\r\nprint("Case-1:")\r\nPerson("Ram", 47)\r\n# You will get incorrect output because\r\n# argument is not in order\r\nprint("\\nCase-2:")\r\nPerson(47, "Ram")\r\n\r\n"""\r\nOutput\r\nCase-1:\r\nHi, I am Ram\r\nMy age is  47\r\n\r\nCase-2:\r\nHi, I am 47\r\nMy age is  Ram\r\n\r\n"""\n'})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.em,{children:(0,a.jsx)(e.strong,{children:"3. Arbitrary argument"})})}),"\n",(0,a.jsx)(e.p,{children:"In Python Arbitrary Keyword Arguments, *args, and **kwargs can pass a variable number of arguments to a function using special symbols."}),"\n",(0,a.jsx)(e.p,{children:"There are two special symbols:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"*args in Python (Non-Keyword Arguments)"}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"**kwargs in Python (Keyword Arguments)"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"Example 1: Variable length non-keywords argument"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# Python program to illustrate\r\n# *args for variable number of arguments\r\ndef myFunc(*args):\r\n for arg in args:\r\n  print(arg)\r\n\r\n\r\nmyFunc('Hello', 'Welcome', 'to', 'NBT')\r\n\r\n\"\"\"\r\nOutput\r\n\r\nHello\r\nWelcome\r\nto\r\nNBT\r\n\"\"\"\n"})}),"\n",(0,a.jsx)(e.p,{children:"Example 2: Variable length keyword arguments"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# Python program to illustrate\r\n# *kwargs for variable number of keyword arguments\r\n\r\n\r\ndef myFunc(**kwargs):\r\n for key, value in kwargs.items():\r\n  print("%s == %s" % (key, value))\r\n\r\n\r\n# Driver code\r\nmyFunc(firstName=\'T\', midName=\'Nag\', lastName=\'VB\')\r\n\r\n"""\r\nOutput\r\n\r\nfirstName == T\r\nmidName == Nag\r\nlastName == VB\r\n"""\n'})}),"\n",(0,a.jsx)(e.h2,{id:"python-function-within-functions",children:"Python Function within Functions"}),"\n",(0,a.jsx)(e.p,{children:"A function that is defined inside another function is known as the inner function or nested function. Nested functions are able to access variables of the enclosing scope. Inner functions are used so that they can be protected from everything happening outside the function."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# Python program to\r\n# demonstrate accessing of\r\n# variables of nested functions\r\n\r\ndef f1():\r\n s = \'I love Nagvbt\'\r\n \r\n def f2():\r\n  print(s)\r\n  \r\n f2()\r\n\r\n# Driver\'s code\r\nf1()\r\n\r\n"""\r\nOutput:\r\n\r\nI love Nagvbt\r\n"""\n'})}),"\n",(0,a.jsx)(e.h2,{id:"anonymous-functions-in-python",children:"Anonymous functions in Python"})]})}function d(n={}){let{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(l,{...n})}):l(n)}},50065:function(n,e,r){r.d(e,{Z:()=>o,a:()=>i});var t=r(67294);let a={},s=t.createContext(a);function i(n){let e=t.useContext(s);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:i(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);