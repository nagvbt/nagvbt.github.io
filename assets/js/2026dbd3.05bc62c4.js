"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[85185],{80690:(n,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>o});var a=r(85893),e=r(11151);const s={tags:["C++","CSharp"]},i="Abstract Class",c={permalink:"/blog/2020/05/02/what-is-an-abstract-class",source:"@site/blog/2020-05-02-what-is-an-abstract-class.md",title:"Abstract Class",description:"Abstract classes are used for providing an abstraction to the code to make it reusable and extendable.",date:"2020-05-02T00:00:00.000Z",formattedDate:"May 2, 2020",tags:[{label:"C++",permalink:"/blog/tags/c"},{label:"CSharp",permalink:"/blog/tags/c-sharp"}],readingTime:1.205,hasTruncateMarker:!0,authors:[],frontMatter:{tags:["C++","CSharp"]},unlisted:!1,prevItem:{title:"How to Create a New React App",permalink:"/blog/2020/12/25/create-react-app"},nextItem:{title:"Ionic 5 setup",permalink:"/blog/2020/02/20/ionic-5-setup"}},l={authorsImageUrls:[]},o=[{value:"Abstract class in C++",id:"abstract-class-in-c",level:2},{value:"Abstract class in C",id:"abstract-class-in-c-1",level:2}];function b(n){const t={code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,e.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Abstract classes are used for providing an abstraction to the code to make it reusable and extendable."}),"\n",(0,a.jsx)(t.h2,{id:"abstract-class-in-c",children:"Abstract class in C++"}),"\n",(0,a.jsx)(t.p,{children:"It is a class that has at least one pure virtual function (i.e., a function that has no definition). The classes inheriting the abstract class must provide a definition for the pure virtual function."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:(0,a.jsx)(t.strong,{children:"Program"})})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:'#include "iostream"\r\nusing namespace std;\r\nclass AbstractCls\r\n{\r\npublic:\r\n\xa0\xa0\xa0\xa0\xa0\xa0virtual int Add(int a, int b) = 0;\r\n\xa0\xa0\xa0\xa0\xa0\xa0\r\n\xa0\xa0\xa0\xa0\xa0\xa0int Sub(int a, int b)\r\n\xa0\xa0\xa0\xa0\xa0\xa0{\r\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0return (a-b);\r\n\xa0\xa0\xa0\xa0\xa0\xa0}\r\n};\r\n\r\nclass Math : public AbstractCls\r\n{\r\npublic:\r\n\xa0\xa0\xa0\xa0\xa0\xa0int Add(int a, int b)\r\n\xa0\xa0\xa0\xa0\xa0\xa0{\r\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0 return (a+b);\r\n\xa0\xa0\xa0\xa0\xa0\xa0}\r\n};\r\nint main()\r\n{\r\n\xa0\xa0\xa0\xa0\xa0\xa0cout<<"Math Class"<<"\\\\n";\r\n\xa0\xa0\xa0\xa0\xa0\xa0Math obj;\r\n\xa0\xa0\xa0\xa0\xa0\xa0cout<<obj.Add(2, 3)<<"\\\\n";\r\n\xa0\xa0\xa0\xa0\xa0\xa0cout<<obj.Sub(5, 3)<<"\\\\n";\r\n\xa0\xa0\xa0\xa0\xa0\xa0return 0;\r\n}\r\n//OUTPUT\r\n//Math Class\r\n//5\r\n//2\n'})}),"\n",(0,a.jsx)(t.h2,{id:"abstract-class-in-c-1",children:"Abstract class in C"}),"\n",(0,a.jsx)(t.p,{children:"The abstract modifier is used before the class or method/indexers/events and properties to declare them as abstract."}),"\n",(0,a.jsx)(t.p,{children:"Sample"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:'using System;\r\n\r\nnamespace Samples\r\n{\r\n\r\n  public abstract class AbstractCls\r\n  {\r\n    public abstract int Add(int a, int b);\r\n\r\n    public int Sub(int a, int b)\r\n    {\r\n      return (a - b);\r\n    }\r\n  }\r\n\r\n  public class Math : AbstractCls\r\n  {\r\n    public override int Add(int a, int b)\r\n    {\r\n      return (a + b);\r\n    }\r\n  }\r\n\r\n  class Program\r\n  {\r\n    static void Main(string\\[\\] args)\r\n    {\r\n      Console.WriteLine("Math Class");\r\n      Math obj = new Math();\r\n      Console.WriteLine(obj.Add(2, 3));\r\n      Console.WriteLine(obj.Sub(5, 3));\r\n    }\r\n  }\r\n}\r\n//OUTPUT\r\n//Math Class\r\n//5\r\n//2\n'})})]})}function d(n={}){const{wrapper:t}={...(0,e.a)(),...n.components};return t?(0,a.jsx)(t,{...n,children:(0,a.jsx)(b,{...n})}):b(n)}},11151:(n,t,r)=>{r.d(t,{Z:()=>c,a:()=>i});var a=r(67294);const e={},s=a.createContext(e);function i(n){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function c(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(e):n.components||e:i(n.components),a.createElement(s.Provider,{value:t},n.children)}}}]);