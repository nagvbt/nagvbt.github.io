"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[87734],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=l(r),g=a,f=u["".concat(c,".").concat(g)]||u[g]||m[g]||o;return r?n.createElement(f,p(p({ref:t},s),{},{components:r})):n.createElement(f,p({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,p=new Array(o);p[0]=g;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:a,p[1]=i;for(var l=2;l<o;l++)p[l]=r[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},1441:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const o={tags:["Data Structures","C++"]},p="Simple Stack Program in C++",i={permalink:"/blog/2012/04/02/stack",source:"@site/blog/2012-04-02-stack.md",title:"Simple Stack Program in C++",description:"Definition:",date:"2012-04-02T00:00:00.000Z",formattedDate:"April 2, 2012",tags:[{label:"Data Structures",permalink:"/blog/tags/data-structures"},{label:"C++",permalink:"/blog/tags/c"}],readingTime:.185,hasTruncateMarker:!1,authors:[],frontMatter:{tags:["Data Structures","C++"]},prevItem:{title:"Simple Queue program in C++",permalink:"/blog/2012/04/02/queue"},nextItem:{title:"How to Expand and Contract a MFC Dialog ?",permalink:"/blog/2012/04/01/expand-and-contract-a-mfc-dialog"}},c={authorsImageUrls:[]},l=[],s={toc:l},u="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Definition:")),(0,a.kt)("p",null,"A stack is a data structure in which addition of new elements or deletion of existing elements takes place at the same end."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Principle"),":"),(0,a.kt)("p",null,"Stack works on the\xa0",(0,a.kt)("strong",{parentName:"p"},"LIFO")," - ",(0,a.kt)("strong",{parentName:"p"},"L"),"ast ",(0,a.kt)("strong",{parentName:"p"},"I"),"n ",(0,a.kt)("strong",{parentName:"p"},"F"),"irst ",(0,a.kt)("strong",{parentName:"p"},"O"),"ut principle"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Program"),": ",(0,a.kt)("a",{parentName:"p",href:"https://gist.github.com/nagvbt/1bc930d01d113cb75a10"},"https://gist.github.com/nagvbt/1bc930d01d113cb75a10")))}m.isMDXComponent=!0}}]);