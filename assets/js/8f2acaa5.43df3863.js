"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[48403],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=p(t),f=o,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||a;return t?r.createElement(m,l(l({ref:n},s),{},{components:t})):r.createElement(m,l({ref:n},s))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=f;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[d]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},25369:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=t(87462),o=(t(67294),t(3905));const a={title:"Console Application Event Handling",date:"2011-09-03",categories:["c-cpp-mfc-vcpp"],tags:["mfc","vc","win32"]},l=void 0,i={permalink:"/blog/2011/09/03/console-application-event-handling",source:"@site/blog/2011-09-03-console-application-event-handling.md",title:"Console Application Event Handling",description:"Using SetConsoleCtrlHandler we can Add an application-defined HandlerRoutine function say myConsoleHandler.",date:"2011-09-03T00:00:00.000Z",formattedDate:"September 3, 2011",tags:[{label:"mfc",permalink:"/blog/tags/mfc"},{label:"vc",permalink:"/blog/tags/vc"},{label:"win32",permalink:"/blog/tags/win-32"}],readingTime:.58,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Console Application Event Handling",date:"2011-09-03",categories:["c-cpp-mfc-vcpp"],tags:["mfc","vc","win32"]},prevItem:{title:"How to obtain a pointer to various objects in MFC",permalink:"/blog/2011/09/03/548"},nextItem:{title:"MFC Tip: To fill the Background color of the Dialog and get the background of the controls to look correct",permalink:"/blog/2011/09/03/mfcdailogbckcolor"}},c={authorsImageUrls:[]},p=[],s={toc:p},d="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Using ",(0,o.kt)("strong",{parentName:"p"},"SetConsoleCtrlHandler")," we can Add an application-defined HandlerRoutine function say myConsoleHandler."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," If the second parameter is TRUE, the handler is added; if it is FALSE, the handler is removed by SetConsoleCtrlHandler function."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Sample code is Shown Below")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdafx.h"\n#include "windows.h"\n\nvoid myConsoleHandler(DWORD ctrlEvent)\n{\n   switch(ctrlEvent)\n   {\n        case CTRL\\_CLOSE\\_EVENT:\n            MessageBox(NULL,"Program being closed!","CTRL\\_CLOSE\\_EVENT",MB\\_OK);\n        break;\n\n        case CTRL\\_C\\_EVENT:\n            MessageBox(NULL,"Copy Event!","CTRL\\_C\\_EVENT",MB\\_OK);\n        break;\n   }\n\n}\n\nint main(int argc, \\_TCHAR\\* argv\\[\\])\n{\n    SetConsoleTitle("Console Event Handler Demo");\n\n    if(SetConsoleCtrlHandler((PHANDLER\\_ROUTINE)myConsoleHandler, TRUE))\n    {\n         printf( "nThe Control Handler is installed.n" );\n         printf( "n -- Now try pressing Ctrl+C or closing the console..." );\n         while(1)\n         {\n           //Do Nothing\n         }\n    }\n    else\n    {\n        printf( "nERROR: Could not set control handler");\n        return 1;\n    }\n    return 0;\n}\n')))}u.isMDXComponent=!0}}]);