"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["20271"],{15837:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>c,default:()=>u,toc:()=>a,metadata:()=>r,assets:()=>l,contentTitle:()=>i});var r=JSON.parse('{"id":"UIFrameworks/Hooks","title":"Hooks","description":"React","source":"@site/docs/UIFrameworks/Hooks.md","sourceDirName":"UIFrameworks","slug":"/UIFrameworks/Hooks","permalink":"/docs/UIFrameworks/Hooks","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20},"sidebar":"tutorialSidebar","previous":{"title":"Sass Styling","permalink":"/docs/UIFrameworks/SaSSStyling"},"next":{"title":"Functional vs Class Components","permalink":"/docs/UIFrameworks/FunctionalvsClass"}}'),s=t(85893),o=t(50065);let c={sidebar_position:20},i="Hooks",l={},a=[{value:"<strong>React</strong>",id:"react",level:2},{value:"What is a Hook?",id:"what-is-a-hook",level:3},{value:"Hooks Covered",id:"hooks-covered",level:4},{value:"1. <code>useState</code>",id:"1-usestate",level:4},{value:"2. <code>useEffect</code>",id:"2-useeffect",level:4},{value:"3. <code>useContext</code>",id:"3-usecontext",level:4},{value:"Example: App with <code>useState</code>, <code>useEffect</code>, <code>useContext</code>",id:"example-app-with-usestate-useeffect-usecontext",level:3},{value:"<strong>Svelte</strong>",id:"svelte",level:2},{value:"What is a Store and Reactive Statement?",id:"what-is-a-store-and-reactive-statement",level:3},{value:"Svelte Equivalents",id:"svelte-equivalents",level:4},{value:"1. Local State (Like <code>useState</code>)",id:"1-local-state-like-usestate",level:4},{value:"2. Reactive Statement (Like <code>useEffect</code>)",id:"2-reactive-statement-like-useeffect",level:4},{value:"3. Context API (Like <code>useContext</code>)",id:"3-context-api-like-usecontext",level:4},{value:"Example: App with Local State, Reactive Effects, and Context",id:"example-app-with-local-state-reactive-effects-and-context",level:3},{value:"Folder Structure",id:"folder-structure",level:4}];function d(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"hooks",children:"Hooks"})}),"\n",(0,s.jsx)(n.h2,{id:"react",children:(0,s.jsx)(n.strong,{children:"React"})}),"\n",(0,s.jsx)(n.h3,{id:"what-is-a-hook",children:"What is a Hook?"}),"\n",(0,s.jsxs)(n.p,{children:["Hooks are special functions that let you \u201Chook into\u201D React features like ",(0,s.jsx)(n.strong,{children:"state"}),", ",(0,s.jsx)(n.strong,{children:"lifecycle"}),",\r\nand ",(0,s.jsx)(n.strong,{children:"context"})," in functional components. They avoid the need for class components."]}),"\n",(0,s.jsx)(n.h4,{id:"hooks-covered",children:"Hooks Covered"}),"\n",(0,s.jsxs)(n.h4,{id:"1-usestate",children:["1. ",(0,s.jsx)(n.code,{children:"useState"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Lets you add state to functional components."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Syntax"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const [state, setState] = useState<type>(initialValue);\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"2-useeffect",children:["2. ",(0,s.jsx)(n.code,{children:"useEffect"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Lets you perform side effects like fetching data, timers, or DOM updates."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Syntax"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"useEffect(() => {\r\n  // effect logic\r\n  return () => {\r\n    // optional cleanup\r\n  };\r\n}, [dependencies]);\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"3-usecontext",children:["3. ",(0,s.jsx)(n.code,{children:"useContext"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Lets you share data (like theme, user) globally without prop drilling."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Syntax"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const value = useContext(MyContext);\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"example-app-with-usestate-useeffect-usecontext",children:["Example: App with ",(0,s.jsx)(n.code,{children:"useState"}),", ",(0,s.jsx)(n.code,{children:"useEffect"}),", ",(0,s.jsx)(n.code,{children:"useContext"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// App.tsx\r\nimport React, { useState, useEffect, createContext } from 'react';\r\nimport UserProfile from './components/UserProfile';\r\nimport Counter from './components/Counter';\r\n\r\ninterface UserContextType {\r\n  username: string;\r\n}\r\n\r\nexport const UserContext = createContext<UserContextType>({ username: 'Guest' });\r\n\r\nconst App: React.FC = () => {\r\n  const [username, setUsername] = useState<string>('NBT');\r\n\r\n  useEffect(() => {\r\n    console.log('App Mounted');\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ username }}>\r\n      <div style={{ padding: '2rem' }}>\r\n        <h1>React Hooks Demo</h1>\r\n        <UserProfile />\r\n        <Counter />\r\n      </div>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// components/UserProfile.tsx\r\nimport React, { useContext } from 'react';\r\nimport { UserContext } from '../App';\r\n\r\nconst UserProfile: React.FC = () => {\r\n  const { username } = useContext(UserContext);\r\n\r\n  return (\r\n    <div>\r\n      <h2>User Profile</h2>\r\n      <p>Username from Context: <strong>{username}</strong></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// components/Counter.tsx\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Counter: React.FC = () => {\r\n  const [count, setCount] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    document.title = `Count: ${count}`;\r\n  }, [count]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Counter</h2>\r\n      <p>Current count: {count}</p>\r\n      <button onClick={() => setCount(prev => prev + 1)}>Increment</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"svelte",children:(0,s.jsx)(n.strong,{children:"Svelte"})}),"\n",(0,s.jsx)(n.h3,{id:"what-is-a-store-and-reactive-statement",children:"What is a Store and Reactive Statement?"}),"\n",(0,s.jsx)(n.p,{children:"In Svelte, instead of Hooks, you use:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Reactive statements (",(0,s.jsx)(n.code,{children:"$:"}),")"]}),": like ",(0,s.jsx)(n.code,{children:"useEffect"}),", auto-runs when dependencies change."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Local state"}),": variables inside ",(0,s.jsx)(n.code,{children:"<script>"})," (no ",(0,s.jsx)(n.code,{children:"useState"})," needed)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Context API"}),": similar to ",(0,s.jsx)(n.code,{children:"useContext"})," using ",(0,s.jsx)(n.code,{children:"setContext"})," and ",(0,s.jsx)(n.code,{children:"getContext"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Writable stores"}),": shared state across components."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"svelte-equivalents",children:"Svelte Equivalents"}),"\n",(0,s.jsxs)(n.h4,{id:"1-local-state-like-usestate",children:["1. Local State (Like ",(0,s.jsx)(n.code,{children:"useState"}),")"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-svelte",children:"<script>\r\n  let count = 0;\r\n<\/script>\r\n\r\n<button on:click={() => count++}>Increment</button>\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"2-reactive-statement-like-useeffect",children:["2. Reactive Statement (Like ",(0,s.jsx)(n.code,{children:"useEffect"}),")"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-svelte",children:"<script>\r\n  let count = 0;\r\n\r\n  $: document.title = `Count: ${count}`;\r\n<\/script>\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"3-context-api-like-usecontext",children:["3. Context API (Like ",(0,s.jsx)(n.code,{children:"useContext"}),")"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"setContext"}),": Provide a value"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getContext"}),": Access the provided value"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"example-app-with-local-state-reactive-effects-and-context",children:"Example: App with Local State, Reactive Effects, and Context"}),"\n",(0,s.jsx)(n.h4,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-svelte",children:"src/\r\n\u251C\u2500\u2500 routes/\r\n\u2502   \u251C\u2500\u2500 +page.svelte          \u2192 Main App\r\n\u2502   \u251C\u2500\u2500 components/\r\n\u2502   \u2502   \u251C\u2500\u2500 Counter.svelte\r\n\u2502   \u2502   \u2514\u2500\u2500 UserProfile.svelte\r\n\u2502   \u2514\u2500\u2500 context.ts\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// context.ts\r\nimport { setContext, getContext } from 'svelte';\r\nimport { writable } from 'svelte/store';\r\n\r\nexport const USER_CONTEXT = Symbol();\r\n\r\nexport function initUserContext(username: string) {\r\n  const user = writable({ username });\r\n  setContext(USER_CONTEXT, user);\r\n}\r\n\r\nexport function useUserContext() {\r\n  return getContext(USER_CONTEXT);\r\n}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-svelte",children:"\x3c!-- +page.svelte --\x3e\r\n<script lang=\"ts\">\r\n  import Counter from './components/Counter.svelte';\r\n  import UserProfile from './components/UserProfile.svelte';\r\n  import { initUserContext } from './context';\r\n\r\n  initUserContext('NBT');\r\n<\/script>\r\n\r\n<div style=\"padding: 2rem\">\r\n  <h1>Svelte Reactivity + Context Demo</h1>\r\n  <UserProfile />\r\n  <Counter />\r\n</div>\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-svelte",children:"\x3c!-- components/UserProfile.svelte --\x3e\r\n<script lang=\"ts\">\r\n  import { useUserContext } from '../context';\r\n  import { derived } from 'svelte/store';\r\n\r\n  const userStore = useUserContext();\r\n  const username = derived(userStore, $u => $u.username);\r\n<\/script>\r\n\r\n<h2>User Profile</h2>\r\n<p>Username from Context: <strong>{$username}</strong></p>\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-svelte",children:'\x3c!-- components/Counter.svelte --\x3e\r\n<script lang="ts">\r\n  let count = 0;\r\n\r\n  $: document.title = `Count: ${count}`;\r\n<\/script>\r\n\r\n<h2>Counter</h2>\r\n<p>Current count: {count}</p>\r\n<button on:click={() => count++}>Increment</button>\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["In Svelte, you don\u2019t need ",(0,s.jsx)(n.code,{children:"useState"})," or ",(0,s.jsx)(n.code,{children:"useEffect"}),". State is just variables, and reactive logic\r\nuses ",(0,s.jsx)(n.code,{children:"$:"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{})]})}function u(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},50065:function(e,n,t){t.d(n,{Z:()=>i,a:()=>c});var r=t(67294);let s={},o=r.createContext(s);function c(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);