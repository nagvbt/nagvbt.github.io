"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[3974],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>h});var o=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,o,a=function(t,e){if(null==t)return{};var n,o,a={},l=Object.keys(t);for(o=0;o<l.length;o++)n=l[o],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(o=0;o<l.length;o++)n=l[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var s=o.createContext({}),p=function(t){var e=o.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},c=function(t){var e=p(t.components);return o.createElement(s.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,s=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),u=p(n),m=a,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||l;return n?o.createElement(h,r(r({ref:e},c),{},{components:n})):o.createElement(h,r({ref:e},c))}));function h(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,r=new Array(l);r[0]=m;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i[u]="string"==typeof t?t:a,r[1]=i;for(var p=2;p<l;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1091:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var o=n(7462),a=(n(7294),n(3905));const l={},r="Component Development Guide",i={unversionedId:"articles/Storybook/Component Development Guide",id:"articles/Storybook/Component Development Guide",title:"Component Development Guide",description:"This document details about the React Foundation Component Development.",source:"@site/docs/articles/Storybook/Component Development Guide.md",sourceDirName:"articles/Storybook",slug:"/articles/Storybook/Component Development Guide",permalink:"/docs/articles/Storybook/Component Development Guide",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Code Review Checklist",permalink:"/docs/articles/Storybook/Code Review Checklist"},next:{title:"Coding Standards",permalink:"/docs/articles/Storybook/coding-standards"}},s={},p=[{value:"Conventions:",id:"conventions",level:5},{value:"Component Logic",id:"component-logic",level:2},{value:"IconButton.jsx",id:"iconbuttonjsx",level:4},{value:"\u2714\ufe0f Do this",id:"\ufe0f-do-this",level:4},{value:"\u274c Do not do this",id:"-do-not-do-this",level:4},{value:"index.js",id:"indexjs",level:3},{value:"\u2714\ufe0f Do this",id:"\ufe0f-do-this-1",level:4},{value:"\u274c Do not do this",id:"-do-not-do-this-1",level:4},{value:"Aliasing",id:"aliasing",level:3},{value:"\u2714\ufe0f Do this",id:"\ufe0f-do-this-2",level:4},{value:"\u274c Do not do this",id:"-do-not-do-this-2",level:4},{value:"Styled-Components",id:"styled-components",level:4},{value:"style.js",id:"stylejs",level:3},{value:"\u2714\ufe0f Do this",id:"\ufe0f-do-this-3",level:4},{value:"\u274c Do not do this",id:"-do-not-do-this-3",level:4},{value:"Documentation",id:"documentation",level:4},{value:"Story",id:"story",level:2},{value:"IconButton.stories.jsx",id:"iconbuttonstoriesjsx",level:4},{value:"\u2714\ufe0f Do this",id:"\ufe0f-do-this-4",level:4},{value:"AddOn:",id:"addon",level:4},{value:"1. Controls",id:"1-controls",level:6},{value:"2. Actions",id:"2-actions",level:6},{value:"3. Accessibility",id:"3-accessibility",level:6},{value:"4. Story",id:"4-story",level:6},{value:"5. RTL support",id:"5-rtl-support",level:6},{value:"Unit Testing",id:"unit-testing",level:2},{value:"\u2714\ufe0f Do this",id:"\ufe0f-do-this-5",level:4},{value:"IconButton.test.jsx",id:"iconbuttontestjsx",level:4}],c={toc:p},u="wrapper";function d(t){let{components:e,...n}=t;return(0,a.kt)(u,(0,o.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"component-development-guide"},"Component Development Guide"),(0,a.kt)("p",null,"This document details about the React Foundation Component Development."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#prerequisites"},"Prerequisites")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#steps-to-create-a-sample-component"},"Steps to Create a Sample Component"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#component-logic"},"Component Logic"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#iconbuttonjsx"},"IconButton.jsx")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#do-this"},"Do this")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#do-not-do-this"},"Do not do this")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#styled-components"},"Styled-Components")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#documentation"},"Documentation")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#story"},"Story"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#iconbuttonstoriesjsx"},"IconButton.stories.jsx")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#do-this-1"},"Do this")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#addon-"},"AddOn:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#1-controls"},"1. Controls")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#2-actions"},"2. Actions")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#3-accessibility"},"3. Accessibility")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#4-story"},"4. Story")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#5-css-resources"},"5. CSS resources")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#6-rtl-support"},"6. RTL support")))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#unit-testing"},"Unit Testing"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#do-this-2"},"Do this")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#iconbuttontestjsx"},"IconButton.test.jsx"))))))),(0,a.kt)("h1",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"React Foundation components are built on top of Atomic Design, Storybook, MaterialUI. So be familiar with below topics.")),(0,a.kt)("h5",{id:"conventions"},"Conventions:"),(0,a.kt)("p",null,": Denotes code omitted"),(0,a.kt)("h1",{id:"steps-to-create-a-sample-component"},"Steps to Create a Sample Component"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a folder with component name say \u2018IconButton\u2019")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Add the following files"))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"#"),(0,a.kt)("th",{parentName:"tr",align:null},"File"),(0,a.kt)("th",{parentName:"tr",align:null},"Purpose"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"1"),(0,a.kt)("td",{parentName:"tr",align:null},"IconButton.jsx"),(0,a.kt)("td",{parentName:"tr",align:null},"Component Logic")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"2"),(0,a.kt)("td",{parentName:"tr",align:null},"index.js"),(0,a.kt)("td",{parentName:"tr",align:null},"Export the component")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"3"),(0,a.kt)("td",{parentName:"tr",align:null},"style.js"),(0,a.kt)("td",{parentName:"tr",align:null},"Styles of a Component")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"IconButton.stories.jsx"),(0,a.kt)("td",{parentName:"tr",align:null},"Story")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"5"),(0,a.kt)("td",{parentName:"tr",align:null},"IconButton.test.jsx"),(0,a.kt)("td",{parentName:"tr",align:null},"Unit Test")))),(0,a.kt)("h2",{id:"component-logic"},"Component Logic"),(0,a.kt)("p",null,"All the component Logic will go here"),(0,a.kt)("h4",{id:"iconbuttonjsx"},"IconButton.jsx"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\n\n/**\n- Component for Icon Button.\n- Icon buttons are commonly used in app bars and toolbars.\n*/\nfunction IconButton({\n  color,\n  size,\n  children,\n  onClick,\n}) {\n  return (\n    <MuiIconButton\n      color={color}\n      size={size}\n      onClick={onClick}\n    >\n      {children}\n    </MuiIconButton>\n  );\n}\n\n// PropType check\nIconButton.propTypes = {\n  /**\n   * Color of the component to use\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * Size of the button\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * On Click handler\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Icon element\n   */\n  children: PropTypes.node,\n :\n :\n};\n\nIconButton.defaultProps = {\n  color: 'default',\n  size: 'medium',\n  onClick: undefined,\n  children: undefined,\n :\n :\n};\n\nexport default IconButton;\n")),(0,a.kt)("h4",{id:"\ufe0f-do-this"},"\u2714\ufe0f Do this"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Add proptypes and defaultProps"),(0,a.kt)("li",{parentName:"ol"},"Create a new component when there is considerable amount of code to be written or use variant in the\nsame component")),(0,a.kt)("h4",{id:"-do-not-do-this"},"\u274c Do not do this"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Avoid using spread operator for props (\u2026props) add the props that are required for the component"),(0,a.kt)("li",{parentName:"ol"},"Avoid using in-line styles use only styled-components.")),(0,a.kt)("h3",{id:"indexjs"},"index.js"),(0,a.kt)("p",null,"index.js file provides easy entry points for components. You no need to import write the IconButton twice during import."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export { default } from './IconButton';\n")),(0,a.kt)("h4",{id:"\ufe0f-do-this-1"},"\u2714\ufe0f Do this"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import IconButton from '_atoms/IconButton';\n\n:\ncomponent code\n:\n")),(0,a.kt)("h4",{id:"-do-not-do-this-1"},"\u274c Do not do this"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"}," import IconButton from '../IconButton/IconButton';\n :\ncomponent code\n:\n")),(0,a.kt)("h3",{id:"aliasing"},"Aliasing"),(0,a.kt)("p",null,"Alias for Clean Imports. Following are the alias that are configured in this project."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"#"),(0,a.kt)("th",{parentName:"tr",align:null},"Path"),(0,a.kt)("th",{parentName:"tr",align:null},"Alias"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"1"),(0,a.kt)("td",{parentName:"tr",align:null},"./src/assets"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"_assets"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"2"),(0,a.kt)("td",{parentName:"tr",align:null},"./src/contexts"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"_contexts"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"3"),(0,a.kt)("td",{parentName:"tr",align:null},"./src/hooks"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"_hooks"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"./src/utilities"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"_utilities"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"5"),(0,a.kt)("td",{parentName:"tr",align:null},"./src/components/atoms"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"_atoms"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"6"),(0,a.kt)("td",{parentName:"tr",align:null},"./src/components/molecules"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"_molecules"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"7"),(0,a.kt)("td",{parentName:"tr",align:null},"./src/components/organisms"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"_organisms"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"7"),(0,a.kt)("td",{parentName:"tr",align:null},"./src/components/templates"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"_templates"))))),(0,a.kt)("h4",{id:"\ufe0f-do-this-2"},"\u2714\ufe0f Do this"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import IconButton from '_atoms/IconButton';\n\n:\ncomponent code\n:\n")),(0,a.kt)("h4",{id:"-do-not-do-this-2"},"\u274c Do not do this"),(0,a.kt)("p",null,"Don't use the Relative paths like '../../../' ."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"}," import IconButton from '../IconButton/IconButton';\n :\ncomponent code\n:\n")),(0,a.kt)("h4",{id:"styled-components"},"Styled-Components"),(0,a.kt)("p",null,"styled-components allows you to describe your styles with CSS in our React components.\nReference: ",(0,a.kt)("a",{parentName:"p",href:"https://styled-components.com/"},"https://styled-components.com/")),(0,a.kt)("p",null,"All the style components should be placed in the ",(0,a.kt)("inlineCode",{parentName:"p"},"style.js")," file. And import them in the component file."),(0,a.kt)("h3",{id:"stylejs"},"style.js"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import MuiCheckbox from '@material-ui/core/Checkbox';\nimport styled from 'styled-components';\n\nexport const StyledCheckbox = styled(MuiCheckbox)`\n  .MuiSvgIcon-root {\n    height: 1.25rem;\n    width: 1.25rem;\n  }\n`;\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledCheckbox } from 'style.js';\n\n/**\n * Component for Checkbox\n */\nfunction Checkbox({\n  checked,\n  value,\n  disabled,\n  onChange,\n  ariaLabel,\n  inputProps\n}) {\n  return (\n    <StyledCheckbox\n      checked={checked}\n      value={value}\n      color='primary'\n      disabled={disabled}\n      onChange={onChange}\n      size='small'\n      inputProps={{\n        ...inputProps,\n        'aria-label': ariaLabel\n      }}\n    />\n  );\n}\n")),(0,a.kt)("h4",{id:"\ufe0f-do-this-3"},"\u2714\ufe0f Do this"),(0,a.kt)("p",null,"Only Component Styles should be part of style.js"),(0,a.kt)("h4",{id:"-do-not-do-this-3"},"\u274c Do not do this"),(0,a.kt)("p",null,"Don't include Story styles in the style.js instead write styles of the Story inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"*.stories.jsx")," files."),(0,a.kt)("h4",{id:"documentation"},"Documentation"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Add JSdoc to the Component (in src/IconButton.jsx) that provides a description to be read:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"/**\n * Component for Icon Button.\n */\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"For Bullet Points Use below code \u2013 (optional )")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"/**\n- Component for Icon Button.\n- Icon buttons are commonly used in app bars and toolbars.\n*/\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Storybook Docs automatically generated the args table that shows types and default values. Add comments in your proptypes to render them in the auto-generated args table.",(0,a.kt)("img",{src:"./images/comp-dev-comments-argtable.png",width:"700px"}))),(0,a.kt)("h2",{id:"story"},"Story"),(0,a.kt)("p",null,"All the variations for a component should be added as a story."),(0,a.kt)("h4",{id:"iconbuttonstoriesjsx"},"IconButton.stories.jsx"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport IconButton from './IconButton';\nimport MaterialIcon from '../MaterialIcon/MaterialIcon';\n\nexport default {\n  title: 'Components/Atoms/IconButton',\n  component: IconButton,\n  argTypes: {\n    children: { control: { disable: true } },\n    onClick: { action: 'Icon Button clicked' }\n  }\n};\n\nexport function IconButtons(args) {\n  return (\n    <div>\n      <IconButton label='Dehaze icon button' {...args}>\n        <MaterialIcon iconName='Dehaze' />\n      </IconButton>\n      <IconButton label='Search icon button' {...args}>\n        <MaterialIcon iconName='Search' />\n      </IconButton>\n      <IconButton label='Close icon button' {...args}>\n        <MaterialIcon iconName='Close' />\n      </IconButton>\n    </div>\n  );\n}\n\nIconButtons.args = {\n  size: 'medium',\n  color: 'primary',\n  disableRipple: false,\n  disableFocusRipple: false\n};\n")),(0,a.kt)("h4",{id:"\ufe0f-do-this-4"},"\u2714\ufe0f Do this"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Each variant of a Component should have a different story")),(0,a.kt)("h4",{id:"addon"},"AddOn:"),(0,a.kt)("h6",{id:"1-controls"},"1. Controls"),(0,a.kt)("p",null,"Storybook Controls gives you a graphical UI to interact with a component's arguments dynamically, without needing to code."),(0,a.kt)("p",null,"To use the Controls addon, you need to write your stories using args."),(0,a.kt)("p",null,"Refer: ",(0,a.kt)("a",{parentName:"p",href:"https://storybook.js.org/docs/react/essentials/controls"},"https://storybook.js.org/docs/react/essentials/controls")),(0,a.kt)("p",null,"By default all the Props will be shown under the controls tab. If you want to disable any any prop based on the sepec you can disable it.\nIn the below example ",(0,a.kt)("inlineCode",{parentName:"p"},"children")," prop was disabled."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"export default {\n  title: 'Components/Atoms/IconButton',\n  component: IconButton,\n  argTypes: {\n    children: { control: { disable: true } },\n    :\n    :\n  }\n};\n")),(0,a.kt)("img",{src:"./images/controls-addon.png"}),(0,a.kt)("h6",{id:"2-actions"},"2. Actions"),(0,a.kt)("p",null,"The actions addon is used to display data received by event handler (callback) arguments in your stories.\nYou can use argTypes to tell Storybook that an arg to your story should be an action.\nRefer: ",(0,a.kt)("a",{parentName:"p",href:"https://storybook.js.org/docs/react/essentials/actions"},"https://storybook.js.org/docs/react/essentials/actions")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"export default {\n  title: 'Components/Atoms/IconButton',\n  component: IconButton,\n  argTypes: {\n    :\n    :\n    onClick: { action: 'Icon Button clicked' }\n  }\n};\n")),(0,a.kt)("img",{src:"./images/actions-addon.png"}),(0,a.kt)("h6",{id:"3-accessibility"},"3. Accessibility"),(0,a.kt)("p",null,"Test components for user accessibility in Storybook. This Adon runs on top of the Axe Accessibility Engine developed by Deque Systems (",(0,a.kt)("a",{parentName:"p",href:"https://www.deque.com/"},"https://www.deque.com/"),").\nRefer: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/storybookjs/storybook/tree/master/addons/a11y"},"https://github.com/storybookjs/storybook/tree/master/addons/a11y")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"How to use the a11y addon"),"\nThis addon displays three tabs: violations, passes, and incompletions. Axe defines \u201cincomplete\u201d as a rule state that \u201coccur(s) when Axe can tell that a rule does not definitely pass, but cannot quite tell whether it definitely fails \u2014 in this case, it will gather some information that can be presented to a human for a decision\u201d. Next to each tab is the number of rules that will be shown if the option is chosen. The default option shown is the violations tab."),(0,a.kt)("img",{src:"./images/a11y-1.png"}),(0,a.kt)("p",null,"Within the tabs, an accordion-like design is used to display each of the rules that have met the criteria. Upon clicking one of these accordion bars, information is displayed about that rule along with a link that contains in-depth information on the rule."),(0,a.kt)("img",{src:"./images/a11y-2.png"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Visualizing accessibility rules"),"\nA checkbox is located to the right side of each rule that enables you to highlight flagged DOM elements in the Storybook canvas."),(0,a.kt)("img",{src:"./images/a11y-3.png"}),(0,a.kt)("p",null,"Once you\u2019ve pinpointed accessibility violations and incompletions, you can modify your code and use hot reloading. This initiates another a11y test run."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Accessibility guidance:")),(0,a.kt)("p",null,"When you are creating content, components and pages, these should work with accessibility tools. There are Accessibility Principles that should be followed in order to assure your content, components and pages are accessibility support."),(0,a.kt)("p",null,"We should follow below combination of browser and accessibility tool."),(0,a.kt)("p",null,"Chrome/Jaws"),(0,a.kt)("p",null,"IE/Jaws"),(0,a.kt)("p",null,"Firefox/NNDA"),(0,a.kt)("p",null,"Safari/VOICEOVER"),(0,a.kt)("p",null,"To find the accessibility issues use Axe tool for chrome and Firefox."),(0,a.kt)("p",null,"To learn fundamentals of accessibility, refer URLs below: -"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.w3.org/WAI/fundamentals/"},"https://www.w3.org/WAI/fundamentals/")),(0,a.kt)("p",null,"Internal accessibility guidance for components design."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"http://ux.sumtotalsystems.com/overview"},"http://ux.sumtotalsystems.com/overview")),(0,a.kt)("h6",{id:"4-story"},"4. Story"),(0,a.kt)("p",null,"Show stories source in the addon panel\nRefer: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/storybookjs/storybook/tree/master/addons/storysource"},"https://github.com/storybookjs/storybook/tree/master/addons/storysource")),(0,a.kt)("img",{src:"./images/story-addon.png"}),(0,a.kt)("h6",{id:"5-rtl-support"},"5. RTL support"),(0,a.kt)("p",null,"We have support for RTL through 'jss-rtl' plugin for Material UI and 'stylis-plugin-rtl' plugin for styled-components.\nWe also have a toobar icon in storybook to check the RTL view of the components.\nFor all the components that we build, we recommend you to test the RTL view using this toolbar button and make any changes required for your component styles accordingly."),(0,a.kt)("img",{src:"./images/RTL-addon.png"}),(0,a.kt)("h2",{id:"unit-testing"},"Unit Testing"),(0,a.kt)("p",null,"React Testing Library and Jest is used for writing unit test cases."),(0,a.kt)("h4",{id:"\ufe0f-do-this-5"},"\u2714\ufe0f Do this"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Ensure to write test cases that covers all the scenarios"),(0,a.kt)("li",{parentName:"ol"},"Run ",(0,a.kt)("inlineCode",{parentName:"li"},"yarn test:dev")," to run the test cases, you can check the code coverage in the command line for more details you see the html report (in react-foundation\\coverage\\lcov-report\\index.html) for more details."),(0,a.kt)("li",{parentName:"ol"},"We have a utility file (src/utilities/test-utils.jsx) that re exports everything from React Testing Library along with a custom reder function. This custom render function supports the Theme availability for test runner.\nSo, we should use the methods from this utility file instead of directly importing them from the library.")),(0,a.kt)("h4",{id:"iconbuttontestjsx"},"IconButton.test.jsx"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { render, screen } from '../../../utilities/test-utils';\nimport IconButton from './IconButton';\nimport '@testing-library/jest-dom/extend-expect';\n\ndescribe('IconButton', () => {\n  it('IconButton should render with out any errors', () => {\n    render(<IconButton />);\n    expect(screen.getByRole('button')).toBeInTheDocument();\n  });\n\n  it('Small size IconButton', () => {\n    render(<IconButton size='small' />);\n    expect(screen.getByRole('button')).toHaveClass('MuiIconButton-sizeSmall');\n  });\n\n  it('Icon button should disabled', () => {\n    render(<IconButton size='small' disabled />);\n    expect(screen.getByRole('button')).toBeDisabled();\n  });\n});\n")))}d.isMDXComponent=!0}}]);