"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[36758],{80416:(n,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var i=t(85893),e=t(11151);const a={},o="Swapping",s={id:"articles/Cpp/Swapping",title:"Swapping",description:"Swapping of Two Strings Without 3rd Variable",source:"@site/docs/articles/Cpp/Swapping.md",sourceDirName:"articles/Cpp",slug:"/articles/Cpp/Swapping",permalink:"/docs/articles/Cpp/Swapping",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Random FAQ (C++)",permalink:"/docs/articles/Cpp/RandomFaq"},next:{title:"MFC",permalink:"/docs/category/mfc"}},c={},p=[{value:"Swapping of Two Strings Without 3rd Variable",id:"swapping-of-two-strings-without-3rd-variable",level:2},{value:"Swapping of numbers",id:"swapping-of-numbers",level:2}];function u(n){const r={code:"code",h1:"h1",h2:"h2",pre:"pre",...(0,e.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"swapping",children:"Swapping"}),"\n",(0,i.jsx)(r.h2,{id:"swapping-of-two-strings-without-3rd-variable",children:"Swapping of Two Strings Without 3rd Variable"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-cpp",children:'#include<iostream.h>\r\n#include<conio.h>\r\nvoid main()\r\n{\r\n  clrscr();\r\n  char* p="Hello";\r\n  char* q="World";\r\n  p=(char*) ((int)p + (int)q);\r\n  q=(char*) ((int)p - (int)q);\r\n  p=(char*) ((int)p - (int)q);\r\n  cout<<p<<" "<<q;\r\n  getch();\r\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"swapping-of-numbers",children:"Swapping of numbers"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-cpp",children:'//swapping of two numbers\r\nvoid main()\r\n{\r\n int x,y,t,s;\r\n cout<<"Enter x value";\r\n cin>>x;\r\n cout<<"Enter y value";\r\n cin>>y;\r\n t=x;\r\n x=y;\r\n y=t;\r\n cout<<"The swapping of 2 no is:";\r\n cout<<x<<" "<<y;\r\n cin>>s;\r\n}\r\n \r\n// swapping no using functions call by value\r\nvoid swap(int x,int y);//declaration\r\nvoid main()\r\n{\r\n int x,y,t,s;\r\n cout<<"Enter x value";\r\n cin>>x;\r\n cout<<"Enter y value";\r\n cin>>y;\r\n swap(x,y);\r\n cout<<"The swapping of 2 no is:";\r\n cout<<x<<" "<<y;\r\n cin>>s;\r\n}\r\nvoid swap(int x,int y)\r\n{\r\n int t;\r\n           t=x;\r\n x=y;\r\n y=t;\r\n}\r\n// swapping no using functions call by Reference(Alias  name )\r\nvoid swap(int &x,int &y);//declaration\r\nvoid main()\r\n{\r\n int x,y,t,s;\r\n cout<<"Enter x value";\r\n cin>>x;\r\n cout<<"Enter y value";\r\n cin>>y;\r\n swap(x,y);\r\n cout<<"The swapping of 2 no is:";\r\n cout<<x<<" "<<y;\r\n cin>>s;\r\n}\r\nvoid swap(int &x,int &y)\r\n{\r\n int t;\r\n  t=x;\r\n x=y;\r\n y=t;\r\n}\r\n// swapping no using functions call by pointer\r\nvoid swap(int *x,int *y);//declaration\r\nvoid main()\r\n{\r\n int x,y,t,s;\r\n cout<<"Enter x value";\r\n cin>>x;\r\n cout<<"Enter y value";\r\n cin>>y;\r\n swap(&x,&y);\r\n cout<<"The swapping of 2 no is:";\r\n cout<<x<<" "<<y;\r\n cin>>s;\r\n}\r\nvoid swap(int *x,int *y)\r\n{\r\n int t;\r\n  t=*x;\r\n *x=*y;\r\n *y=t;\r\n}\n'})})]})}function l(n={}){const{wrapper:r}={...(0,e.a)(),...n.components};return r?(0,i.jsx)(r,{...n,children:(0,i.jsx)(u,{...n})}):u(n)}},11151:(n,r,t)=>{t.d(r,{Z:()=>s,a:()=>o});var i=t(67294);const e={},a=i.createContext(e);function o(n){const r=i.useContext(a);return i.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function s(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(e):n.components||e:o(n.components),i.createElement(a.Provider,{value:r},n.children)}}}]);