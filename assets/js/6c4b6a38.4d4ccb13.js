"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["81364"],{92220:function(n,r,t){t.r(r),t.d(r,{frontMatter:()=>o,default:()=>u,toc:()=>c,metadata:()=>i,assets:()=>s,contentTitle:()=>p});var i=JSON.parse('{"id":"Cpp/Swapping","title":"Swapping","description":"Swapping of Two Strings Without 3rd Variable","source":"@site/docs/Cpp/Swapping.md","sourceDirName":"Cpp","slug":"/Cpp/Swapping","permalink":"/docs/Cpp/Swapping","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"Cpp","previous":{"title":"Operator Overloading Date Class","permalink":"/docs/Cpp/OperatorOverloadingDateClass"}}'),e=t(85893),a=t(50065);let o={},p="Swapping",s={},c=[{value:"Swapping of Two Strings Without 3rd Variable",id:"swapping-of-two-strings-without-3rd-variable",level:2},{value:"Swapping of numbers",id:"swapping-of-numbers",level:2}];function l(n){let r={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,a.a)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(r.header,{children:(0,e.jsx)(r.h1,{id:"swapping",children:"Swapping"})}),"\n",(0,e.jsx)(r.h2,{id:"swapping-of-two-strings-without-3rd-variable",children:"Swapping of Two Strings Without 3rd Variable"}),"\n",(0,e.jsx)(r.pre,{children:(0,e.jsx)(r.code,{className:"language-cpp",children:'#include<iostream.h>\r\n#include<conio.h>\r\nvoid main()\r\n{\r\n  clrscr();\r\n  char* p="Hello";\r\n  char* q="World";\r\n  p=(char*) ((int)p + (int)q);\r\n  q=(char*) ((int)p - (int)q);\r\n  p=(char*) ((int)p - (int)q);\r\n  cout<<p<<" "<<q;\r\n  getch();\r\n}\n'})}),"\n",(0,e.jsx)(r.h2,{id:"swapping-of-numbers",children:"Swapping of numbers"}),"\n",(0,e.jsx)(r.pre,{children:(0,e.jsx)(r.code,{className:"language-cpp",children:'//swapping of two numbers\r\nvoid main()\r\n{\r\n int x,y,t,s;\r\n cout<<"Enter x value";\r\n cin>>x;\r\n cout<<"Enter y value";\r\n cin>>y;\r\n t=x;\r\n x=y;\r\n y=t;\r\n cout<<"The swapping of 2 no is:";\r\n cout<<x<<" "<<y;\r\n cin>>s;\r\n}\r\n \r\n// swapping no using functions call by value\r\nvoid swap(int x,int y);//declaration\r\nvoid main()\r\n{\r\n int x,y,t,s;\r\n cout<<"Enter x value";\r\n cin>>x;\r\n cout<<"Enter y value";\r\n cin>>y;\r\n swap(x,y);\r\n cout<<"The swapping of 2 no is:";\r\n cout<<x<<" "<<y;\r\n cin>>s;\r\n}\r\nvoid swap(int x,int y)\r\n{\r\n int t;\r\n           t=x;\r\n x=y;\r\n y=t;\r\n}\r\n// swapping no using functions call by Reference(Alias  name )\r\nvoid swap(int &x,int &y);//declaration\r\nvoid main()\r\n{\r\n int x,y,t,s;\r\n cout<<"Enter x value";\r\n cin>>x;\r\n cout<<"Enter y value";\r\n cin>>y;\r\n swap(x,y);\r\n cout<<"The swapping of 2 no is:";\r\n cout<<x<<" "<<y;\r\n cin>>s;\r\n}\r\nvoid swap(int &x,int &y)\r\n{\r\n int t;\r\n  t=x;\r\n x=y;\r\n y=t;\r\n}\r\n// swapping no using functions call by pointer\r\nvoid swap(int *x,int *y);//declaration\r\nvoid main()\r\n{\r\n int x,y,t,s;\r\n cout<<"Enter x value";\r\n cin>>x;\r\n cout<<"Enter y value";\r\n cin>>y;\r\n swap(&x,&y);\r\n cout<<"The swapping of 2 no is:";\r\n cout<<x<<" "<<y;\r\n cin>>s;\r\n}\r\nvoid swap(int *x,int *y)\r\n{\r\n int t;\r\n  t=*x;\r\n *x=*y;\r\n *y=t;\r\n}\n'})})]})}function u(n={}){let{wrapper:r}={...(0,a.a)(),...n.components};return r?(0,e.jsx)(r,{...n,children:(0,e.jsx)(l,{...n})}):l(n)}},50065:function(n,r,t){t.d(r,{Z:()=>p,a:()=>o});var i=t(67294);let e={},a=i.createContext(e);function o(n){let r=i.useContext(a);return i.useMemo(function(){return"function"==typeof n?n(r):{...r,...n}},[r,n])}function p(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(e):n.components||e:o(n.components),i.createElement(a.Provider,{value:r},n.children)}}}]);