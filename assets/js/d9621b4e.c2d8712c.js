"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[12485],{44219:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var o=e(85893),r=e(11151);const i={tags:["COM"]},c="COM Containment and Aggregation",a={permalink:"/blog/2012/06/17/com-containment-and-aggregation",source:"@site/blog/2012-06-17-com-containment-and-aggregation.md",title:"COM Containment and Aggregation",description:"Containment and aggregation are techniques in which one component uses another component. Those two components are outer component, inner component. Outer component contains the inner component.",date:"2012-06-17T00:00:00.000Z",formattedDate:"June 17, 2012",tags:[{label:"COM",permalink:"/blog/tags/com"}],readingTime:.535,hasTruncateMarker:!1,authors:[],frontMatter:{tags:["COM"]},unlisted:!1,prevItem:{title:"Unit Testing Native C++ App with out clr",permalink:"/blog/2012/06/18/unit-testing-nativE-C++"},nextItem:{title:"N-Tier Architecture",permalink:"/blog/2012/06/07/n-tier-architecture "}},s={authorsImageUrls:[]},l=[];function p(n){const t={p:"p",...(0,r.a)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Containment and aggregation are techniques in which one component uses another component. Those two components are outer component, inner component. Outer component contains the inner component."}),"\n",(0,o.jsx)("table",{border:"1",cellspacing:"0",cellpadding:"0",children:(0,o.jsxs)("tbody",{children:[(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{valign:"top",width:"343",children:(0,o.jsx)("strong",{children:"Containment"})}),(0,o.jsx)("td",{valign:"top",width:"343",children:(0,o.jsx)("strong",{children:"Aggregation"})})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{valign:"top",width:"343",children:"Outer component re implement the interface say IY of inner component by forwarding calls to the inner component."}),(0,o.jsx)("td",{valign:"top",width:"343",children:"Outer component will not re implement the interface say IY of inner component. Instead the outer component passes the inner component interface pointer say IY directly to the client."})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{valign:"top",width:"343",children:"Outer component is client to inner component"}),(0,o.jsx)("td",{valign:"top",width:"343",children:"Inner component will be directly used by the client"})]})]})})]})}function m(n={}){const{wrapper:t}={...(0,r.a)(),...n.components};return t?(0,o.jsx)(t,{...n,children:(0,o.jsx)(p,{...n})}):p(n)}},11151:(n,t,e)=>{e.d(t,{Z:()=>a,a:()=>c});var o=e(67294);const r={},i=o.createContext(r);function c(n){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function a(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:c(n.components),o.createElement(i.Provider,{value:t},n.children)}}}]);