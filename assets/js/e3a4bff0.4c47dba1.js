"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["94970"],{7961:function(n,r,e){e.r(r),e.d(r,{frontMatter:()=>t,default:()=>p,toc:()=>d,metadata:()=>o,assets:()=>s,contentTitle:()=>a});var o=JSON.parse('{"id":"Languages/Loops","title":"Loops","description":"Definition of Loops:","source":"@site/docs/Languages/Loops.md","sourceDirName":"Languages","slug":"/Languages/Loops","permalink":"/docs/Languages/Loops","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Conditional Statements","permalink":"/docs/Languages/ConditionalStatements"},"next":{"title":"Arrays","permalink":"/docs/Languages/Arrays"}}'),i=e(85893),l=e(50065);let t={sidebar_position:7},a="Loops",s={},d=[{value:"<strong>Definition of Loops:</strong>",id:"definition-of-loops",level:2},{value:"<strong>C++</strong>",id:"c",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Example",id:"example",level:3},{value:"<strong>C#</strong>",id:"c-1",level:2},{value:"Syntax",id:"syntax-1",level:3},{value:"Example",id:"example-1",level:3},{value:"<strong>Java</strong>",id:"java",level:2},{value:"Syntax",id:"syntax-2",level:3},{value:"Example",id:"example-2",level:3},{value:"<strong>Python</strong>",id:"python",level:2},{value:"Syntax",id:"syntax-3",level:3},{value:"Example",id:"example-3",level:3},{value:"<strong>JavaScript</strong>",id:"javascript",level:2},{value:"Syntax",id:"syntax-4",level:3},{value:"Example",id:"example-4",level:3},{value:"<strong>TypeScript</strong>",id:"typescript",level:2},{value:"Syntax",id:"syntax-5",level:3},{value:"Example",id:"example-5",level:3}];function c(n){let r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"loops",children:"Loops"})}),"\n",(0,i.jsx)(r.h2,{id:"definition-of-loops",children:(0,i.jsx)(r.strong,{children:"Definition of Loops:"})}),"\n",(0,i.jsxs)(r.p,{children:["A ",(0,i.jsx)(r.strong,{children:"loop"})," lets you repeat a block of code multiple times. It's useful when you want to perform an action again and again, like going through a list or counting numbers. You can also ",(0,i.jsx)(r.strong,{children:"skip"})," or ",(0,i.jsx)(r.strong,{children:"stop"})," a loop using ",(0,i.jsx)(r.code,{children:"continue"})," and ",(0,i.jsx)(r.code,{children:"break"}),"."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"c",children:(0,i.jsx)(r.strong,{children:"C++"})}),"\n",(0,i.jsx)(r.h3,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-cpp",children:"// For loop\r\nfor (initialization; condition; update) {\r\n    // body\r\n}\r\n\r\n// Range-based For (C++11+)\r\nfor (dataType var : container) {\r\n    // body\r\n}\r\n\r\n// While loop\r\nwhile (condition) {\r\n    // body\r\n}\r\n\r\n// Do-While loop\r\ndo {\r\n    // body\r\n} while (condition);\r\n\r\n// Break and Continue inside loops\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-cpp",children:'#include <iostream>\r\n#include <string>\r\n\r\nint main() {\r\n    // For loop\r\n    for (int i = 0; i < 5; i++) {\r\n        std::cout << i << std::endl;\r\n    }\r\n\r\n    // Range-based for loop\r\n    std::string names[] = { "Alice", "Bob" };\r\n    for (const std::string& name : names) {\r\n        std::cout << name << std::endl;\r\n    }\r\n\r\n    // While loop\r\n    int i = 0;\r\n    while (i < 3) {\r\n        std::cout << i << std::endl;\r\n        i++;\r\n    }\r\n\r\n    // Do-While loop\r\n    int j = 0;\r\n    do {\r\n        std::cout << j << std::endl;\r\n        j++;\r\n    } while (j < 3);\r\n\r\n    // Break and Continue\r\n    for (int k = 0; k < 5; k++) {\r\n        if (k == 2) continue;\r\n        if (k == 4) break;\r\n        std::cout << k << std::endl;\r\n    }\r\n\r\n    return 0;\r\n}\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"c-1",children:(0,i.jsx)(r.strong,{children:"C#"})}),"\n",(0,i.jsx)(r.h3,{id:"syntax-1",children:"Syntax"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"// For loop\r\nfor (initialization; condition; update) {\r\n    // body\r\n}\r\n\r\n// Foreach loop\r\nforeach (var item in collection) {\r\n    // body\r\n}\r\n\r\n// While loop\r\nwhile (condition) {\r\n    // body\r\n}\r\n\r\n// Do-While loop\r\ndo {\r\n    // body\r\n} while (condition);\r\n\r\n// Break and Continue\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:'// For loop\r\nfor (int i = 0; i < 5; i++) {\r\n    Console.WriteLine(i);\r\n}\r\n\r\n// Foreach loop\r\nstring[] names = { "Alice", "Bob" };\r\nforeach (string name in names) {\r\n    Console.WriteLine(name);\r\n}\r\n\r\n// While loop\r\nint i = 0;\r\nwhile (i < 3) {\r\n    Console.WriteLine(i);\r\n    i++;\r\n}\r\n\r\n// Do-While loop\r\nint j = 0;\r\ndo {\r\n    Console.WriteLine(j);\r\n    j++;\r\n} while (j < 3);\r\n\r\n// Break and Continue\r\nfor (int k = 0; k < 5; k++) {\r\n    if (k == 2) continue;\r\n    if (k == 4) break;\r\n    Console.WriteLine(k);\r\n}\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"java",children:(0,i.jsx)(r.strong,{children:"Java"})}),"\n",(0,i.jsx)(r.h3,{id:"syntax-2",children:"Syntax"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-java",children:"// For loop\r\nfor (initialization; condition; update) {\r\n    // body\r\n}\r\n\r\n// Enhanced For loop\r\nfor (type item : arrayOrList) {\r\n    // body\r\n}\r\n\r\n// While loop\r\nwhile (condition) {\r\n    // body\r\n}\r\n\r\n// Do-While loop\r\ndo {\r\n    // body\r\n} while (condition);\r\n\r\n// Break and Continue\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"example-2",children:"Example"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-java",children:'// For loop\r\nfor (int i = 0; i < 5; i++) {\r\n    System.out.println(i);\r\n}\r\n\r\n// For-each loop\r\nString[] names = {"Alice", "Bob"};\r\nfor (String name : names) {\r\n    System.out.println(name);\r\n}\r\n\r\n// While loop\r\nint i = 0;\r\nwhile (i < 3) {\r\n    System.out.println(i);\r\n    i++;\r\n}\r\n\r\n// Do-While loop\r\nint j = 0;\r\ndo {\r\n    System.out.println(j);\r\n    j++;\r\n} while (j < 3);\r\n\r\n// Break and Continue\r\nfor (int k = 0; k < 5; k++) {\r\n    if (k == 2) continue;\r\n    if (k == 4) break;\r\n    System.out.println(k);\r\n}\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"python",children:(0,i.jsx)(r.strong,{children:"Python"})}),"\n",(0,i.jsx)(r.h3,{id:"syntax-3",children:"Syntax"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:"# For loop\r\nfor item in iterable:\r\n    # body\r\n\r\n# While loop\r\nwhile condition:\r\n    # body\r\n\r\n# Simulated Do-While loop\r\nwhile True:\r\n    # body\r\n    if condition: break\r\n\r\n# Break and Continue\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"example-3",children:"Example"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'# For loop\r\nfor i in range(5):\r\n    print(i)\r\n\r\n# For-each loop\r\nnames = ["Alice", "Bob"]\r\nfor name in names:\r\n    print(name)\r\n\r\n# While loop\r\ni = 0\r\nwhile i < 3:\r\n    print(i)\r\n    i += 1\r\n\r\n# Simulated Do-While\r\nj = 0\r\nwhile True:\r\n    print(j)\r\n    j += 1\r\n    if j >= 3:\r\n        break\r\n\r\n# Break and Continue\r\nfor k in range(5):\r\n    if k == 2:\r\n        continue\r\n    if k == 4:\r\n        break\r\n    print(k)\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"javascript",children:(0,i.jsx)(r.strong,{children:"JavaScript"})}),"\n",(0,i.jsx)(r.h3,{id:"syntax-4",children:"Syntax"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// For loop\r\nfor (let i = 0; i < limit; i++) {\r\n    // body\r\n}\r\n\r\n// For-of loop\r\nfor (let item of iterable) {\r\n    // body\r\n}\r\n\r\n// For-in loop (for objects)\r\nfor (let key in object) {\r\n    // body\r\n}\r\n\r\n// While loop\r\nwhile (condition) {\r\n    // body\r\n}\r\n\r\n// Do-While loop\r\ndo {\r\n    // body\r\n} while (condition);\r\n\r\n// Break and Continue\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"example-4",children:"Example"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:'// For loop\r\nfor (let i = 0; i < 5; i++) {\r\n    console.log(i);\r\n}\r\n\r\n// For-of loop\r\nlet names = ["Alice", "Bob"];\r\nfor (let name of names) {\r\n    console.log(name);\r\n}\r\n\r\n// For-in loop\r\nlet person = {name: "Alice", age: 25};\r\nfor (let key in person) {\r\n    console.log(key + ": " + person[key]);\r\n}\r\n\r\n// While loop\r\nlet i = 0;\r\nwhile (i < 3) {\r\n    console.log(i);\r\n    i++;\r\n}\r\n\r\n// Do-While loop\r\nlet j = 0;\r\ndo {\r\n    console.log(j);\r\n    j++;\r\n} while (j < 3);\r\n\r\n// Break and Continue\r\nfor (let k = 0; k < 5; k++) {\r\n    if (k === 2) continue;\r\n    if (k === 4) break;\r\n    console.log(k);\r\n}\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"typescript",children:(0,i.jsx)(r.strong,{children:"TypeScript"})}),"\n",(0,i.jsx)(r.h3,{id:"syntax-5",children:"Syntax"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-typescript",children:"// For loop\r\nfor (let i: number = 0; i < 5; i++) {\r\n    // body\r\n}\r\n\r\n// For-of loop\r\nfor (let item of array) {\r\n    // body\r\n}\r\n\r\n// While loop\r\nwhile (condition) {\r\n    // body\r\n}\r\n\r\n// Do-While loop\r\ndo {\r\n    // body\r\n} while (condition);\r\n\r\n// Break and Continue\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"example-5",children:"Example"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-typescript",children:'// For loop\r\nfor (let i = 0; i < 5; i++) {\r\n    console.log(i);\r\n}\r\n\r\n// For-of loop\r\nlet names: string[] = ["Alice", "Bob"];\r\nfor (let name of names) {\r\n    console.log(name);\r\n}\r\n\r\n// While loop\r\nlet i: number = 0;\r\nwhile (i < 3) {\r\n    console.log(i);\r\n    i++;\r\n}\r\n\r\n// Do-While loop\r\nlet j: number = 0;\r\ndo {\r\n    console.log(j);\r\n    j++;\r\n} while (j < 3);\r\n\r\n// Break and Continue\r\nfor (let k = 0; k < 5; k++) {\r\n    if (k === 2) continue;\r\n    if (k === 4) break;\r\n    console.log(k);\r\n}\n'})}),"\n",(0,i.jsx)(r.hr,{})]})}function p(n={}){let{wrapper:r}={...(0,l.a)(),...n.components};return r?(0,i.jsx)(r,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},50065:function(n,r,e){e.d(r,{Z:()=>a,a:()=>t});var o=e(67294);let i={},l=o.createContext(i);function t(n){let r=o.useContext(l);return o.useMemo(function(){return"function"==typeof n?n(r):{...r,...n}},[r,n])}function a(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:t(n.components),o.createElement(l.Provider,{value:r},n.children)}}}]);