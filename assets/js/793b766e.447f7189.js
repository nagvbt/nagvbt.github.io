"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["65481"],{30732:function(n,e,t){t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var r=t(18138),a=t(85893),i=t(50065);let o={tags:["MFC"]},s="How to create a minimal MFC Window ?",l={authorsImageUrls:[]},c=[];function d(n){let e={code:"code",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"We need at least two classes derived to construct an window"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"Window class / Frame class (CMainFrame) which is derived from CFrameWnd"}),"\n",(0,a.jsx)(e.li,{children:"Application class (CMyApp) which is derived from CWinApp"}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:'#include <afxwin.h>;\r\n\r\nclass CMainFrame : public CFrameWnd\r\n{\r\npublic:\r\n    CMainFrame()\r\n    {\r\n        Create(NULL, "HELLO MFC");\r\n    }\r\nprotected:\r\n    afx_msg void OnPaint()\r\n    {\r\n     CPaintDC dc(this);\r\n     dc.TextOut(100, 100, "This is the my MFC window");\r\n    }\r\n\r\n    afx_msg void OnLButtonDown(UINT nFlags, CPoint point)\r\n    {\r\n        AfxMessageBox("Mouse OnLButtonDown !!");\r\n        CFrameWnd::OnLButtonDown(nFlags, point);\r\n    }\r\n    // Declare the Message Map\r\n    DECLARE_MESSAGE_MAP()\r\n};\r\n\r\n// Define the Message Map out side the class Definition\r\nBEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)\r\n    ON_WM_PAINT()       // Paint Message\r\n    ON_WM_LBUTTONDOWN() // Mouse LButton down message\r\nEND_MESSAGE_MAP()\r\n\r\nclass CMyApp : public CWinApp\r\n{\r\npublic:\r\n    virtual BOOL InitInstance()\r\n    {\r\n        m_pMainWnd = new CMainFrame();\r\n        m_pMainWnd-&gt;ShowWindow(SW_SHOWNORMAL);\r\n        m_pMainWnd-&gt;UpdateWindow();\r\n        return TRUE;\r\n    }\r\n};\r\n\r\n// The one and only Application Object\r\nCMyApp theApp;\n'})})]})}function p(n={}){let{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},50065:function(n,e,t){t.d(e,{Z:()=>s,a:()=>o});var r=t(67294);let a={},i=r.createContext(a);function o(n){let e=r.useContext(i);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),r.createElement(i.Provider,{value:e},n.children)}},18138:function(n){n.exports=JSON.parse('{"permalink":"/blog/2012/03/16/how-to-create-a-minimal-mfc-window","source":"@site/blog/2012-03-16-how-to-create-a-minimal-mfc-window.md","title":"How to create a minimal MFC Window ?","description":"We need at least two classes derived to construct an window","date":"2012-03-16T00:00:00.000Z","tags":[{"inline":true,"label":"MFC","permalink":"/blog/tags/mfc"}],"readingTime":0.64,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["MFC"]},"unlisted":false,"prevItem":{"title":"Centering an Application Frame Window to desktop","permalink":"/blog/2012/03/16/centering-an-application-frame-window-to-desktop"},"nextItem":{"title":"Remove MAXIMIZE BOX and MINIMIZE BOX from an MFC Window","permalink":"/blog/2012/03/16/remove-maximize-box-and-minimize-box"}}')}}]);