"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["71485"],{81118:function(n,e,t){t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var s=t(20585),i=t(85893),r=t(50065);let l={tags:["React","Front End"],authors:["mrnbt"]},o="Static Code Analysis in a React App",a={authorsImageUrls:[void 0]},c=[{value:"<strong>Introduction</strong>",id:"introduction",level:2},{value:"<strong>1\uFE0F\u20E3 Installing Required Packages</strong>",id:"1\uFE0F\u20E3-installing-required-packages",level:2},{value:"<strong>Why these tools?</strong>",id:"why-these-tools",level:3},{value:"<strong>2\uFE0F\u20E3 Configuring ESLint</strong>",id:"2\uFE0F\u20E3-configuring-eslint",level:2},{value:"<strong>Why ESLint?</strong>",id:"why-eslint",level:3},{value:"<strong>3\uFE0F\u20E3 Configuring Prettier</strong>",id:"3\uFE0F\u20E3-configuring-prettier",level:2},{value:"<strong>Why Prettier?</strong>",id:"why-prettier",level:3},{value:"<strong>4\uFE0F\u20E3 Configuring Stylelint</strong>",id:"4\uFE0F\u20E3-configuring-stylelint",level:2},{value:"<strong>Why Stylelint?</strong>",id:"why-stylelint",level:3},{value:"<strong>5\uFE0F\u20E3 Setting Up Husky &amp; Lint-Staged</strong>",id:"5\uFE0F\u20E3-setting-up-husky--lint-staged",level:2},{value:"<strong>Installing Husky</strong>",id:"installing-husky",level:3},{value:"<strong>Enable Pre-Commit Hook</strong>",id:"enable-pre-commit-hook",level:3},{value:"<strong>Why Husky &amp; Lint-Staged?</strong>",id:"why-husky--lint-staged",level:3},{value:"<strong>6\uFE0F\u20E3 Running Linters Manually</strong>",id:"6\uFE0F\u20E3-running-linters-manually",level:2},{value:"<strong>Conclusion</strong>",id:"conclusion",level:2}];function d(n){let e={br:"br",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"introduction",children:(0,i.jsx)(e.strong,{children:"Introduction"})}),"\n",(0,i.jsxs)(e.p,{children:["Code quality is crucial in modern web development, ensuring that projects remain maintainable,\r\nreadable, and free from potential issues. In this guide, we will set up ",(0,i.jsx)(e.strong,{children:"static code analysis"}),"\r\nin a ",(0,i.jsx)(e.strong,{children:"React"})," project using ",(0,i.jsx)(e.strong,{children:"Yarn"}),", integrating the following tools:"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Husky"})," \u2192 Manages Git hooks to enforce linting before commits."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Lint-staged"})," \u2192 Runs linters only on staged files for efficiency."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"ESLint"})," \u2192 Lints JavaScript/TypeScript code for better quality."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Prettier"})," \u2192 Formats code automatically for consistency."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Stylelint"})," \u2192 Lints and fixes CSS/SCSS code."]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Let's dive into the step-by-step setup."}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"1\uFE0F\u20E3-installing-required-packages",children:(0,i.jsx)(e.strong,{children:"1\uFE0F\u20E3 Installing Required Packages"})}),"\n",(0,i.jsx)(e.p,{children:"Run the following command to install all necessary dependencies as dev dependencies:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sh",children:"yarn add -D husky lint-staged eslint prettier stylelint eslint-config-prettier eslint-plugin-prettier\r\neslint-plugin-react stylelint-config-standard\n"})}),"\n",(0,i.jsx)(e.h3,{id:"why-these-tools",children:(0,i.jsx)(e.strong,{children:"Why these tools?"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"ESLint"}),": Ensures consistent JavaScript/TypeScript code by enforcing best practices and detecting\r\npotential issues."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Prettier"}),": Automatically formats code to maintain a uniform style."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Stylelint"}),": Lints and fixes CSS/SCSS styles."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Husky"}),": Hooks into Git workflows to run linters before committing changes."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Lint-staged"}),": Runs linters only on staged files to improve efficiency."]}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"2\uFE0F\u20E3-configuring-eslint",children:(0,i.jsx)(e.strong,{children:"2\uFE0F\u20E3 Configuring ESLint"})}),"\n",(0,i.jsxs)(e.p,{children:["To configure ",(0,i.jsx)(e.strong,{children:"ESLint"}),", create a file named ",(0,i.jsx)(e.code,{children:".eslintrc.json"})," in the root directory and add the following\r\ncontent:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:'{\r\n  "extends": ["react-app", "prettier"],\r\n  "plugins": ["prettier"],\r\n  "rules": {\r\n    "prettier/prettier": "error"\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"why-eslint",children:(0,i.jsx)(e.strong,{children:"Why ESLint?"})}),"\n",(0,i.jsxs)(e.p,{children:["\u2705 Catches syntax errors early.",(0,i.jsx)(e.br,{}),"\n","\u2705 Helps maintain a consistent coding style.",(0,i.jsx)(e.br,{}),"\n","\u2705 Enforces best practices in JavaScript and React development."]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"3\uFE0F\u20E3-configuring-prettier",children:(0,i.jsx)(e.strong,{children:"3\uFE0F\u20E3 Configuring Prettier"})}),"\n",(0,i.jsxs)(e.p,{children:["To ensure consistent code formatting, create a ",(0,i.jsx)(e.code,{children:".prettierrc.json"})," file:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:'{\r\n  "semi": true,\r\n  "singleQuote": true,\r\n  "tabWidth": 2,\r\n  "trailingComma": "es5"\r\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"why-prettier",children:(0,i.jsx)(e.strong,{children:"Why Prettier?"})}),"\n",(0,i.jsxs)(e.p,{children:["\u2705 Automatically formats code on save.",(0,i.jsx)(e.br,{}),"\n","\u2705 Eliminates debates over code style.",(0,i.jsx)(e.br,{}),"\n","\u2705 Works seamlessly with ESLint."]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"4\uFE0F\u20E3-configuring-stylelint",children:(0,i.jsx)(e.strong,{children:"4\uFE0F\u20E3 Configuring Stylelint"})}),"\n",(0,i.jsxs)(e.p,{children:["To enforce CSS/SCSS best practices, create a ",(0,i.jsx)(e.code,{children:".stylelintrc.json"})," file:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:'{\r\n  "extends": "stylelint-config-standard",\r\n  "rules": {\r\n    "indentation": 2,\r\n    "string-quotes": "double"\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"why-stylelint",children:(0,i.jsx)(e.strong,{children:"Why Stylelint?"})}),"\n",(0,i.jsxs)(e.p,{children:["\u2705 Ensures consistent styling rules.",(0,i.jsx)(e.br,{}),"\n","\u2705 Detects and fixes errors in CSS/SCSS.",(0,i.jsx)(e.br,{}),"\n","\u2705 Avoids potential styling issues in projects."]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"5\uFE0F\u20E3-setting-up-husky--lint-staged",children:(0,i.jsx)(e.strong,{children:"5\uFE0F\u20E3 Setting Up Husky & Lint-Staged"})}),"\n",(0,i.jsx)(e.h3,{id:"installing-husky",children:(0,i.jsx)(e.strong,{children:"Installing Husky"})}),"\n",(0,i.jsx)(e.p,{children:"Initialize Husky:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sh",children:"yarn husky install\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Modify your ",(0,i.jsx)(e.code,{children:"package.json"})," to include Husky and lint-staged:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:'"husky": {\r\n  "hooks": {\r\n    "pre-commit": "lint-staged"\r\n  }\r\n},\r\n"lint-staged": {\r\n  "src/**/*.{js,jsx,ts,tsx}": [\r\n    "eslint --fix",\r\n    "prettier --write"\r\n  ],\r\n  "src/**/*.{css,scss}": [\r\n    "stylelint --fix",\r\n    "prettier --write"\r\n  ]\r\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"enable-pre-commit-hook",children:(0,i.jsx)(e.strong,{children:"Enable Pre-Commit Hook"})}),"\n",(0,i.jsx)(e.p,{children:"Run the following command to enable Husky\u2019s pre-commit hook:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sh",children:'yarn husky add .husky/pre-commit "yarn lint-staged"\n'})}),"\n",(0,i.jsx)(e.h3,{id:"why-husky--lint-staged",children:(0,i.jsx)(e.strong,{children:"Why Husky & Lint-Staged?"})}),"\n",(0,i.jsxs)(e.p,{children:["\u2705 Prevents committing bad code.",(0,i.jsx)(e.br,{}),"\n","\u2705 Runs linters only on changed files (performance-friendly).",(0,i.jsx)(e.br,{}),"\n","\u2705 Ensures consistent formatting and linting before every commit."]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"6\uFE0F\u20E3-running-linters-manually",children:(0,i.jsx)(e.strong,{children:"6\uFE0F\u20E3 Running Linters Manually"})}),"\n",(0,i.jsx)(e.p,{children:"To check code quality manually, run:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sh",children:"yarn lint       # Runs ESLint\r\nyarn format     # Runs Prettier\r\nyarn stylelint  # Runs Stylelint\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"conclusion",children:(0,i.jsx)(e.strong,{children:"Conclusion"})}),"\n",(0,i.jsxs)(e.p,{children:["By following these steps, we have successfully set up ",(0,i.jsx)(e.strong,{children:"Husky, lint-staged, ESLint, Prettier, and Stylelint"}),"\r\nin a ",(0,i.jsx)(e.strong,{children:"React project"})," using ",(0,i.jsx)(e.strong,{children:"Yarn"}),". This setup ensures:"]}),"\n",(0,i.jsxs)(e.p,{children:["\u2714 ",(0,i.jsx)(e.strong,{children:"Better code quality"}),(0,i.jsx)(e.br,{}),"\n","\u2714 ",(0,i.jsx)(e.strong,{children:"Automatic formatting"}),(0,i.jsx)(e.br,{}),"\n","\u2714 ",(0,i.jsx)(e.strong,{children:"Enforced best practices"}),(0,i.jsx)(e.br,{}),"\n","\u2714 ",(0,i.jsx)(e.strong,{children:"Prevention of bad code commits"})]}),"\n",(0,i.jsx)(e.p,{children:"With this configuration in place, your React project will maintain high coding standards, making it\r\nmore maintainable and scalable! \uD83D\uDE80"})]})}function g(n={}){let{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},50065:function(n,e,t){t.d(e,{Z:()=>o,a:()=>l});var s=t(67294);let i={},r=s.createContext(i);function l(n){let e=s.useContext(r);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),s.createElement(r.Provider,{value:e},n.children)}},20585:function(n){n.exports=JSON.parse('{"permalink":"/blog/2025/04/02/react-static-code-analysis","source":"@site/blog/2025-04-02-react-static-code-analysis.md","title":"Static Code Analysis in a React App","description":"Introduction","date":"2025-04-02T00:00:00.000Z","tags":[{"inline":true,"label":"React","permalink":"/blog/tags/react"},{"inline":true,"label":"Front End","permalink":"/blog/tags/front-end"}],"readingTime":2.45,"hasTruncateMarker":true,"authors":[{"name":"NBT","title":"Sr. Software Architect","url":"http://mrnbt.in","page":{"permalink":"/blog/authors/mrnbt"},"socials":{"x":"https://x.com/mr_nbt7","linkedin":"https://www.linkedin.com/in/nbt7/","github":"https://github.com/mrnbt7"},"imageURL":"/img/logo.png","key":"mrnbt"}],"frontMatter":{"tags":["React","Front End"],"authors":["mrnbt"]},"unlisted":false,"prevItem":{"title":"Setting Up a Modern React Project with Linting, Formatting, Styling and Spell Checking","permalink":"/blog/2025/04/03/setup-static-code"},"nextItem":{"title":"A Divine Journey to Tirupati and Tirumala","permalink":"/blog/2025/03/26/TirumalaTrip"}}')}}]);