"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["3250"],{36761:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>i,default:()=>h,toc:()=>c,metadata:()=>r,assets:()=>a,contentTitle:()=>t});var r=JSON.parse('{"id":"Languages/VariablesDataTypes","title":"Variables and Data Types","description":"Table of Contents","source":"@site/docs/Languages/VariablesDataTypes.md","sourceDirName":"Languages","slug":"/Languages/VariablesDataTypes","permalink":"/docs/Languages/VariablesDataTypes","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Basics","permalink":"/docs/Languages/Basics"},"next":{"title":"Type Casting","permalink":"/docs/Languages/TypeCasting"}}'),l=s(85893),d=s(50065);let i={sidebar_position:3},t="Variables and Data Types",a={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"<strong>Variables</strong>",id:"variables",level:2},{value:"<strong>Definition :</strong>",id:"definition-",level:3},{value:"<strong>C++</strong>",id:"c",level:2},{value:"Syntax",id:"syntax",level:3},{value:"<strong>Common data types:</strong> <code>int</code>, <code>string</code> (from <code>&lt;string&gt;</code>), <code>double</code>, <code>bool</code>, <code>char</code>",id:"common-data-types-int-string-from-string-double-bool-char",level:3},{value:"Example",id:"example",level:3},{value:"<strong>C#</strong>",id:"c-1",level:2},{value:"Syntax",id:"syntax-1",level:3},{value:"<strong>Common data types:</strong> <code>int</code>, <code>string</code>, <code>double</code>, <code>bool</code>",id:"common-data-types-int-string-double-bool",level:3},{value:"Example",id:"example-1",level:3},{value:"<strong>Java</strong>",id:"java",level:2},{value:"Syntax",id:"syntax-2",level:3},{value:"<strong>Common data types:</strong> <code>int</code>, <code>String</code>, <code>double</code>, <code>boolean</code>",id:"common-data-types-int-string-double-boolean",level:3},{value:"Example",id:"example-2",level:3},{value:"<strong>Python</strong>",id:"python",level:2},{value:"Syntax",id:"syntax-3",level:3},{value:"Example",id:"example-3",level:3},{value:"<strong>JavaScript</strong>",id:"javascript",level:2},{value:"Syntax",id:"syntax-4",level:3},{value:"Example",id:"example-4",level:3},{value:"<strong>TypeScript</strong>",id:"typescript",level:2},{value:"Syntax",id:"syntax-5",level:2},{value:"Example",id:"example-5",level:3},{value:"<strong>Data Types</strong>",id:"data-types",level:2},{value:"<strong>Definition :</strong>",id:"definition--1",level:3},{value:"<strong>C++</strong>",id:"c-2",level:2},{value:"<strong>Common Data Types:</strong>",id:"common-data-types",level:3},{value:"Example",id:"example-6",level:3},{value:"<strong>C#</strong>",id:"c-3",level:2},{value:"<strong>Common Data Types:</strong>",id:"common-data-types-1",level:3},{value:"Example",id:"example-7",level:3},{value:"<strong>Java</strong>",id:"java-1",level:2},{value:"<strong>Common Data Types:</strong>",id:"common-data-types-2",level:3},{value:"Example",id:"example-8",level:3},{value:"<strong>Python</strong>",id:"python-1",level:2},{value:"<strong>Common Data Types:</strong>",id:"common-data-types-3",level:3},{value:"Example",id:"example-9",level:3},{value:"<strong>JavaScript</strong>",id:"javascript-1",level:2},{value:"<strong>Common Data Types:</strong>",id:"common-data-types-4",level:3},{value:"Example",id:"example-10",level:3},{value:"<strong>TypeScript</strong>",id:"typescript-1",level:2},{value:"<strong>Common Data Types:</strong>",id:"common-data-types-5",level:3},{value:"Example",id:"example-11",level:3}];function o(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"variables-and-data-types",children:"Variables and Data Types"})}),"\n",(0,l.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"No."}),(0,l.jsx)(n.th,{children:"Topic"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"3"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"#variables",children:"Variables"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"4"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"#data-types",children:"Data Types"})})]})]})]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"variables",children:(0,l.jsx)(n.strong,{children:"Variables"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"definition-",children:(0,l.jsx)(n.strong,{children:"Definition :"})}),"\n",(0,l.jsxs)(n.p,{children:["A ",(0,l.jsx)(n.strong,{children:"variable"})," is like a container used to store data such as numbers, text, or other values in a\r\nprogram. It allows you to use and change that data later by referring to the variable\u2019s name."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"c",children:(0,l.jsx)(n.strong,{children:"C++"})}),"\n",(0,l.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cpp",children:"<datatype> <variableName> = <value>;\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"common-data-types-int-string-from-string-double-bool-char",children:[(0,l.jsx)(n.strong,{children:"Common data types:"})," ",(0,l.jsx)(n.code,{children:"int"}),", ",(0,l.jsx)(n.code,{children:"string"})," (from ",(0,l.jsx)(n.code,{children:"<string>"}),"), ",(0,l.jsx)(n.code,{children:"double"}),", ",(0,l.jsx)(n.code,{children:"bool"}),", ",(0,l.jsx)(n.code,{children:"char"})]}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["Note: To use ",(0,l.jsx)(n.code,{children:"string"}),", include the ",(0,l.jsx)(n.code,{children:"<string>"})," header and use the ",(0,l.jsx)(n.code,{children:"std"})," namespace."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\r\n#include <string>  // Required for using std::string\r\n\r\nint main() {\r\n    int age = 25;\r\n    std::string name = "Alice";\r\n    bool isStudent = true;\r\n\r\n    std::cout << name << " is " << age << " years old." << std::endl;\r\n    return 0;\r\n}\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"c-1",children:(0,l.jsx)(n.strong,{children:"C#"})}),"\n",(0,l.jsx)(n.h3,{id:"syntax-1",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-csharp",children:"<datatype> <variableName> = <value>;\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"common-data-types-int-string-double-bool",children:[(0,l.jsx)(n.strong,{children:"Common data types:"})," ",(0,l.jsx)(n.code,{children:"int"}),", ",(0,l.jsx)(n.code,{children:"string"}),", ",(0,l.jsx)(n.code,{children:"double"}),", ",(0,l.jsx)(n.code,{children:"bool"})]}),"\n",(0,l.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-csharp",children:'int age = 25;\r\nstring name = "Alice";\r\nbool isStudent = true;\r\n\r\nConsole.WriteLine(name + " is " + age + " years old.");\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"java",children:(0,l.jsx)(n.strong,{children:"Java"})}),"\n",(0,l.jsx)(n.h3,{id:"syntax-2",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"<datatype> <variableName> = <value>;\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"common-data-types-int-string-double-boolean",children:[(0,l.jsx)(n.strong,{children:"Common data types:"})," ",(0,l.jsx)(n.code,{children:"int"}),", ",(0,l.jsx)(n.code,{children:"String"}),", ",(0,l.jsx)(n.code,{children:"double"}),", ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsx)(n.h3,{id:"example-2",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'int age = 25;\r\nString name = "Alice";\r\nboolean isStudent = true;\r\n\r\nSystem.out.println(name + " is " + age + " years old.");\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"python",children:(0,l.jsx)(n.strong,{children:"Python"})}),"\n",(0,l.jsx)(n.h3,{id:"syntax-3",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"variable_name = value\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"No need to declare type \u2014 Python figures it out automatically"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"example-3",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'age = 25\r\nname = "Alice"\r\nis_student = True\r\n\r\nprint(name + " is " + str(age) + " years old.")\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"javascript",children:(0,l.jsx)(n.strong,{children:"JavaScript"})}),"\n",(0,l.jsx)(n.h3,{id:"syntax-4",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"let variableName = value;\r\nconst variableName = value; // for constants\r\nvar variableName = value;   // older way\n"})}),"\n",(0,l.jsx)(n.h3,{id:"example-4",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:'let age = 25;\r\nlet name = "Alice";\r\nlet isStudent = true;\r\n\r\nconsole.log(name + " is " + age + " years old.");\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"typescript",children:(0,l.jsx)(n.strong,{children:"TypeScript"})}),"\n",(0,l.jsx)(n.h2,{id:"syntax-5",children:"Syntax"}),"\n",(0,l.jsxs)(n.p,{children:["In TypeScript, variables can be declared using ",(0,l.jsx)(n.code,{children:"let"}),", ",(0,l.jsx)(n.code,{children:"const"}),", or ",(0,l.jsx)(n.code,{children:"var"})," with ",(0,l.jsx)(n.strong,{children:"type annotations"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"let variableName: type = value;\r\nconst constantName: type = value;\r\nvar oldStyleVariable: type = value;\n"})}),"\n",(0,l.jsx)(n.h3,{id:"example-5",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'let age: number = 25;\r\nlet name: string = "Alice";\r\nlet isStudent: boolean = true;\r\n\r\nconsole.log(`${name} is ${age} years old.`);\r\n\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"#table-of-contents",children:"Back to Top"})}),"\n",(0,l.jsx)(n.h2,{id:"data-types",children:(0,l.jsx)(n.strong,{children:"Data Types"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"definition--1",children:(0,l.jsx)(n.strong,{children:"Definition :"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Data types"})," define what kind of value a variable can store, such as numbers, text, true/false,\r\netc. Each programming language has built-in data types used to store specific kinds of data."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"c-2",children:(0,l.jsx)(n.strong,{children:"C++"})}),"\n",(0,l.jsx)(n.h3,{id:"common-data-types",children:(0,l.jsx)(n.strong,{children:"Common Data Types:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"int"})," \u2013 whole numbers (e.g., ",(0,l.jsx)(n.code,{children:"10"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"double"})," \u2013 decimal numbers (e.g., ",(0,l.jsx)(n.code,{children:"10.5"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"std::string"})," \u2013 text (e.g., ",(0,l.jsx)(n.code,{children:'"Hello"'}),") ",(0,l.jsxs)(n.em,{children:["(requires ",(0,l.jsx)(n.code,{children:"<string>"})," header)"]})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"bool"})," \u2013 true/false values"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"char"})," \u2013 single character (e.g., ",(0,l.jsx)(n.code,{children:"'A'"}),")"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"example-6",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\r\n#include <string>  // Required for std::string\r\n\r\nint main() {\r\n    int age = 30;\r\n    double height = 5.9;\r\n    std::string name = "Alice";\r\n    bool isStudent = true;\r\n    char grade = \'A\';\r\n\r\n    std::cout << name << " is " << age << " years old, height is " << height << " feet." << std::endl;\r\n    std::cout << "Student status: " << (isStudent ? "Yes" : "No") << ", Grade: " << grade << std::endl;\r\n\r\n    return 0;\r\n}\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"c-3",children:(0,l.jsx)(n.strong,{children:"C#"})}),"\n",(0,l.jsx)(n.h3,{id:"common-data-types-1",children:(0,l.jsx)(n.strong,{children:"Common Data Types:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"int"})," \u2013 whole numbers (e.g., 10)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"double"})," \u2013 decimal numbers (e.g., 10.5)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"string"}),' \u2013 text (e.g., "Hello")']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"bool"})," \u2013 true/false values"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"char"})," \u2013 single character (e.g., 'A')"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"example-7",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-csharp",children:"int age = 30;\r\ndouble height = 5.9;\r\nstring name = \"Alice\";\r\nbool isStudent = true;\r\nchar grade = 'A';\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"java-1",children:(0,l.jsx)(n.strong,{children:"Java"})}),"\n",(0,l.jsx)(n.h3,{id:"common-data-types-2",children:(0,l.jsx)(n.strong,{children:"Common Data Types:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"int"})," \u2013 whole numbers"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"double"})," \u2013 decimal numbers"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"String"})," \u2013 text"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"boolean"})," \u2013 true/false"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"char"})," \u2013 single character"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"example-8",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"int age = 30;\r\ndouble height = 5.9;\r\nString name = \"Alice\";\r\nboolean isStudent = true;\r\nchar grade = 'A';\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"python-1",children:(0,l.jsx)(n.strong,{children:"Python"})}),"\n",(0,l.jsx)(n.h3,{id:"common-data-types-3",children:(0,l.jsx)(n.strong,{children:"Common Data Types:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"int"})," \u2013 whole numbers"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"float"})," \u2013 decimal numbers"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"str"})," \u2013 text"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"bool"})," \u2013 true/false (",(0,l.jsx)(n.code,{children:"True"})," or ",(0,l.jsx)(n.code,{children:"False"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"list"}),", ",(0,l.jsx)(n.code,{children:"dict"}),", ",(0,l.jsx)(n.code,{children:"tuple"})," \u2013 for collections"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.em,{children:"Python is dynamically typed \u2014 no need to declare type."})}),"\n",(0,l.jsx)(n.h3,{id:"example-9",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"age = 30\r\nheight = 5.9\r\nname = \"Alice\"\r\nis_student = True\r\ngrade = 'A'\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"javascript-1",children:(0,l.jsx)(n.strong,{children:"JavaScript"})}),"\n",(0,l.jsx)(n.h3,{id:"common-data-types-4",children:(0,l.jsx)(n.strong,{children:"Common Data Types:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"Number"})," \u2013 for all numbers (both integer and decimal)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"String"})," \u2013 text"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"Boolean"})," \u2013 true/false"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"Object"})," \u2013 for key-value pairs"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"Array"})," \u2013 list of items"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"null"})," \u2013 empty value"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"undefined"})," \u2013 not assigned"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"example-10",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"let age = 30;\r\nlet height = 5.9;\r\nlet name = \"Alice\";\r\nlet isStudent = true;\r\nlet grade = 'A';\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"typescript-1",children:(0,l.jsx)(n.strong,{children:"TypeScript"})}),"\n",(0,l.jsx)(n.h3,{id:"common-data-types-5",children:(0,l.jsx)(n.strong,{children:"Common Data Types:"})}),"\n",(0,l.jsx)(n.p,{children:"TypeScript builds on JavaScript by adding static type definitions. Below are the most commonly used\r\ndata types in TypeScript:"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Example"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:'"Hello, World!"'})}),(0,l.jsx)(n.td,{children:"Textual data"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"42"}),", ",(0,l.jsx)(n.code,{children:"3.14"})]}),(0,l.jsx)(n.td,{children:"Both integers and floating-point numbers"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"true"}),", ",(0,l.jsx)(n.code,{children:"false"})]}),(0,l.jsx)(n.td,{children:"Logical values"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"null"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"null"})}),(0,l.jsx)(n.td,{children:"Absence of any value"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"undefined"})}),(0,l.jsx)(n.td,{children:"A variable not assigned a value"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"any"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"any"})}),(0,l.jsx)(n.td,{children:"Disables type checking"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"void"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"function greet(): void {}"})}),(0,l.jsx)(n.td,{children:"Function that does not return a value"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"never"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"function error(): never {}"})}),(0,l.jsx)(n.td,{children:"Represents unreachable code or errors"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"object"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:'{ name: "Alice", age: 30 }'})}),(0,l.jsx)(n.td,{children:"Non-primitive values"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"array"})}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"string[]"}),", ",(0,l.jsx)(n.code,{children:"Array<number>"})]}),(0,l.jsx)(n.td,{children:"Ordered collections"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"tuple"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"[string, number]"})}),(0,l.jsx)(n.td,{children:"Fixed-length array with known types"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"enum"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"enum Color {Red, Green, Blue}"})}),(0,l.jsx)(n.td,{children:"Named constants"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"union"})}),(0,l.jsx)(n.td,{children:"`string"}),(0,l.jsx)(n.td,{children:"number`"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"literal"})}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:'"yes"'}),", ",(0,l.jsx)(n.code,{children:"42"})]}),(0,l.jsx)(n.td,{children:"Specific value as type"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"type"})," / ",(0,l.jsx)(n.code,{children:"interface"})]}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"type User = {name: string}"})}),(0,l.jsx)(n.td,{children:"Custom structured types"})]})]})]}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["\u2705 Tip: Use ",(0,l.jsx)(n.code,{children:"type"})," and ",(0,l.jsx)(n.code,{children:"interface"})," to define reusable and complex data structures."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.p,{children:["\uD83E\uDDE0 ",(0,l.jsx)(n.strong,{children:"Type Safety"})," is the key feature of TypeScript\u2014leverage these data types to write robust code."]}),"\n",(0,l.jsx)(n.h3,{id:"example-11",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"let age: number = 30;\r\nlet height: number = 5.9;\r\nlet name: string = \"Alice\";\r\nlet isStudent: boolean = true;\r\nlet grade: string = 'A'; // TypeScript does not have a 'char' type, use string with 1 character\r\n\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"#table-of-contents",children:"Back to Top"})})]})}function h(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},50065:function(e,n,s){s.d(n,{Z:()=>t,a:()=>i});var r=s(67294);let l={},d=r.createContext(l);function i(e){let n=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);