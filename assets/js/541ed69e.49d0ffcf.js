"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["24636"],{66752:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>l,default:()=>p,toc:()=>o,metadata:()=>s,assets:()=>c,contentTitle:()=>a});var s=JSON.parse('{"id":"Languages/AccessModifiers","title":"Access Modifiers","description":"Definition :","source":"@site/docs/Languages/AccessModifiers.md","sourceDirName":"Languages","slug":"/Languages/AccessModifiers","permalink":"/docs/Languages/AccessModifiers","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"tutorialSidebar","previous":{"title":"Constructors","permalink":"/docs/Languages/Constructors"},"next":{"title":"Properties","permalink":"/docs/Languages/Properties"}}'),i=r(85893),t=r(50065);let l={sidebar_position:13},a="Access Modifiers",c={},o=[{value:"<strong>Definition :</strong>",id:"definition-",level:2},{value:"Access Modifiers in Each Language",id:"access-modifiers-in-each-language",level:2},{value:"Syntax (General Format)",id:"syntax-general-format",level:2},{value:"C++",id:"c",level:2},{value:"Example",id:"example",level:2},{value:"<strong>C# Example</strong>",id:"c-example",level:3},{value:"<strong>Java Example</strong>",id:"java-example",level:3},{value:"<strong>Python Example</strong>",id:"python-example",level:3},{value:"<strong>JavaScript Example</strong>",id:"javascript-example",level:3},{value:"<strong>Definition :</strong>",id:"definition--1",level:2},{value:"Summary of Access Modifiers Across Languages",id:"summary-of-access-modifiers-across-languages",level:2},{value:"General Syntax Format",id:"general-syntax-format",level:2},{value:"C#",id:"c-2",level:3},{value:"Java",id:"java",level:3},{value:"Python",id:"python",level:3},{value:"JavaScript",id:"javascript",level:3},{value:"<strong>C# Example</strong>",id:"c-example-1",level:3},{value:"<strong>Java Example</strong>",id:"java-example-1",level:3},{value:"<strong>Python Example</strong>",id:"python-example-1",level:3},{value:"<strong>JavaScript Example (ES2022+)</strong>",id:"javascript-example-es2022",level:3},{value:"<strong>C++ Example</strong>",id:"c-example-2",level:3},{value:"<strong>TypeScript Example</strong>",id:"typescript-example",level:3}];function d(e){let n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"access-modifiers",children:"Access Modifiers"})}),"\n",(0,i.jsx)(n.h2,{id:"definition-",children:(0,i.jsx)(n.strong,{children:"Definition :"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Access modifiers"})," are keywords used in object-oriented programming to define the ",(0,i.jsx)(n.strong,{children:"visibility"}),"\r\nand ",(0,i.jsx)(n.strong,{children:"access scope"})," of ",(0,i.jsx)(n.strong,{children:"classes"}),", ",(0,i.jsx)(n.strong,{children:"methods"}),", and ",(0,i.jsx)(n.strong,{children:"variables"}),". They control whether a member\r\ncan be accessed:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Within the ",(0,i.jsx)(n.strong,{children:"same class"})]}),"\n",(0,i.jsxs)(n.li,{children:["Within the ",(0,i.jsx)(n.strong,{children:"same package/module"})]}),"\n",(0,i.jsxs)(n.li,{children:["From ",(0,i.jsx)(n.strong,{children:"outside classes"})]}),"\n",(0,i.jsxs)(n.li,{children:["From ",(0,i.jsx)(n.strong,{children:"subclasses (inheritance)"})]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"access-modifiers-in-each-language",children:"Access Modifiers in Each Language"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Language"}),(0,i.jsx)(n.th,{children:"Public"}),(0,i.jsx)(n.th,{children:"Private"}),(0,i.jsx)(n.th,{children:"Protected"}),(0,i.jsx)(n.th,{children:"Default / Internal"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"C#"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"public"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"private"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"protected"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"internal"})," (same assembly)"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Java"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"public"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"private"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"protected"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(no modifier)"})," (package)"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Python"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.em,{children:"(none)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"__name"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"_name"})}),(0,i.jsx)(n.td,{children:"Everything is public by default (conventions used)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"JavaScript"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.em,{children:"default (public)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"#name"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.em,{children:"(no direct support)"})}),(0,i.jsxs)(n.td,{children:["ECMAScript private ",(0,i.jsx)(n.code,{children:"#"})," fields"]})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"syntax-general-format",children:"Syntax (General Format)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-plaintext",children:"// Applies to C# and Java (similar structure)\r\n\r\nclass className {\r\n    public string publicField;\r\n    private string privateField;\r\n    protected string protectedField;\r\n\r\n    public void methodName() {\r\n        // Access to class members\r\n    }\r\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Python uses naming conventions, not keywords\r\n\r\nclass className:\r\n    def __init__(self):\r\n        self.public_var = "public"\r\n        self._protected_var = "protected"\r\n        self.__private_var = "private"\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// JavaScript uses \'#\' for private fields\r\n\r\nclass className {\r\n    #privateField;  // private\r\n    constructor(value) {\r\n        this.publicField = value;  // public\r\n        this._protectedField = "pseudo-protected";  // naming convention\r\n        this.#privateField = "private";\r\n    }\r\n\r\n    methodName() {\r\n        console.log(this.publicField);\r\n        console.log(this._protectedField);\r\n        console.log(this.#privateField);\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"c",children:"C++"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"class ClassName {\r\nprivate:\r\n    // Private members: accessible only within the class\r\n    int privateVar;\r\n\r\nprotected:\r\n    // Protected members: accessible within the class and derived classes\r\n    int protectedVar;\r\n\r\npublic:\r\n    // Public members: accessible from anywhere\r\n    int publicVar;\r\n\r\n    void showAccess() {\r\n        privateVar = 10;\r\n        protectedVar = 20;\r\n        publicVar = 30;\r\n    }\r\n};\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.h3,{id:"c-example",children:(0,i.jsx)(n.strong,{children:"C# Example"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'using System;\r\n\r\nclass Person {\r\n    public string publicName;\r\n    private int privateAge;\r\n    protected string protectedInfo;\r\n    internal string internalNote;\r\n\r\n    public Person(string name, int age) {\r\n        publicName = name;\r\n        privateAge = age;\r\n        protectedInfo = "Protected Info";\r\n        internalNote = "Internal Note";\r\n    }\r\n\r\n    public void displayInfo() {\r\n        Console.WriteLine("Name: " + publicName);\r\n        Console.WriteLine("Age: " + privateAge);\r\n        Console.WriteLine("Info: " + protectedInfo);\r\n        Console.WriteLine("Note: " + internalNote);\r\n    }\r\n}\r\n\r\nclass Program {\r\n    static void Main() {\r\n        Person p = new Person("Alice", 30);\r\n        p.displayInfo();\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"java-example",children:(0,i.jsx)(n.strong,{children:"Java Example"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class Person {\r\n    public String publicName;\r\n    private int privateAge;\r\n    protected String protectedInfo;\r\n    String defaultNote;  // default (package-private)\r\n\r\n    public Person(String name, int age) {\r\n        publicName = name;\r\n        privateAge = age;\r\n        protectedInfo = "Protected Info";\r\n        defaultNote = "Default Note";\r\n    }\r\n\r\n    public void displayInfo() {\r\n        System.out.println("Name: " + publicName);\r\n        System.out.println("Age: " + privateAge);\r\n        System.out.println("Info: " + protectedInfo);\r\n        System.out.println("Note: " + defaultNote);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        Person p = new Person("Alice", 30);\r\n        p.displayInfo();\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"python-example",children:(0,i.jsx)(n.strong,{children:"Python Example"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'class Person:\r\n    def __init__(self, name, age):\r\n        self.public_name = name\r\n        self._protected_info = "Protected Info"\r\n        self.__private_age = age\r\n        self.internal_note = "Internal Note"  # All public in reality\r\n\r\n    def display_info(self):\r\n        print("Name:", self.public_name)\r\n        print("Age:", self.__private_age)\r\n        print("Info:", self._protected_info)\r\n        print("Note:", self.internal_note)\r\n\r\np = Person("Alice", 30)\r\np.display_info()\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"javascript-example",children:(0,i.jsx)(n.strong,{children:"JavaScript Example"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'class Person {\r\n    #privateAge;  // private field\r\n\r\n    constructor(name, age) {\r\n        this.publicName = name;  // public\r\n        this._protectedInfo = "Protected Info";  // naming convention\r\n        this.#privateAge = age;\r\n        this.internalNote = "Internal Note";  // public\r\n    }\r\n\r\n    displayInfo() {\r\n        console.log("Name:", this.publicName);\r\n        console.log("Age:", this.#privateAge);\r\n        console.log("Info:", this._protectedInfo);\r\n        console.log("Note:", this.internalNote);\r\n    }\r\n}\r\n\r\nconst p = new Person("Alice", 30);\r\np.displayInfo();\n'})}),"\n",(0,i.jsx)(n.h1,{id:"c-1",children:"C++"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\r\nusing namespace std;\r\n\r\nclass Employee {\r\nprivate:\r\n    int salary;  // Private: not accessible directly outside class\r\n\r\npublic:\r\n    string name;\r\n\r\n    // Setter for private member\r\n    void setSalary(int s) {\r\n        salary = s;\r\n    }\r\n\r\n    // Getter for private member\r\n    int getSalary() {\r\n        return salary;\r\n    }\r\n};\r\n\r\nint main() {\r\n    Employee e1;\r\n    e1.name = "John";\r\n\r\n    // Can\'t access salary directly: e1.salary = 50000; // \r\n\r\n    e1.setSalary(50000);  \r\n    cout << "Name: " << e1.name << endl;\r\n    cout << "Salary: " << e1.getSalary() << endl;\r\n\r\n    return 0;\r\n}\r\n\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"#list-of-topics",children:"Back to top"})}),"\n",(0,i.jsx)(n.h1,{id:"access-modifiers-1",children:"Access Modifiers"}),"\n",(0,i.jsx)(n.h2,{id:"definition--1",children:(0,i.jsx)(n.strong,{children:"Definition :"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Access Modifiers"})," are keywords used to define the ",(0,i.jsx)(n.strong,{children:"scope and visibility"})," of classes,\r\nmethods, and variables in object-oriented programming. They determine whether a member can be accessed from:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.strong,{children:"same class"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Derived classes"})}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.strong,{children:"same package/module"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Outside the class"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Each language handles these differently, but the concept remains consistent: ",(0,i.jsx)(n.strong,{children:"restrict or allow access"})," to data and behavior."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"summary-of-access-modifiers-across-languages",children:"Summary of Access Modifiers Across Languages"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Modifier"}),(0,i.jsx)(n.th,{children:(0,i.jsx)(n.strong,{children:"C#"})}),(0,i.jsx)(n.th,{children:(0,i.jsx)(n.strong,{children:"Java"})}),(0,i.jsx)(n.th,{children:(0,i.jsx)(n.strong,{children:"Python"})}),(0,i.jsx)(n.th,{children:(0,i.jsx)(n.strong,{children:"JavaScript"})})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"public"})}),(0,i.jsx)(n.td,{children:"accessible everywhere"}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:["(",(0,i.jsx)(n.code,{children:"name"}),")"]}),(0,i.jsxs)(n.td,{children:["(no ",(0,i.jsx)(n.code,{children:"#"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"private"})}),(0,i.jsx)(n.td,{children:"outside class"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsxs)(n.td,{children:["(",(0,i.jsx)(n.code,{children:"__name"})," convention)"]}),(0,i.jsxs)(n.td,{children:["(",(0,i.jsx)(n.code,{children:"#name"})," strict)"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"protected"})}),(0,i.jsx)(n.td,{children:"subclass & same assembly"}),(0,i.jsx)(n.td,{children:"subclass & package"}),(0,i.jsxs)(n.td,{children:["(",(0,i.jsx)(n.code,{children:"_name"})," convention)"]}),(0,i.jsx)(n.td,{children:"not natively supported"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"internal / default"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"internal"})," (C# only)"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.em,{children:"(package-private)"})}),(0,i.jsx)(n.td,{children:"No true equivalent"}),(0,i.jsxs)(n.td,{children:["All members public unless ",(0,i.jsx)(n.code,{children:"#"})]})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"general-syntax-format",children:"General Syntax Format"}),"\n",(0,i.jsx)(n.h3,{id:"c-2",children:"C#"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"class className {\r\n    public string publicField;\r\n    private int privateField;\r\n    protected string protectedField;\r\n    internal string internalField;\r\n\r\n    public void methodName() {\r\n        // Access within class\r\n    }\r\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"java",children:"Java"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"class className {\r\n    public String publicField;\r\n    private int privateField;\r\n    protected String protectedField;\r\n    String defaultField;  // package-private\r\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"python",children:"Python"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'class className:\r\n    def __init__(self):\r\n        self.name = "Public"\r\n        self._protected = "Protected"\r\n        self.__private = "Private"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"javascript",children:"JavaScript"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'class className {\r\n    #privateField;\r\n\r\n    constructor() {\r\n        this.publicField = "Public";\r\n        this._protectedField = "Protected (convention)";\r\n        this.#privateField = "Private";\r\n    }\r\n\r\n    methodName() {\r\n        console.log(this.#privateField); // allowed\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"c-example-1",children:(0,i.jsx)(n.strong,{children:"C# Example"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'class Person {\r\n    public string publicName = "Alice";\r\n    private int privateAge = 30;\r\n    protected string protectedInfo = "Protected";\r\n    internal string internalNote = "Internal";\r\n\r\n    public void displayInfo() {\r\n        Console.WriteLine(publicName);      //  Allowed\r\n        Console.WriteLine(privateAge);      //  Allowed\r\n        Console.WriteLine(protectedInfo);   //  Allowed\r\n        Console.WriteLine(internalNote);    //  Allowed\r\n    }\r\n}\r\n\r\nclass Program {\r\n    static void Main() {\r\n        Person p = new Person();\r\n        Console.WriteLine(p.publicName);     //  Allowed\r\n        Console.WriteLine(p.internalNote);   //  Allowed\r\n        // Console.WriteLine(p.privateAge);   Not Allowed\r\n        // Console.WriteLine(p.protectedInfo);  Not Allowed\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"java-example-1",children:(0,i.jsx)(n.strong,{children:"Java Example"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class Person {\r\n    public String publicName = "Alice";\r\n    private int privateAge = 30;\r\n    protected String protectedInfo = "Protected";\r\n    String defaultNote = "Package";\r\n\r\n    public void displayInfo() {\r\n        System.out.println(publicName);       // \r\n        System.out.println(privateAge);       // \r\n        System.out.println(protectedInfo);    // \r\n        System.out.println(defaultNote);      // \r\n    }\r\n}\r\n\r\nclass Main {\r\n    public static void main(String[] args) {\r\n        Person p = new Person();\r\n        System.out.println(p.publicName);     // \r\n        System.out.println(p.defaultNote);    //  (same package)\r\n        // System.out.println(p.privateAge);  \r\n        // System.out.println(p.protectedInfo); (not a subclass)\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"python-example-1",children:(0,i.jsx)(n.strong,{children:"Python Example"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'class Person:\r\n    def __init__(self):\r\n        self.name = "Alice"                 # public\r\n        self._protected_info = "Protected"  # convention\r\n        self.__private_age = 30             # name mangling\r\n\r\n    def display_info(self):\r\n        print(self.name)                    # \r\n        print(self._protected_info)         # \r\n        print(self.__private_age)           # \r\n\r\np = Person()\r\nprint(p.name)                  # \r\nprint(p._protected_info)       #  (discouraged but allowed)\r\n# print(p.__private_age)       AttributeError\r\nprint(p._Person__private_age)  #  Technically allowed via name mangling\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"javascript-example-es2022",children:(0,i.jsx)(n.strong,{children:"JavaScript Example (ES2022+)"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'class Person {\r\n    #privateAge;\r\n\r\n    constructor() {\r\n        this.publicName = "Alice";\r\n        this._protectedInfo = "Protected (convention)";\r\n        this.#privateAge = 30;\r\n    }\r\n\r\n    displayInfo() {\r\n        console.log(this.publicName);       // \r\n        console.log(this._protectedInfo);   // \r\n        console.log(this.#privateAge);      // \r\n    }\r\n}\r\n\r\nconst p = new Person();\r\nconsole.log(p.publicName);         // \r\nconsole.log(p._protectedInfo);     //  (by convention)\r\ntry {\r\n    console.log(p.#privateAge);    //  SyntaxError: private field not accessible\r\n} catch (e) {\r\n    console.log("Private access not allowed outside class");\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"c-example-2",children:(0,i.jsx)(n.strong,{children:"C++ Example"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\r\nusing namespace std;\r\n\r\nclass Person {\r\npublic:\r\n    string publicName = "Alice";\r\n\r\nprivate:\r\n    int privateAge = 30;\r\n\r\nprotected:\r\n    string protectedInfo = "Protected";\r\n\r\npublic:\r\n    string internalNote = "Internal";  // No \'internal\' in C++, using public\r\n\r\n    void displayInfo() {\r\n        cout << publicName << endl;       // Allowed\r\n        cout << privateAge << endl;       // Allowed\r\n        cout << protectedInfo << endl;    // Allowed\r\n        cout << internalNote << endl;     // Allowed\r\n    }\r\n};\r\n\r\nint main() {\r\n    Person p;\r\n    cout << p.publicName << endl;        // Allowed\r\n    cout << p.internalNote << endl;      // Allowed\r\n    // cout << p.privateAge << endl;     // Not Allowed\r\n    // cout << p.protectedInfo << endl;  // Not Allowed\r\n\r\n    return 0;\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"typescript-example",children:(0,i.jsx)(n.strong,{children:"TypeScript Example"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'class Person {\r\n    public publicName: string = "Alice";\r\n    private privateAge: number = 30;\r\n    protected protectedInfo: string = "Protected";\r\n    internalNote: string = "Internal";  // By default, public in TypeScript\r\n\r\n    public displayInfo(): void {\r\n        console.log(this.publicName);      // Allowed\r\n        console.log(this.privateAge);      // Allowed\r\n        console.log(this.protectedInfo);   // Allowed\r\n        console.log(this.internalNote);    // Allowed\r\n    }\r\n}\r\n\r\nclass Program {\r\n    static main(): void {\r\n        const p = new Person();\r\n        console.log(p.publicName);         // Allowed\r\n        console.log(p.internalNote);       // Allowed\r\n        // console.log(p.privateAge);      // Not Allowed\r\n        // console.log(p.protectedInfo);   // Not Allowed\r\n    }\r\n}\r\n\r\nProgram.main();\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"#access-modifiers",children:"Back to top"})})]})}function p(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},50065:function(e,n,r){r.d(n,{Z:()=>a,a:()=>l});var s=r(67294);let i={},t=s.createContext(i);function l(e){let n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);