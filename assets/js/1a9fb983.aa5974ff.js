"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[2426],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=p(t),d=a,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(f,i(i({ref:n},s),{},{components:t})):r.createElement(f,i({ref:n},s))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[m]="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},38234:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const o={tags:["MFC"]},i="How to create a minimal MFC Window ?",c={permalink:"/blog/2012/03/16/how-to-create-a-minimal-mfc-window",source:"@site/blog/2012-03-16-how-to-create-a-minimal-mfc-window.md",title:"How to create a minimal MFC Window ?",description:"We need at least two classes derived to construct an window",date:"2012-03-16T00:00:00.000Z",formattedDate:"March 16, 2012",tags:[{label:"MFC",permalink:"/blog/tags/mfc"}],readingTime:.69,hasTruncateMarker:!1,authors:[],frontMatter:{tags:["MFC"]},prevItem:{title:"Centering an Application Frame Window to desktop",permalink:"/blog/2012/03/16/centering-an-application-frame-window-to-desktop"},nextItem:{title:"Remove MAXIMIZE BOX and MINIMIZE BOX from an MFC Window",permalink:"/blog/2012/03/16/remove-maximize-box-and-minimize-box"}},l={authorsImageUrls:[]},p=[],s={toc:p},m="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"We need at least two classes derived to construct an window  "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Window class / Frame class (CMainFrame) which is derived from CFrameWnd  "),(0,a.kt)("li",{parentName:"ol"},"Application class (CMyApp) which is derived from CWinApp")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <afxwin.h>;\n\nclass CMainFrame : public CFrameWnd\n{\npublic:\n    CMainFrame()\n    {\n        Create(NULL, "HELLO MFC");\n    }\nprotected:\n    afx_msg void OnPaint()\n    {\n     CPaintDC dc(this);\n     dc.TextOut(100, 100, "This is the my MFC window");\n    }\n\n    afx_msg void OnLButtonDown(UINT nFlags, CPoint point)\n    {\n        AfxMessageBox("Mouse OnLButtonDown !!");\n        CFrameWnd::OnLButtonDown(nFlags, point);\n    }\n    // Declare the Message Map\n    DECLARE_MESSAGE_MAP()\n};\n\n// Define the Message Map out side the class Definition\nBEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)\n    ON_WM_PAINT()       // Paint Message\n    ON_WM_LBUTTONDOWN() // Mouse LButton down message\nEND_MESSAGE_MAP()\n\nclass CMyApp : public CWinApp\n{\npublic:\n    virtual BOOL InitInstance()\n    {\n        m_pMainWnd = new CMainFrame();\n        m_pMainWnd-&gt;ShowWindow(SW_SHOWNORMAL);\n        m_pMainWnd-&gt;UpdateWindow();\n        return TRUE;\n    }\n};\n\n// The one and only Application Object\nCMyApp theApp;\n')))}u.isMDXComponent=!0}}]);