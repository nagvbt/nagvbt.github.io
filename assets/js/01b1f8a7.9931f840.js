"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["82891"],{44242:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>t,default:()=>o,toc:()=>c,metadata:()=>l,assets:()=>d,contentTitle:()=>a});var l=JSON.parse('{"id":"Languages/Types of Inheritance","title":"Types of Inheritance","description":"Inheritance \u2013 Definition (Common to All)","source":"@site/docs/Languages/Types of Inheritance.md","sourceDirName":"Languages","slug":"/Languages/Types of Inheritance","permalink":"/docs/Languages/Types of Inheritance","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":16,"frontMatter":{"sidebar_position":16},"sidebar":"tutorialSidebar","previous":{"title":"Interface","permalink":"/docs/Languages/Interfaces"},"next":{"title":"Files","permalink":"/docs/Languages/Files"}}'),s=r(85893),i=r(50065);let t={sidebar_position:16},a=void 0,d={},c=[{value:"Inheritance \u2013 Definition (Common to All)",id:"inheritance--definition-common-to-all",level:2},{value:"Types of Inheritance",id:"types-of-inheritance",level:2},{value:"<strong>C++</strong>",id:"c",level:2},{value:"Supported Types: Single, Multilevel, Hierarchical, Multiple, Hybrid",id:"supported-types-single-multilevel-hierarchical-multiple-hybrid",level:4},{value:"Syntax",id:"syntax",level:3},{value:"Example",id:"example",level:3},{value:"<strong>C#</strong>",id:"c-1",level:2},{value:"Supported Types: Single, Multilevel, Hierarchical",id:"supported-types-single-multilevel-hierarchical",level:4},{value:"Syntax",id:"syntax-1",level:3},{value:"Example",id:"example-1",level:3},{value:"<strong>Java</strong>",id:"java",level:2},{value:"Supported Types: Single, Multilevel, Hierarchical",id:"supported-types-single-multilevel-hierarchical-1",level:4},{value:"Syntax",id:"syntax-2",level:3},{value:"Example",id:"example-2",level:3},{value:"<strong>Python</strong>",id:"python",level:2},{value:"Supported Types: All \u2013 Single, Multilevel, Hierarchical, Multiple, Hybrid",id:"supported-types-all--single-multilevel-hierarchical-multiple-hybrid",level:4},{value:"Syntax",id:"syntax-3",level:3},{value:"Example",id:"example-3",level:3},{value:"<strong>JavaScript</strong>",id:"javascript",level:2},{value:"Supported Types: Single, Multilevel",id:"supported-types-single-multilevel",level:4},{value:"Syntax",id:"syntax-4",level:3},{value:"Example",id:"example-4",level:3},{value:"<strong>TypeScript</strong>",id:"typescript",level:2},{value:"Supported Types: Same as JavaScript \u2013 Single, Multilevel",id:"supported-types-same-as-javascript--single-multilevel",level:4},{value:"Syntax",id:"syntax-5",level:3},{value:"Example",id:"example-5",level:3},{value:"Summary Table",id:"summary-table",level:2}];function h(e){let n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"inheritance--definition-common-to-all",children:"Inheritance \u2013 Definition (Common to All)"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Inheritance"})," is an object-oriented programming feature where one class (child/derived) acquires\r\nproperties and behaviors (methods) from another class (parent/base).\r\nThis promotes code reuse and establishes a parent-child relationship."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"types-of-inheritance",children:"Types of Inheritance"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Single"})}),(0,s.jsx)(n.td,{children:"One child class inherits from one parent class"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Multilevel"})}),(0,s.jsx)(n.td,{children:"A class is derived from another derived class"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Hierarchical"})}),(0,s.jsx)(n.td,{children:"Multiple classes inherit from one parent class"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Multiple"})}),(0,s.jsx)(n.td,{children:"A class inherits from more than one parent class (supported only in Python, C++)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Hybrid"})}),(0,s.jsx)(n.td,{children:"A combination of multiple types of inheritance"})]})]})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Note: ",(0,s.jsx)(n.strong,{children:"Java"})," and ",(0,s.jsx)(n.strong,{children:"C#"})," do ",(0,s.jsx)(n.strong,{children:"not support multiple inheritance"})," using classes, but support it via ",(0,s.jsx)(n.strong,{children:"interfaces"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"c",children:(0,s.jsx)(n.strong,{children:"C++"})}),"\n",(0,s.jsx)(n.h4,{id:"supported-types-single-multilevel-hierarchical-multiple-hybrid",children:"Supported Types: Single, Multilevel, Hierarchical, Multiple, Hybrid"}),"\n",(0,s.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"class Base {\r\n    // base members\r\n};\r\n\r\nclass Derived : access_specifier Base {\r\n    // derived members\r\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\r\nusing namespace std;\r\n\r\nclass Animal {\r\npublic:\r\n    void eat() {\r\n        cout << "Eating..." << endl;\r\n    }\r\n};\r\n\r\nclass Dog : public Animal {\r\npublic:\r\n    void bark() {\r\n        cout << "Barking..." << endl;\r\n    }\r\n};\r\n\r\nint main() {\r\n    Dog d;\r\n    d.eat();\r\n    d.bark();\r\n    return 0;\r\n}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"c-1",children:(0,s.jsx)(n.strong,{children:"C#"})}),"\n",(0,s.jsx)(n.h4,{id:"supported-types-single-multilevel-hierarchical",children:"Supported Types: Single, Multilevel, Hierarchical"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Multiple inheritance via interfaces only."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"syntax-1",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"class Parent {\r\n    // base class\r\n}\r\n\r\nclass Child : Parent {\r\n    // derived class\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'using System;\r\n\r\nclass Animal {\r\n    public void Eat() {\r\n        Console.WriteLine("Eating...");\r\n    }\r\n}\r\n\r\nclass Dog : Animal {\r\n    public void Bark() {\r\n        Console.WriteLine("Barking...");\r\n    }\r\n}\r\n\r\nclass Program {\r\n    static void Main() {\r\n        Dog d = new Dog();\r\n        d.Eat();\r\n        d.Bark();\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"java",children:(0,s.jsx)(n.strong,{children:"Java"})}),"\n",(0,s.jsx)(n.h4,{id:"supported-types-single-multilevel-hierarchical-1",children:"Supported Types: Single, Multilevel, Hierarchical"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Multiple inheritance via interfaces only."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"syntax-2",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"class Parent {\r\n    // base class\r\n}\r\n\r\nclass Child extends Parent {\r\n    // derived class\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example-2",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'class Animal {\r\n    void eat() {\r\n        System.out.println("Eating...");\r\n    }\r\n}\r\n\r\nclass Dog extends Animal {\r\n    void bark() {\r\n        System.out.println("Barking...");\r\n    }\r\n}\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Dog d = new Dog();\r\n        d.eat();\r\n        d.bark();\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"python",children:(0,s.jsx)(n.strong,{children:"Python"})}),"\n",(0,s.jsx)(n.h4,{id:"supported-types-all--single-multilevel-hierarchical-multiple-hybrid",children:"Supported Types: All \u2013 Single, Multilevel, Hierarchical, Multiple, Hybrid"}),"\n",(0,s.jsx)(n.h3,{id:"syntax-3",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Parent:\r\n    pass\r\n\r\nclass Child(Parent):\r\n    pass\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example-3",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'class Animal:\r\n    def eat(self):\r\n        print("Eating...")\r\n\r\nclass Dog(Animal):\r\n    def bark(self):\r\n        print("Barking...")\r\n\r\nd = Dog()\r\nd.eat()\r\nd.bark()\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"javascript",children:(0,s.jsx)(n.strong,{children:"JavaScript"})}),"\n",(0,s.jsx)(n.h4,{id:"supported-types-single-multilevel",children:"Supported Types: Single, Multilevel"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["JavaScript uses ",(0,s.jsx)(n.strong,{children:"prototypes"})," or ",(0,s.jsx)(n.strong,{children:"class-based (ES6)"})," inheritance."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"syntax-4",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"class Parent {\r\n    // base class\r\n}\r\n\r\nclass Child extends Parent {\r\n    // derived class\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example-4",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'class Animal {\r\n    eat() {\r\n        console.log("Eating...");\r\n    }\r\n}\r\n\r\nclass Dog extends Animal {\r\n    bark() {\r\n        console.log("Barking...");\r\n    }\r\n}\r\n\r\nconst d = new Dog();\r\nd.eat();\r\nd.bark();\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"typescript",children:(0,s.jsx)(n.strong,{children:"TypeScript"})}),"\n",(0,s.jsx)(n.h4,{id:"supported-types-same-as-javascript--single-multilevel",children:"Supported Types: Same as JavaScript \u2013 Single, Multilevel"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Supports ",(0,s.jsx)(n.strong,{children:"interfaces"})," for multiple inheritance-like behavior."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"syntax-5",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"class Parent {\r\n    // base class\r\n}\r\n\r\nclass Child extends Parent {\r\n    // derived class\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example-5",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'class Animal {\r\n    eat(): void {\r\n        console.log("Eating...");\r\n    }\r\n}\r\n\r\nclass Dog extends Animal {\r\n    bark(): void {\r\n        console.log("Barking...");\r\n    }\r\n}\r\n\r\nlet d = new Dog();\r\nd.eat();\r\nd.bark();\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"summary-table",children:"Summary Table"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Language"}),(0,s.jsx)(n.th,{children:"Single"}),(0,s.jsx)(n.th,{children:"Multilevel"}),(0,s.jsx)(n.th,{children:"Hierarchical"}),(0,s.jsx)(n.th,{children:"Multiple"}),(0,s.jsx)(n.th,{children:"Hybrid"}),(0,s.jsx)(n.th,{children:"Multiple via Interface"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"C++"})}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u274C"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"C#"})}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u274C"}),(0,s.jsx)(n.td,{children:"\u274C"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Java"})}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u274C"}),(0,s.jsx)(n.td,{children:"\u274C"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Python"})}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u274C"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"JavaScript"})}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u274C"}),(0,s.jsx)(n.td,{children:"\u274C"}),(0,s.jsx)(n.td,{children:"\u274C"}),(0,s.jsx)(n.td,{children:"\u274C"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"TypeScript"})}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u274C"}),(0,s.jsx)(n.td,{children:"\u274C"}),(0,s.jsx)(n.td,{children:"\u274C"}),(0,s.jsx)(n.td,{children:"\u2705 (with interfaces)"})]})]})]}),"\n",(0,s.jsx)(n.hr,{})]})}function o(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},50065:function(e,n,r){r.d(n,{Z:()=>a,a:()=>t});var l=r(67294);let s={},i=l.createContext(s);function t(e){let n=l.useContext(i);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);