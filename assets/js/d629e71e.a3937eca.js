"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[98621],{3905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>f});var a=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,i=function(t,e){if(null==t)return{};var n,a,i={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var l=a.createContext({}),c=function(t){var e=a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},m=function(t){var e=c(t.components);return a.createElement(l.Provider,{value:e},t.children)},s="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,i=t.mdxType,r=t.originalType,l=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),s=c(n),u=i,f=s["".concat(l,".").concat(u)]||s[u]||d[u]||r;return n?a.createElement(f,o(o({ref:e},m),{},{components:n})):a.createElement(f,o({ref:e},m))}));function f(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=n.length,o=new Array(r);o[0]=u;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=t,p[s]="string"==typeof t?t:i,o[1]=p;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},60182:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const r={title:"Creating an SDI/MDI application that is initially maximized",date:"2012-03-14",categories:["c-cpp-mfc-vcpp"],tags:["MFC","vc"]},o=void 0,p={permalink:"/blog/2012/03/14/creating-an-sdimdi-application-that-is-initially-maximized",source:"@site/blog/2012-03-14-creating-an-sdimdi-application-that-is-initially-maximized.md",title:"Creating an SDI/MDI application that is initially maximized",description:"To Creating an SDI/MDI application that is initially maximized Pass SW\\_SHOWMAXIMIZED as paramater to\xa0m\\_pMainWnd->ShowWindow() in the\xa0\xa0in the CWinApp::InitInstance()",date:"2012-03-14T00:00:00.000Z",formattedDate:"March 14, 2012",tags:[{label:"MFC",permalink:"/blog/tags/mfc"},{label:"vc",permalink:"/blog/tags/vc"}],readingTime:.235,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Creating an SDI/MDI application that is initially maximized",date:"2012-03-14",categories:["c-cpp-mfc-vcpp"],tags:["MFC","vc"]},prevItem:{title:"Making first MDI child window start out maximized",permalink:"/blog/2012/03/15/mdi-child-window-start-out-maximized"},nextItem:{title:"Converting from CString",permalink:"/blog/2012/03/13/converting-from-cstring"}},l={authorsImageUrls:[]},c=[],m={toc:c},s="wrapper";function d(t){let{components:e,...n}=t;return(0,i.kt)(s,(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To Creating an SDI/MDI application that is initially maximized Pass ",(0,i.kt)("strong",{parentName:"p"},"SW","_","SHOWMAXIMIZED")," as paramater to\xa0m","_","pMainWnd->ShowWindow() in the\xa0\xa0in the CWinApp::InitInstance()"),(0,i.kt)("p",null,"Code Snippet:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c",metastring:"BOOL CWindowTitleApp::InitInstance() { : : //////////////////////////////////////////////////////////////////////////// // To Create an SDI/MDI application that is initially maximized // //////////////////////////////////////////////////////////////////////////// m_pMainWnd->ShowWindow(SW_SHOWMAXIMIZED); ////////////////////////////////////////////////////////////////////////////",BOOL:!0,"CWindowTitleApp::InitInstance()":!0,"{":!0,":":!0,"////////////////////////////////////////////////////////////////////////////":!0,"//":!0,To:!0,Create:!0,an:!0,"SDI/MDI":!0,application:!0,that:!0,is:!0,initially:!0,maximized:!0,"m_pMainWnd->ShowWindow(SW_SHOWMAXIMIZED);":!0},"\nm\\_pMainWnd->UpdateWindow(); m\\_pMainWnd->DragAcceptFiles();\n\nreturn TRUE; } ```\n")))}d.isMDXComponent=!0}}]);