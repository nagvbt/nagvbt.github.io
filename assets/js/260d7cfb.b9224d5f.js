"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["94101"],{46147:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>i,default:()=>m,toc:()=>c,metadata:()=>t,assets:()=>a,contentTitle:()=>l});var t=JSON.parse('{"id":"UIFrameworks/Memo","title":"Memo","description":"React","source":"@site/docs/UIFrameworks/Memo.md","sourceDirName":"UIFrameworks","slug":"/UIFrameworks/Memo","permalink":"/docs/UIFrameworks/Memo","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":17,"frontMatter":{"sidebar_position":17},"sidebar":"tutorialSidebar","previous":{"title":"Router","permalink":"/docs/UIFrameworks/Router"},"next":{"title":"CSS Styling","permalink":"/docs/UIFrameworks/CSSStyling"}}'),s=r(85893),o=r(50065);let i={sidebar_position:17},l="Memo",a={},c=[{value:"<strong>React</strong>",id:"react",level:2},{value:"Definition",id:"definition",level:3},{value:"Syntax",id:"syntax",level:3},{value:"Example: Using <code>React.memo</code> to avoid unnecessary renders",id:"example-using-reactmemo-to-avoid-unnecessary-renders",level:3},{value:"Note",id:"note",level:4},{value:"<strong>Svelte</strong>",id:"svelte",level:2},{value:"Definition-Memo",id:"definition-memo",level:3},{value:"Svelte Advantage",id:"svelte-advantage",level:3},{value:"Example: Svelte version of React.memo demo",id:"example-svelte-version-of-reactmemo-demo",level:3},{value:"note",id:"note-1",level:4}];function d(e){let n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"memo",children:"Memo"})}),"\n",(0,s.jsx)(n.h2,{id:"react",children:(0,s.jsx)(n.strong,{children:"React"})}),"\n",(0,s.jsx)(n.h3,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"React.memo"})," is a ",(0,s.jsx)(n.strong,{children:"Higher Order Component (HOC)"})," that prevents ",(0,s.jsx)(n.strong,{children:"unnecessary re-renders"})," of a\r\ncomponent by memoizing it. If the component receives the ",(0,s.jsx)(n.strong,{children:"same props"}),", it ",(0,s.jsx)(n.strong,{children:"skips rendering"}),"\r\nand uses the previously rendered result \u2014 improving performance."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const MemoizedComponent = React.memo((props) => {\r\n  return <div>{props.value}</div>;\r\n});\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"example-using-reactmemo-to-avoid-unnecessary-renders",children:["Example: Using ",(0,s.jsx)(n.code,{children:"React.memo"})," to avoid unnecessary renders"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// App.tsx\r\nimport React, { useState } from 'react';\r\nimport Counter from './Counter';\r\nimport Display from './Display';\r\n\r\nconst App: React.FC = () => {\r\n  const [count, setCount] = useState<number>(0);\r\n  const [name, setName] = useState<string>('NBT');\r\n\r\n  return (\r\n    <div>\r\n      <h1>React.memo Example</h1>\r\n      <Counter count={count} />\r\n      <Display name={name} />\r\n\r\n      <button onClick={() => setCount(count + 1)}>Increment Count</button>\r\n      <button onClick={() => setName(name === 'NBT' ? 'Mr.NBT' : 'NBT')}>Toggle Name</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// Counter.tsx\r\nimport React from 'react';\r\n\r\ntype Props = {\r\n  count: number;\r\n};\r\n\r\nconst Counter: React.FC<Props> = React.memo(({ count }) => {\r\n  console.log('Rendering Counter...');\r\n  return <p>Count: {count}</p>;\r\n});\r\n\r\nexport default Counter;\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// Display.tsx\r\nimport React from 'react';\r\n\r\ntype Props = {\r\n  name: string;\r\n};\r\n\r\nconst Display: React.FC<Props> = React.memo(({ name }) => {\r\n  console.log('Rendering Display...');\r\n  return <p>Name: {name}</p>;\r\n});\r\n\r\nexport default Display;\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"note",children:"Note"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["When you click ",(0,s.jsx)(n.strong,{children:"Toggle Name"}),", only ",(0,s.jsx)(n.code,{children:"Display"})," re-renders."]}),"\n",(0,s.jsxs)(n.li,{children:["When you click ",(0,s.jsx)(n.strong,{children:"Increment Count"}),", only ",(0,s.jsx)(n.code,{children:"Counter"})," re-renders."]}),"\n",(0,s.jsxs)(n.li,{children:["This shows how ",(0,s.jsx)(n.code,{children:"React.memo"})," helps optimize performance by skipping re-renders if props haven\u2019t changed."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"svelte",children:(0,s.jsx)(n.strong,{children:"Svelte"})}),"\n",(0,s.jsx)(n.h3,{id:"definition-memo",children:"Definition-Memo"}),"\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.strong,{children:"Svelte"}),", components automatically ",(0,s.jsx)(n.strong,{children:"avoid unnecessary re-renders"})," when props don\u2019t change \u2014\r\nsimilar to what ",(0,s.jsx)(n.code,{children:"React.memo"})," achieves. No need for explicit memoization like in React."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"svelte-advantage",children:"Svelte Advantage"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["No need for ",(0,s.jsx)(n.code,{children:"memo()"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Reactive assignments optimize rendering."}),"\n",(0,s.jsxs)(n.li,{children:["Components update ",(0,s.jsx)(n.strong,{children:"only"})," when reactive values change."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"example-svelte-version-of-reactmemo-demo",children:"Example: Svelte version of React.memo demo"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-svelte",children:"\r\nsrc/\r\n\u251C\u2500\u2500 routes/\r\n\u2502   \u251C\u2500\u2500 +page.svelte        \u2192 App (main logic)\r\n\u2502   \u251C\u2500\u2500 Counter.svelte      \u2192 Tracks `count`\r\n\u2502   \u2514\u2500\u2500 Display.svelte      \u2192 Tracks `name`\r\n\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-svelte",children:"\x3c!-- +page.svelte --\x3e\r\n<script lang=\"ts\">\r\n  import Counter from './Counter.svelte';\r\n  import Display from './Display.svelte';\r\n\r\n  let count: number = 0;\r\n  let name: string = 'NBT';\r\n\r\n  const increment = () => count += 1;\r\n  const toggleName = () => name = name === 'NBT' ? 'MrNBT' : 'NBT';\r\n<\/script>\r\n\r\n<h1>Svelte Memo-like Behavior</h1>\r\n\r\n<Counter {count} />\r\n<Display {name} />\r\n\r\n<button on:click={increment}>Increment Count</button>\r\n<button on:click={toggleName}>Toggle Name</button>\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-svelte",children:"\x3c!-- Counter.svelte --\x3e\r\n<script lang=\"ts\">\r\n  export let count: number;\r\n\r\n  console.log('Rendering Counter...');\r\n<\/script>\r\n\r\n<p>Count: {count}</p>\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-svelte",children:"\x3c!-- Display.svelte --\x3e\r\n<script lang=\"ts\">\r\n  export let name: string;\r\n\r\n  console.log('Rendering Display...');\r\n<\/script>\r\n\r\n<p>Name: {name}</p>\r\n\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"note-1",children:"note"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["When you click ",(0,s.jsx)(n.strong,{children:"Toggle Name"}),", only ",(0,s.jsx)(n.code,{children:"Display.svelte"})," logs a re-render."]}),"\n",(0,s.jsxs)(n.li,{children:["When you click ",(0,s.jsx)(n.strong,{children:"Increment Count"}),", only ",(0,s.jsx)(n.code,{children:"Counter.svelte"})," logs a re-render."]}),"\n",(0,s.jsxs)(n.li,{children:["This shows how ",(0,s.jsx)(n.strong,{children:"Svelte\u2019s reactivity system is already optimized"})," \u2014 no extra memoization needed."]}),"\n"]})]})}function m(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},50065:function(e,n,r){r.d(n,{Z:()=>l,a:()=>i});var t=r(67294);let s={},o=t.createContext(s);function i(e){let n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);