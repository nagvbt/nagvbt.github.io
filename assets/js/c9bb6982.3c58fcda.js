"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[94692],{359:(r,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var e=t(85893),i=t(11151);const o={tags:["C++","Design Patterns"]},a="'Builder' Design Pattern using simple program",s={permalink:"/blog/2012/04/03/builderdesignpatter",source:"@site/blog/2012-04-03-builderdesignpatter.md",title:"'Builder' Design Pattern using simple program",description:"Definition:",date:"2012-04-03T00:00:00.000Z",formattedDate:"April 3, 2012",tags:[{label:"C++",permalink:"/blog/tags/c"},{label:"Design Patterns",permalink:"/blog/tags/design-patterns"}],readingTime:.975,hasTruncateMarker:!1,authors:[],frontMatter:{tags:["C++","Design Patterns"]},unlisted:!1,prevItem:{title:"Simple LinkedList program in C++",permalink:"/blog/2012/04/04/linkedlist"},nextItem:{title:"Simple Queue program in C++",permalink:"/blog/2012/04/02/queue"}},c={authorsImageUrls:[]},u=[];function d(r){const n={code:"code",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...r.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:"Definition:"})}),"\n",(0,e.jsx)(n.p,{children:"Separate the construction of a complex object from its representation so that the same construction process can create different representations."}),"\n",(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:"Program:"})}),"\n",(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:"language-cpp",children:'#include "iostream"\r\nusing namespace std;\r\n\r\n// Builder pattern -- Creational example\r\nclass Product\r\n{\r\nprivate:\r\n    char* _parts[10];\r\n    int i;\r\n\r\npublic:\r\n    Product()\r\n    {\r\n      i = 0;\r\n    }\r\n\r\n    void Add(char* part)\r\n    {\r\n      _parts[i] = part;\r\n      i++;\r\n    }\r\n\r\n    void Show()\r\n    {\r\n        cout<\r\n      for(int j = 0; j    {\r\n         cout<<_parts[j]<BuildPartA();\r\n      builder->BuildPartB();\r\n    }\r\n};\r\n\r\nclass ConcreteBuilder1 : public Builder\r\n{\r\n    private:\r\n      Product _product;\r\n\r\n    public:\r\n    virtual void BuildPartA()\r\n    {\r\n      _product.Add("PartA");\r\n    }\r\n\r\n    virtual void BuildPartB()\r\n    {\r\n      _product.Add("PartB");\r\n    }\r\n\r\n    virtual Product GetResult()\r\n    {\r\n      return _product;\r\n    }\r\n};\r\n\r\nclass ConcreteBuilder2 : public Builder\r\n{\r\n    private:\r\n      Product _product;\r\n\r\n    public:\r\n    virtual void BuildPartA()\r\n    {\r\n      _product.Add("PartX");\r\n    }\r\n\r\n    virtual void BuildPartB()\r\n    {\r\n      _product.Add("PartY");\r\n    }\r\n\r\n    virtual Product GetResult()\r\n    {\r\n      return _product;\r\n    }\r\n};\r\n\r\nvoid main()\r\n{\r\n  // Create director and builders\r\n  Director director;\r\n\r\n  ConcreteBuilder1 b1;\r\n  ConcreteBuilder2 b2;\r\n\r\n  Product p1;\r\n  Product p2;\r\n\r\n  // Construct product p1\r\n  director.Construct(&amp;b1);\r\n  p1 = b1.GetResult();\r\n  p1.Show();\r\n\r\n  // Construct product p2\r\n  director.Construct(&amp;b2);\r\n  p2 = b2.GetResult();\r\n  p2.Show();\r\n\r\n  getchar();\r\n}\r\n\r\n/*\r\nOUT PUT\r\n\r\nProduct Parts:\r\nPartA\r\nPartB\r\n\r\nProduct Parts:\r\nPartX\r\nPartY\r\n*/\n'})})]})}function l(r={}){const{wrapper:n}={...(0,i.a)(),...r.components};return n?(0,e.jsx)(n,{...r,children:(0,e.jsx)(d,{...r})}):d(r)}},11151:(r,n,t)=>{t.d(n,{Z:()=>s,a:()=>a});var e=t(67294);const i={},o=e.createContext(i);function a(r){const n=e.useContext(o);return e.useMemo((function(){return"function"==typeof r?r(n):{...n,...r}}),[n,r])}function s(r){let n;return n=r.disableParentContext?"function"==typeof r.components?r.components(i):r.components||i:a(r.components),e.createElement(o.Provider,{value:n},r.children)}}}]);