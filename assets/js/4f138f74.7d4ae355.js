"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["43124"],{59443:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>l,default:()=>h,toc:()=>s,metadata:()=>r,assets:()=>d,contentTitle:()=>a});var r=JSON.parse('{"id":"Tutorials/WPF-ViewSwitcherTutorial","title":"WPF-ViewSwitcherTutorial","description":"If you are new to WPF ( Windows Presentation Foundation ) please refer the below items.","source":"@site/docs/Tutorials/WPF-ViewSwitcherTutorial.md","sourceDirName":"Tutorials","slug":"/Tutorials/WPF-ViewSwitcherTutorial","permalink":"/docs/Tutorials/WPF-ViewSwitcherTutorial","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"WPF","permalink":"/docs/tags/wpf"},{"inline":true,"label":"Tutorial","permalink":"/docs/tags/tutorial"}],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"tags":["WPF","Tutorial"]},"sidebar":"Tutorials","previous":{"title":"WCF","permalink":"/docs/Tutorials/WCF"},"next":{"title":"ActiveX","permalink":"/docs/Tutorials/ActiveX"}}'),t=i(85893),o=i(50065);let l={sidebar_position:4,tags:["WPF","Tutorial"]},a="WPF View Switcher Tutorial",d={},s=[{value:"1. Controls and Layouts used",id:"1-controls-and-layouts-used",level:2},{value:"2. Step by Step approach for creating the project",id:"2-step-by-step-approach-for-creating-the-project",level:2},{value:"3. MainWindow Code Explanation",id:"3-mainwindow-code-explanation",level:2},{value:"4. RedView Code Explanation",id:"4-redview-code-explanation",level:2},{value:"5. GreenView Code Explanation",id:"5-greenview-code-explanation",level:2}];function c(e){let n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"wpf-view-switcher-tutorial",children:"WPF View Switcher Tutorial"})}),"\n",(0,t.jsx)(n.p,{children:"If you are new to WPF ( Windows Presentation Foundation ) please refer the below items."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/blog/2012/07/01/wpf-basics",children:"1. Basics of WPF"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/blog/2012/07/01/wpf-architecture",children:"2. WPF\xa0Architecture"})}),"\n",(0,t.jsx)(n.p,{children:"Dynamic Switching of views in WPF using UserControl and Grid Layout."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#1-controls-and-layouts-used",children:"1. Controls and Layouts used"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#2-step-by-step-approach-for-creating-the-project",children:"2. Step by Step approach for creating the project"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#3-mainwindow-code-explanation",children:"3. MainWindow Code Explanation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#4-redview-code-explanation",children:"4. RedView Code Explanation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#5-greenview-code-explanation",children:"5. GreenView Code Explanation"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"1-controls-and-layouts-used",children:"1. Controls and Layouts used"}),"\n",(0,t.jsxs)(n.p,{children:["Views \u2013 UserContol",(0,t.jsx)(n.br,{}),"\n","ViewHolder \u2013 Grid"]}),"\n",(0,t.jsx)(n.h2,{id:"2-step-by-step-approach-for-creating-the-project",children:"2. Step by Step approach for creating the project"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Launch Visual Studio."}),"\n",(0,t.jsx)(n.li,{children:"From the menu bar select File, New Project."}),"\n",(0,t.jsx)(n.li,{children:"Select the WPF Project Template"}),"\n",(0,t.jsx)(n.li,{children:"Name your new application SwitchingViews, and then click OK."}),"\n",(0,t.jsx)(n.li,{children:"Rename Window1.xaml to MainWindow.xaml find and replace all the occurrences of Window1.xaml to MainWindow.xaml."}),"\n",(0,t.jsx)(n.li,{children:"Follow MainWindow Code Explanation section for modifying the code."}),"\n",(0,t.jsx)(n.li,{children:"Add\xa0 User Control"}),"\n",(0,t.jsx)(n.li,{children:"Name User Control RedView, and then click OK."}),"\n",(0,t.jsx)(n.li,{children:"Follow RedView Code Explanation section for modifying the code ."}),"\n",(0,t.jsx)(n.li,{children:"10 .For creating GreenView repeat step 8 and 9."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"3-mainwindow-code-explanation",children:"3. MainWindow Code Explanation"}),"\n",(0,t.jsx)(n.p,{children:"The gridMain is main Grid which hosts the \u2018View Holder \u2018 Grid (gridViewHolder). On clicking the Red/Green Button we can switch the Default view to Red/Green View.The void ChangeViewTo(VIEWTYPE viewType) method clears the child/existing view to the specified viewType and Adds the new View."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"MainWindow.xaml"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<Grid Background="Black" Name="gridMain">\r\n<Grid.RowDefinitions>\r\n<RowDefinition Height="46-" />\r\n<RowDefinition Height="213-" />\r\n</Grid.RowDefinitions>\r\n\r\n<Button Background="Red"\r\nHorizontalAlignment="Left"\r\nMargin="24,12,0,11"\r\nWidth="75" Height ="22"\r\nName="btnRedView"\r\nContent="Red View"\r\nClick="btnRedView_Click">\r\n</Button>\r\n<Button Background="Green"\r\nHorizontalAlignment="Left"\r\nMargin="105,12,0,11"\r\nWidth="75" Height ="22"\r\nName="btnGreenView"\r\nContent="Green View"\r\nClick="btnGreenView_Click">\r\n</Button>\r\n<Button Background="Gold"\r\nHorizontalAlignment="Left"\r\nMargin="348,13.21,0,12.21"\r\nWidth="75"\r\nName="bnClear"\r\nContent="Clear Holder"\r\nClick="bnClear_Click">\r\n</Button>\r\n<Button HorizontalAlignment="Right"\r\nMargin="0,13.21,20,12.21"\r\nWidth="75"\r\nName="btnCancel"\r\nContent="Cancel"\r\nClick="btnCancel_Click">\r\n</Button>\r\n\r\n\x3c!--View Holder Grid --\x3e\r\n<Grid Background="Gray"\r\nGrid.Row="1"\r\nName="gridViewHolder">\r\n<Label FontSize="15"\r\nFontWeight="bold"\r\nMargin="217,85,202,98"\r\nName="lblViewHolder"\r\nContent="View Holder">\r\n</Label>\r\n</Grid>\r\n\r\n</Grid>\r\n</Window>\n'})}),"\n",(0,t.jsx)(n.h2,{id:"4-redview-code-explanation",children:"4. RedView Code Explanation"}),"\n",(0,t.jsx)(n.p,{children:"The void AdjustSize()Makes the size of the UserControl Adjustable to the size of view holder Grid at Runtime."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"RedView.xaml"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<UserControl x:Class="SwitchingViews.RedView"\r\nxmlns="[http://schemas.microsoft.com/winfx/2006/xaml/presentation"](http://schemas.microsoft.com/winfx/2006/xaml/presentation");\r\nxmlns:x="[http://schemas.microsoft.com/winfx/2006/xaml"](http://schemas.microsoft.com/winfx/2006/xaml");\r\nHeight="300" Width="300" Background="Red">\r\n<Grid><Label VerticalAlignment="Top"\r\nFontSize="15"\r\nFontWeight="bold"\r\nMargin="115,35,109,0"\r\nHeight="29"\r\nName="lblViewHolder"\r\nContent="Red View">\r\n</Label> </Grid>\r\n</UserControl>\n'})}),"\n",(0,t.jsx)(n.h2,{id:"5-greenview-code-explanation",children:"5. GreenView Code Explanation"}),"\n",(0,t.jsx)(n.p,{children:"Same as RedView."})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},50065:function(e,n,i){i.d(n,{Z:()=>a,a:()=>l});var r=i(67294);let t={},o=r.createContext(t);function l(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);