"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["24636"],{66752:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>l,default:()=>p,toc:()=>d,metadata:()=>s,assets:()=>c,contentTitle:()=>a});var s=JSON.parse('{"id":"Languages/AccessModifiers","title":"Access Modifiers","description":"Definition :","source":"@site/docs/Languages/AccessModifiers.md","sourceDirName":"Languages","slug":"/Languages/AccessModifiers","permalink":"/docs/Languages/AccessModifiers","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"tutorialSidebar","previous":{"title":"Constructors","permalink":"/docs/Languages/Constructors"},"next":{"title":"OOP Concepts and Definitions","permalink":"/docs/Languages/OOPS"}}'),i=r(85893),t=r(50065);let l={sidebar_position:13},a="Access Modifiers",c={},d=[{value:"Definition :",id:"definition-",level:3},{value:"Access Modifiers in Each Language",id:"access-modifiers-in-each-language",level:3},{value:"Notes:",id:"notes",level:3},{value:"<strong>C++</strong>",id:"c",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Example",id:"example",level:3},{value:"<strong>C#</strong>",id:"c-1",level:2},{value:"Syntax",id:"syntax-1",level:3},{value:"Example",id:"example-1",level:3},{value:"<strong>Java</strong>",id:"java",level:2},{value:"Syntax",id:"syntax-2",level:3},{value:"Example",id:"example-2",level:3},{value:"<strong>Python</strong>",id:"python",level:2},{value:"Syntax",id:"syntax-3",level:3},{value:"Example",id:"example-3",level:3},{value:"<strong>Javascript</strong>",id:"javascript",level:2},{value:"Syntax",id:"syntax-4",level:3},{value:"Example",id:"example-4",level:3},{value:"<strong>TypeScript</strong>",id:"typescript",level:2},{value:"Syntax",id:"syntax-5",level:3},{value:"Example",id:"example-5",level:3}];function o(e){let n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"access-modifiers",children:"Access Modifiers"})}),"\n",(0,i.jsx)(n.h3,{id:"definition-",children:"Definition :"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Access modifiers"})," are keywords used in object-oriented programming to define the ",(0,i.jsx)(n.strong,{children:"visibility"}),"\r\nand ",(0,i.jsx)(n.strong,{children:"access scope"})," of ",(0,i.jsx)(n.strong,{children:"classes"}),", ",(0,i.jsx)(n.strong,{children:"methods"}),", and ",(0,i.jsx)(n.strong,{children:"variables"}),". They control whether a member\r\ncan be accessed:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Within the ",(0,i.jsx)(n.strong,{children:"same class"})]}),"\n",(0,i.jsxs)(n.li,{children:["Within the ",(0,i.jsx)(n.strong,{children:"same package/module"})]}),"\n",(0,i.jsxs)(n.li,{children:["From ",(0,i.jsx)(n.strong,{children:"outside classes"})]}),"\n",(0,i.jsxs)(n.li,{children:["From ",(0,i.jsx)(n.strong,{children:"subclasses (inheritance)"})]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"access-modifiers-in-each-language",children:"Access Modifiers in Each Language"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Language"}),(0,i.jsx)(n.th,{children:"Public"}),(0,i.jsx)(n.th,{children:"Private"}),(0,i.jsx)(n.th,{children:"Protected"}),(0,i.jsx)(n.th,{children:"Default / Internal"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"C++"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"public:"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"private:"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"protected:"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(none)"})," (private by default in classes)"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"C#"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"public"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"private"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"protected"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"internal"})," (same assembly)"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Java"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"public"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"private"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"protected"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(no modifier)"})," (package-private)"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Python"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.em,{children:"(none)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"__name"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"_name"})}),(0,i.jsx)(n.td,{children:"Everything is public by default"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"JavaScript"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.em,{children:"default public"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"#name"})," (ES2019+)"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.em,{children:"(no direct support)"})}),(0,i.jsxs)(n.td,{children:["ECMAScript private fields (",(0,i.jsx)(n.code,{children:"#"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"TypeScript"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"public"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"private"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"protected"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(none)"})," (public by default)"]})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"notes",children:"Notes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["C++ uses access specifiers with colons (",(0,i.jsx)(n.code,{children:"public:"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Python uses naming conventions (",(0,i.jsx)(n.code,{children:"_"})," and ",(0,i.jsx)(n.code,{children:"__"}),") for encapsulation"]}),"\n",(0,i.jsxs)(n.li,{children:["JavaScript's ",(0,i.jsx)(n.code,{children:"#"})," private fields are enforced at language level"]}),"\n",(0,i.jsx)(n.li,{children:"TypeScript adds compile-time access modifiers that are removed in transpiled JS"}),"\n",(0,i.jsx)(n.li,{children:"Java's default (package-private) has no keyword"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"c",children:(0,i.jsx)(n.strong,{children:"C++"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"class ClassName {\r\nprivate:\r\n    // Private members: accessible only within the class\r\n    int privateVar;\r\n\r\nprotected:\r\n    // Protected members: accessible within the class and derived classes\r\n    int protectedVar;\r\n\r\npublic:\r\n    // Public members: accessible from anywhere\r\n    int publicVar;\r\n\r\n    void showAccess() {\r\n        privateVar = 10;\r\n        protectedVar = 20;\r\n        publicVar = 30;\r\n    }\r\n};\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\r\nusing namespace std;\r\n\r\nclass Employee {\r\nprivate:\r\n    int salary;  // Private: not accessible directly outside class\r\n\r\npublic:\r\n    string name;\r\n\r\n    // Setter for private member\r\n    void setSalary(int s) {\r\n        salary = s;\r\n    }\r\n\r\n    // Getter for private member\r\n    int getSalary() {\r\n        return salary;\r\n    }\r\n};\r\n\r\nint main() {\r\n    Employee e1;\r\n    e1.name = "John";\r\n\r\n    // Can\'t access salary directly: e1.salary = 50000; // \r\n\r\n    e1.setSalary(50000);  \r\n    cout << "Name: " << e1.name << endl;\r\n    cout << "Salary: " << e1.getSalary() << endl;\r\n\r\n    return 0;\r\n}\r\n\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"c-1",children:(0,i.jsx)(n.strong,{children:"C#"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-1",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-plaintext",children:"// Applies to C# and Java (similar structure)\r\n\r\nclass className {\r\n    public string publicField;\r\n    private string privateField;\r\n    protected string protectedField;\r\n\r\n    public void methodName() {\r\n        // Access to class members\r\n    }\r\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'using System;\r\n\r\nclass Person {\r\n    public string publicName;\r\n    private int privateAge;\r\n    protected string protectedInfo;\r\n    internal string internalNote;\r\n\r\n    public Person(string name, int age) {\r\n        publicName = name;\r\n        privateAge = age;\r\n        protectedInfo = "Protected Info";\r\n        internalNote = "Internal Note";\r\n    }\r\n\r\n    public void displayInfo() {\r\n        Console.WriteLine("Name: " + publicName);\r\n        Console.WriteLine("Age: " + privateAge);\r\n        Console.WriteLine("Info: " + protectedInfo);\r\n        Console.WriteLine("Note: " + internalNote);\r\n    }\r\n}\r\n\r\nclass Program {\r\n    static void Main() {\r\n        Person p = new Person("Alice", 30);\r\n        p.displayInfo();\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"java",children:(0,i.jsx)(n.strong,{children:"Java"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-2",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-plaintext",children:"// Applies to C# and Java (similar structure)\r\n\r\nclass className {\r\n    public string publicField;\r\n    private string privateField;\r\n    protected string protectedField;\r\n\r\n    public void methodName() {\r\n        // Access to class members\r\n    }\r\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example-2",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class Person {\r\n    public String publicName;\r\n    private int privateAge;\r\n    protected String protectedInfo;\r\n    String defaultNote;  // default (package-private)\r\n\r\n    public Person(String name, int age) {\r\n        publicName = name;\r\n        privateAge = age;\r\n        protectedInfo = "Protected Info";\r\n        defaultNote = "Default Note";\r\n    }\r\n\r\n    public void displayInfo() {\r\n        System.out.println("Name: " + publicName);\r\n        System.out.println("Age: " + privateAge);\r\n        System.out.println("Info: " + protectedInfo);\r\n        System.out.println("Note: " + defaultNote);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        Person p = new Person("Alice", 30);\r\n        p.displayInfo();\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"python",children:(0,i.jsx)(n.strong,{children:"Python"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-3",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Python uses naming conventions, not keywords\r\n\r\nclass className:\r\n    def __init__(self):\r\n        self.public_var = "public"\r\n        self._protected_var = "protected"\r\n        self.__private_var = "private"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"example-3",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'class Person:\r\n    def __init__(self, name, age):\r\n        self.public_name = name\r\n        self._protected_info = "Protected Info"\r\n        self.__private_age = age\r\n        self.internal_note = "Internal Note"  # All public in reality\r\n\r\n    def display_info(self):\r\n        print("Name:", self.public_name)\r\n        print("Age:", self.__private_age)\r\n        print("Info:", self._protected_info)\r\n        print("Note:", self.internal_note)\r\n\r\np = Person("Alice", 30)\r\np.display_info()\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"javascript",children:(0,i.jsx)(n.strong,{children:"Javascript"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-4",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// JavaScript uses \'#\' for private fields\r\n\r\nclass className {\r\n    #privateField;  // private\r\n    constructor(value) {\r\n        this.publicField = value;  // public\r\n        this._protectedField = "pseudo-protected";  // naming convention\r\n        this.#privateField = "private";\r\n    }\r\n\r\n    methodName() {\r\n        console.log(this.publicField);\r\n        console.log(this._protectedField);\r\n        console.log(this.#privateField);\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"example-4",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'class Person {\r\n    #privateAge;  // private field\r\n\r\n    constructor(name, age) {\r\n        this.publicName = name;  // public\r\n        this._protectedInfo = "Protected Info";  // naming convention\r\n        this.#privateAge = age;\r\n        this.internalNote = "Internal Note";  // public\r\n    }\r\n\r\n    displayInfo() {\r\n        console.log("Name:", this.publicName);\r\n        console.log("Age:", this.#privateAge);\r\n        console.log("Info:", this._protectedInfo);\r\n        console.log("Note:", this.internalNote);\r\n    }\r\n}\r\n\r\nconst p = new Person("Alice", 30);\r\np.displayInfo();\n'})}),"\n",(0,i.jsx)(n.h2,{id:"typescript",children:(0,i.jsx)(n.strong,{children:"TypeScript"})}),"\n",(0,i.jsx)(n.h3,{id:"syntax-5",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// TypeScript has compile-time access modifiers\r\n\r\nclass ClassName {\r\n    public publicField: type;          // Public (explicit)\r\n    protected protectedField: type;    // Protected\r\n    private privateField: type;        // Private (traditional syntax)\r\n    #privateField: type;               // Private (modern ECMAScript syntax)\r\n    \r\n    constructor(value: type) {\r\n        this.publicField = value;\r\n        this.protectedField = "protected";\r\n        this.privateField = "private-traditional";\r\n        this.#privateField = "private-modern";\r\n    }\r\n\r\n    public methodName(): void {\r\n        console.log(this.publicField);\r\n        console.log(this.protectedField);\r\n        console.log(this.privateField);\r\n        console.log(this.#privateField);\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"example-5",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'class Person {\r\n    public name: string;               // Public\r\n    protected ssn: string;             // Protected\r\n    private age: number;               // Private (traditional)\r\n    #internalId: string;               // Private (modern)\r\n    \r\n    constructor(name: string, age: number) {\r\n        this.name = name;\r\n        this.ssn = "123-45-6789";\r\n        this.age = age;\r\n        this.#internalId = "PERS-001";\r\n    }\r\n\r\n    public displayInfo(): void {\r\n        console.log(`Name: ${this.name}`);\r\n        console.log(`Age: ${this.age}`);\r\n        console.log(`SSN: ${this.ssn}`);\r\n        console.log(`ID: ${this.#internalId}`);\r\n    }\r\n}\r\n\r\nclass Employee extends Person {\r\n    private salary: number;\r\n    \r\n    constructor(name: string, age: number, salary: number) {\r\n        super(name, age);\r\n        this.salary = salary;\r\n    }\r\n\r\n    public showDetails(): void {\r\n        console.log(`Name: ${this.name}`);        // Public - accessible\r\n        console.log(`SSN: ${this.ssn}`);          // Protected - accessible\r\n        // console.log(this.age);                 // Error: Private\r\n        // console.log(this.#internalId);         // Error: Private\r\n        console.log(`Salary: ${this.salary}`);    // Private to Employee\r\n    }\r\n}\r\n\r\n// Usage\r\nconst emp = new Employee("Alice", 30, 75000);\r\nemp.displayInfo();\r\nemp.showDetails();\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"#access-modifiers",children:"Back to top"})})]})}function p(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},50065:function(e,n,r){r.d(n,{Z:()=>a,a:()=>l});var s=r(67294);let i={},t=s.createContext(i);function l(e){let n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);