"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[735],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>g});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var u=r.createContext({}),l=function(n){var e=r.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},p=function(n){var e=l(n.components);return r.createElement(u.Provider,{value:e},n.children)},s="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,o=n.originalType,u=n.parentName,p=c(n,["components","mdxType","originalType","parentName"]),s=l(t),m=a,g=s["".concat(u,".").concat(m)]||s[m]||d[m]||o;return t?r.createElement(g,i(i({ref:e},p),{},{components:t})):r.createElement(g,i({ref:e},p))}));function g(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var u in e)hasOwnProperty.call(e,u)&&(c[u]=e[u]);c.originalType=n,c[s]="string"==typeof n?n:a,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},40171:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=t(87462),a=(t(67294),t(3905));const o={tags:["C++","Design Patterns"]},i="'Builder' Design Pattern using simple program",c={permalink:"/blog/2012/04/03/builderdesignpatter",source:"@site/blog/2012-04-03-builderdesignpatter.md",title:"'Builder' Design Pattern using simple program",description:"Definition:",date:"2012-04-03T00:00:00.000Z",formattedDate:"April 3, 2012",tags:[{label:"C++",permalink:"/blog/tags/c"},{label:"Design Patterns",permalink:"/blog/tags/design-patterns"}],readingTime:.975,hasTruncateMarker:!1,authors:[],frontMatter:{tags:["C++","Design Patterns"]},prevItem:{title:"Simple LinkedList program in C++",permalink:"/blog/2012/04/04/linkedlist"},nextItem:{title:"Simple Queue program in C++",permalink:"/blog/2012/04/02/queue"}},u={authorsImageUrls:[]},l=[],p={toc:l},s="wrapper";function d(n){let{components:e,...t}=n;return(0,a.kt)(s,(0,r.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Definition:")),(0,a.kt)("p",null,"Separate the construction of a complex object from its representation so that the same construction process can create different representations."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Program:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include "iostream"\nusing namespace std;\n\n// Builder pattern -- Creational example\nclass Product\n{\nprivate:\n    char* _parts[10];\n    int i;\n\npublic:\n    Product()\n    {\n      i = 0;\n    }\n\n    void Add(char* part)\n    {\n      _parts[i] = part;\n      i++;\n    }\n\n    void Show()\n    {\n        cout<\n      for(int j = 0; j    {\n         cout<<_parts[j]<BuildPartA();\n      builder->BuildPartB();\n    }\n};\n\nclass ConcreteBuilder1 : public Builder\n{\n    private:\n      Product _product;\n\n    public:\n    virtual void BuildPartA()\n    {\n      _product.Add("PartA");\n    }\n\n    virtual void BuildPartB()\n    {\n      _product.Add("PartB");\n    }\n\n    virtual Product GetResult()\n    {\n      return _product;\n    }\n};\n\nclass ConcreteBuilder2 : public Builder\n{\n    private:\n      Product _product;\n\n    public:\n    virtual void BuildPartA()\n    {\n      _product.Add("PartX");\n    }\n\n    virtual void BuildPartB()\n    {\n      _product.Add("PartY");\n    }\n\n    virtual Product GetResult()\n    {\n      return _product;\n    }\n};\n\nvoid main()\n{\n  // Create director and builders\n  Director director;\n\n  ConcreteBuilder1 b1;\n  ConcreteBuilder2 b2;\n\n  Product p1;\n  Product p2;\n\n  // Construct product p1\n  director.Construct(&amp;b1);\n  p1 = b1.GetResult();\n  p1.Show();\n\n  // Construct product p2\n  director.Construct(&amp;b2);\n  p2 = b2.GetResult();\n  p2.Show();\n\n  getchar();\n}\n\n/*\nOUT PUT\n\nProduct Parts:\nPartA\nPartB\n\nProduct Parts:\nPartX\nPartY\n*/\n')))}d.isMDXComponent=!0}}]);