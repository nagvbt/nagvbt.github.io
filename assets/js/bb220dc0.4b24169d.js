"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[36758],{3905:(n,t,e)=>{e.d(t,{Zo:()=>l,kt:()=>d});var r=e(67294);function i(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function a(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function o(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?a(Object(e),!0).forEach((function(t){i(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):a(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function p(n,t){if(null==n)return{};var e,r,i=function(n,t){if(null==n)return{};var e,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)e=a[r],t.indexOf(e)>=0||(i[e]=n[e]);return i}(n,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)e=a[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(i[e]=n[e])}return i}var c=r.createContext({}),s=function(n){var t=r.useContext(c),e=t;return n&&(e="function"==typeof n?n(t):o(o({},t),n)),e},l=function(n){var t=s(n.components);return r.createElement(c.Provider,{value:t},n.children)},u="mdxType",y={inlineCode:"code",wrapper:function(n){var t=n.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(n,t){var e=n.components,i=n.mdxType,a=n.originalType,c=n.parentName,l=p(n,["components","mdxType","originalType","parentName"]),u=s(e),f=i,d=u["".concat(c,".").concat(f)]||u[f]||y[f]||a;return e?r.createElement(d,o(o({ref:t},l),{},{components:e})):r.createElement(d,o({ref:t},l))}));function d(n,t){var e=arguments,i=t&&t.mdxType;if("string"==typeof n||i){var a=e.length,o=new Array(a);o[0]=f;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=n,p[u]="string"==typeof n?n:i,o[1]=p;for(var s=2;s<a;s++)o[s]=e[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,e)}f.displayName="MDXCreateElement"},95551:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>y,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=e(87462),i=(e(67294),e(3905));const a={},o="Swapping",p={unversionedId:"articles/Cpp/Swapping",id:"articles/Cpp/Swapping",title:"Swapping",description:"Swapping of Two Strings Without 3rd Variable",source:"@site/docs/articles/Cpp/Swapping.md",sourceDirName:"articles/Cpp",slug:"/articles/Cpp/Swapping",permalink:"/docs/articles/Cpp/Swapping",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Random FAQ (C++)",permalink:"/docs/articles/Cpp/RandomFaq"},next:{title:"MFC",permalink:"/docs/category/mfc"}},c={},s=[{value:"Swapping of Two Strings Without 3rd Variable",id:"swapping-of-two-strings-without-3rd-variable",level:2},{value:"Swapping of numbers",id:"swapping-of-numbers",level:2}],l={toc:s},u="wrapper";function y(n){let{components:t,...e}=n;return(0,i.kt)(u,(0,r.Z)({},l,e,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"swapping"},"Swapping"),(0,i.kt)("h2",{id:"swapping-of-two-strings-without-3rd-variable"},"Swapping of Two Strings Without 3rd Variable"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include<iostream.h>\n#include<conio.h>\nvoid main()\n{\n  clrscr();\n  char* p="Hello";\n  char* q="World";\n  p=(char*) ((int)p + (int)q);\n  q=(char*) ((int)p - (int)q);\n  p=(char*) ((int)p - (int)q);\n  cout<<p<<" "<<q;\n  getch();\n}\n')),(0,i.kt)("h2",{id:"swapping-of-numbers"},"Swapping of numbers"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'//swapping of two numbers\nvoid main()\n{\n    int x,y,t,s;\n    cout<<"Enter x value";\n    cin>>x;\n    cout<<"Enter y value";\n    cin>>y;\n    t=x;\n    x=y;\n    y=t;\n    cout<<"The swapping of 2 no is:";\n    cout<<x<<" "<<y;\n    cin>>s;\n}\n \n// swapping no using functions call by value\nvoid swap(int x,int y);//declaration\nvoid main()\n{\n    int x,y,t,s;\n    cout<<"Enter x value";\n    cin>>x;\n    cout<<"Enter y value";\n    cin>>y;\n    swap(x,y);\n    cout<<"The swapping of 2 no is:";\n    cout<<x<<" "<<y;\n    cin>>s;\n}\nvoid swap(int x,int y)\n{\n    int t;\n           t=x;\n    x=y;\n    y=t;\n}\n// swapping no using functions call by Reference(Alias  name )\nvoid swap(int &x,int &y);//declaration\nvoid main()\n{\n    int x,y,t,s;\n    cout<<"Enter x value";\n    cin>>x;\n    cout<<"Enter y value";\n    cin>>y;\n    swap(x,y);\n    cout<<"The swapping of 2 no is:";\n    cout<<x<<" "<<y;\n    cin>>s;\n}\nvoid swap(int &x,int &y)\n{\n    int t;\n  t=x;\n    x=y;\n    y=t;\n}\n// swapping no using functions call by pointer\nvoid swap(int *x,int *y);//declaration\nvoid main()\n{\n    int x,y,t,s;\n    cout<<"Enter x value";\n    cin>>x;\n    cout<<"Enter y value";\n    cin>>y;\n    swap(&x,&y);\n    cout<<"The swapping of 2 no is:";\n    cout<<x<<" "<<y;\n    cin>>s;\n}\nvoid swap(int *x,int *y)\n{\n    int t;\n  t=*x;\n    *x=*y;\n    *y=t;\n}\n')))}y.isMDXComponent=!0}}]);