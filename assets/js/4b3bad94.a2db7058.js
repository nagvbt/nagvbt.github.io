"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["29865"],{98329:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>t,default:()=>x,toc:()=>c,metadata:()=>r,assets:()=>a,contentTitle:()=>o});var r=JSON.parse('{"id":"UIFrameworks/JSX","title":"JSX","description":"REACT","source":"@site/docs/UIFrameworks/JSX.md","sourceDirName":"UIFrameworks","slug":"/UIFrameworks/JSX","permalink":"/docs/UIFrameworks/JSX","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"Ternary Operator & RenderHTML","permalink":"/docs/UIFrameworks/TernaryOperatorRenderHTML"},"next":{"title":"Props","permalink":"/docs/UIFrameworks/Props"}}'),i=s(85893),l=s(50065);let t={sidebar_position:10},o="JSX",a={},c=[{value:"<strong>REACT</strong>",id:"react",level:2},{value:"Definition",id:"definition",level:3},{value:"Syntax",id:"syntax",level:3},{value:"Example",id:"example",level:3},{value:"Example Explanation",id:"example-explanation",level:3},{value:"<strong>SVELTE</strong>",id:"svelte",level:2},{value:"Definition of Svelte",id:"definition-of-svelte",level:3},{value:"Syntax of Svelte(JSX)",id:"syntax-of-sveltejsx",level:3},{value:"Example of Svelte JSX",id:"example-of-svelte-jsx",level:3},{value:"Explanation",id:"explanation",level:3}];function d(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"jsx",children:"JSX"})}),"\n",(0,i.jsx)(n.h2,{id:"react",children:(0,i.jsx)(n.strong,{children:"REACT"})}),"\n",(0,i.jsx)(n.h3,{id:"definition",children:"Definition"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"JSX (JavaScript XML)"})," is a syntax extension for JavaScript used in React to write HTML-like code.\r\nIt lets you write components in a way that looks like HTML, but is actually JavaScript."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"JSX makes it easier to describe what the UI should look like."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'const MyComponent: React.FC = () => {\r\n  const name: string = "NBT";\r\n  const isLoggedIn: boolean = true;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Hello, {name}</h1> {/* Embedding JS/TS expressions inside JSX */}\r\n      {isLoggedIn ? <p>Welcome back!</p> : <p>Please log in.</p>} {/* Ternary */}\r\n    </div>\r\n  );\r\n};\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'// File: JSXExample.tsx\r\nimport React from \'react\';\r\n\r\nconst JSXExample: React.FC = () => {\r\n  const courseName: string = "React with TypeScript";\r\n  const lessons: string[] = ["JSX", "Components", "Props", "Hooks"];\r\n\r\n  return (\r\n    <div>\r\n      <h2>{courseName}</h2>\r\n      <p>This course covers the following topics:</p>\r\n      <ul>\r\n        {lessons.map((lesson, index) => (\r\n          <li key={index}>{lesson}</li> // Rendering list items dynamically\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JSXExample;\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example-explanation",children:"Example Explanation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["JSX lets you write ",(0,i.jsx)(n.strong,{children:"HTML-like code"})," inside React components."]}),"\n",(0,i.jsxs)(n.li,{children:["You can insert JS/TS values using ",(0,i.jsx)(n.code,{children:"{}"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"JSX helps you mix UI and logic in a readable way."}),"\n",(0,i.jsxs)(n.li,{children:["JSX must return ",(0,i.jsx)(n.strong,{children:"a single root element"})," (like a ",(0,i.jsx)(n.code,{children:"<div>"}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"svelte",children:(0,i.jsx)(n.strong,{children:"SVELTE"})}),"\n",(0,i.jsx)(n.h3,{id:"definition-of-svelte",children:"Definition of Svelte"}),"\n",(0,i.jsxs)(n.p,{children:["Svelte does ",(0,i.jsx)(n.strong,{children:"not use JSX"}),".\r\nInstead, you write ",(0,i.jsx)(n.strong,{children:"HTML directly"})," in the markup section of ",(0,i.jsx)(n.code,{children:".svelte"})," files, and use ",(0,i.jsx)(n.code,{children:"{}"})," to\r\ninsert dynamic values, similar to JSX."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Svelte\u2019s HTML-like syntax achieves the same purpose as JSX \u2014 defining UI declaratively."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"syntax-of-sveltejsx",children:"Syntax of Svelte(JSX)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-svelte",children:'<script lang="ts">\r\n  let name: string = "NBT";\r\n  let isLoggedIn: boolean = true;\r\n<\/script>\r\n\r\n<div>\r\n  <h1>Hello, {name}</h1> \x3c!-- Embed values --\x3e\r\n  {#if isLoggedIn}\r\n    <p>Welcome back!</p>\r\n  {:else}\r\n    <p>Please log in.</p>\r\n  {/if}\r\n</div>\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example-of-svelte-jsx",children:"Example of Svelte JSX"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-svelte",children:'\x3c!-- File: JSXExample.svelte --\x3e\r\n<script lang="ts">\r\n  let courseName: string = "Svelte with TypeScript";\r\n  let lessons: string[] = ["Reactivity", "Components", "Props", "Bindings"];\r\n<\/script>\r\n\r\n<div>\r\n  <h2>{courseName}</h2>\r\n  <p>This course covers the following topics:</p>\r\n  <ul>\r\n    {#each lessons as lesson, index}\r\n      <li>{index + 1}. {lesson}</li>\r\n    {/each}\r\n  </ul>\r\n</div>\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"explanation",children:"Explanation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Svelte doesn't need JSX \u2014 it's built with ",(0,i.jsx)(n.strong,{children:"native HTML syntax"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"{}"})," lets you insert TypeScript or JavaScript expressions."]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"{#if}"}),", ",(0,i.jsx)(n.code,{children:"{#each}"}),", etc., instead of ternaries or map functions."]}),"\n",(0,i.jsxs)(n.li,{children:["Like JSX, everything must be wrapped in a ",(0,i.jsx)(n.strong,{children:"single block"})," (usually a ",(0,i.jsx)(n.code,{children:"<div>"})," or ",(0,i.jsx)(n.code,{children:"<main>"}),")."]}),"\n"]})]})}function x(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},50065:function(e,n,s){s.d(n,{Z:()=>o,a:()=>t});var r=s(67294);let i={},l=r.createContext(i);function t(e){let n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);