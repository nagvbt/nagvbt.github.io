"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[92828],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(96540);const s={},o=r.createContext(s);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:t},e.children)}},40517:e=>{e.exports=JSON.parse('{"permalink":"/blog/2011/09/18/memory-layout-of-a-class-c-object","source":"@site/blog/2011-09-18-memory-layout-of-a-class-c-object.md","title":"Memory Layout of a class (C++) Object","description":"Let us know how the members of a class are stored in the C++ class object.","date":"2011-09-18T00:00:00.000Z","tags":[{"inline":true,"label":"C++","permalink":"/blog/tags/c"}],"readingTime":0.655,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["C++"]},"unlisted":false,"prevItem":{"title":"Steve Jobs Documentary & Best videos","permalink":"/blog/2011/10/09/steve-jobs-documentary-best-videos"},"nextItem":{"title":"Size Matters (C++)","permalink":"/blog/2011/09/18/size-matters-c"}}')},98258:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var r=n(40517),s=n(74848),o=n(28453);const a={tags:["C++"]},i="Memory Layout of a class (C++) Object",l={authorsImageUrls:[]},c=[];function u(e){const t={code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Let us know how the members of a class are stored in the C++ class object."}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"All Static Members Functions, Static member variables and Non static Members Functions are hoisted outside the class object."}),"\n",(0,s.jsx)(t.li,{children:"All non static member variables are stored in the class object."}),"\n",(0,s.jsx)(t.li,{children:"All virtual functions are part of Virtual Table. And a pointer (vptr) to the created Virtual Table is inserted with in each class object."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Sample Program:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"class Sample\r\n{\r\npublic:\r\n     Sample() {};\r\n\r\n     virtual ~Sample() {}\r\n     virtual void virtualFun1() {}\r\n     virtual void virtualFun2() {}\r\n\r\n     void normalFun() {}\r\n\r\n     static int getCount() //static function\r\n     {\r\n       return nCount;\r\n     }\r\n\r\nprivate:\r\n     int i;\r\n     static int nCount;\r\n};\r\n\r\nvoid main()\r\n{\r\n    Sample obj;\r\n    cout<<obj;\r\n}\r\n\n"})})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);