"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[1180],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(t),d=a,m=u["".concat(s,".").concat(d)]||u[d]||f[d]||c;return t?r.createElement(m,o(o({ref:n},p),{},{components:t})):r.createElement(m,o({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,o=new Array(c);o[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var l=2;l<c;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},48338:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>c,metadata:()=>i,toc:()=>l});var r=t(87462),a=(t(67294),t(3905));const c={title:'C FAQ 1: How to write a code to count number of characters/Spaces/numbers/special characters present in a sentence.\xa0 sentence ="1. GOD IS GREAT !!!"',date:"2012-01-18",categories:["c-cpp-mfc-vcpp"],tags:["c-faq","c"]},o=void 0,i={permalink:"/blog/2012/01/18/c-faq-1--count-number-of-characters",source:"@site/blog/2012-01-18-c-faq-1--count-number-of-characters.md",title:'C FAQ 1: How to write a code to count number of characters/Spaces/numbers/special characters present in a sentence.\xa0 sentence ="1. GOD IS GREAT !!!"',description:'\\[sourcecode language="c"\\]',date:"2012-01-18T00:00:00.000Z",formattedDate:"January 18, 2012",tags:[{label:"c-faq",permalink:"/blog/tags/c-faq"},{label:"c",permalink:"/blog/tags/c"}],readingTime:1.16,hasTruncateMarker:!1,authors:[],frontMatter:{title:'C FAQ 1: How to write a code to count number of characters/Spaces/numbers/special characters present in a sentence.\xa0 sentence ="1. GOD IS GREAT !!!"',date:"2012-01-18",categories:["c-cpp-mfc-vcpp"],tags:["c-faq","c"]},prevItem:{title:"All About Design Patterns",permalink:"/blog/2012/01/18/all-about-design-patterns"},nextItem:{title:"Design Pattern: C# Singleton",permalink:"/blog/2012/01/18/design-pattern-c-singleton"}},s={authorsImageUrls:[]},l=[],p={toc:l},u="wrapper";function f(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"[",'sourcecode language="c"',"]","\n#include\n#define LEN 255  //Total ASCII Characterset\nvoid main()\n{\nint ASCII","[","LEN","]",";\nchar sentence","[","100","]",";\nint count = 0, j = 0;\nint code;"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'//Initialize the ASCII Array with Zero\nfor(int i = 0; i<LEN; i++)\n{\n    ASCII\\[i\\] = 0;\n}\n\nprintf("Enter the sentence: n");\nfor(j = 0; (sentence\\[j\\] = getchar())!=\'n\'; j++)\n{\n    //Do Nothing\n}\n\nsentence\\[j\\] = \'\';\ncount = j;\n\n//Increment the value of the corresponding ASCII Array\n//Index (code) represents the ASCII Character\nfor(int idx = 0; idx<count; idx++)\n{\n    code = sentence \\[ idx \\];\n    ASCII\\[ code\\]  = ASCII\\[ code \\]+1;\n}\n\nprintf("The given sentence is: %s n",sentence);\n\n//Print the Result\nint TotalChars = 0;\nfor(int ch = 0; ch<LEN; ch++)\n{\n    if(ASCII\\[ch\\] != 0)\n    {\n        int cnt = ASCII\\[ch\\];\n        TotalChars = TotalChars + cnt;\n        switch(ch)\n        {\n        case 9:\n            printf("Horizontal Tab - %dn", cnt);\n            break;\n        case 11:\n            printf("Vertical Tab - %dn", cnt);\n            break;\n        case 32:\n            printf("Space - %dn", cnt);\n            break;\n        default:\n            printf("%c - %dn",ch, cnt);\n            break;\n        }\n    }\n}\n\nprintf("Total Characters - %dn", TotalChars);\n')),(0,a.kt)("p",null,"}"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\n**OUTPUT**\n\nEnter the sentence:\n1. GOD IS GREAT !!!\nThe given sentence is: 1. GOD IS GREAT !!!\nSpace - 4\n! - 3\n. - 1\n1 - 1\nA - 1\nD - 1\nE - 1\nG - 2\nI - 1\nO - 1\nR - 1\nS - 1\nT - 1\nTotal Characters - 19\n")))}f.isMDXComponent=!0}}]);