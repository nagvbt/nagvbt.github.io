"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["74742"],{6656:function(t,n,e){e.r(n),e.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>h});var i=e(15619),d=e(85893),l=e(50065);let r={tags:["COM"]},s="COM Threading Models",a={authorsImageUrls:[]},h=[];function o(t){let n={em:"em",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.a)(),...t.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.p,{children:"COM Threading Models / Apartment Model"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Definition"}),": Multithreading in COM is referred to as the apartment model in COM"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.em,{children:"Apartment"})})}),"\n",(0,d.jsx)(n.p,{children:"The COM apartment is a conceptual entity that allows us to think about components and their clients in a logical way"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"An apartment is not a thread, but a thread belongs to only one apartment."}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"An apartment is not an instance of a COM object, but each COM instance belongs to only one apartment."}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"A process can have one or more apartments, depending on its implementation."}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"Apartments are created or entered by calling the CoInitialize or CoInitializeEx function. Each thread that calls CoInitialize(0) or CoInitializeEx( 0, COINIT_APARTMENTTHREADED )"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsx)(n.li,{children:"STA (Single Threaded Apartment) : Only One thread can join this Apartment."}),"\n",(0,d.jsx)(n.li,{children:"MTA (MultiThreaded Apartment): Multiple threads can join this Apartment."}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.em,{children:"Differences between STA and MTA"})})}),"\n",(0,d.jsx)("table",{border:"1",cellspacing:"0",cellpadding:"0",children:(0,d.jsxs)("tbody",{children:[(0,d.jsxs)("tr",{children:[(0,d.jsx)("td",{valign:"top",width:"33",children:(0,d.jsx)("strong",{children:"No"})}),(0,d.jsx)("td",{valign:"top",width:"515",children:(0,d.jsx)("strong",{children:"Feature"})}),(0,d.jsx)("td",{valign:"top",width:"72",children:(0,d.jsx)("strong",{children:"STA"})}),(0,d.jsx)("td",{valign:"top",width:"67",children:(0,d.jsx)("strong",{children:"MTA"})})]}),(0,d.jsxs)("tr",{children:[(0,d.jsx)("td",{valign:"top",width:"33",children:"1"}),(0,d.jsx)("td",{valign:"top",width:"515",children:"Synchronization provided by COM"}),(0,d.jsx)("td",{valign:"top",width:"72",children:"YES"}),(0,d.jsx)("td",{valign:"top",width:"67",children:"NO"})]}),(0,d.jsxs)("tr",{children:[(0,d.jsx)("td",{valign:"top",width:"33",children:"2"}),(0,d.jsx)("td",{valign:"top",width:"515",children:"Uses Windows message queues"}),(0,d.jsx)("td",{valign:"top",width:"72",children:"YES"}),(0,d.jsx)("td",{valign:"top",width:"67",children:"NO"})]}),(0,d.jsxs)("tr",{children:[(0,d.jsx)("td",{valign:"top",width:"33",children:"3"}),(0,d.jsx)("td",{valign:"top",width:"515",children:"Can have multiple threads in an apartment"}),(0,d.jsx)("td",{valign:"top",width:"72",children:"NO"}),(0,d.jsx)("td",{valign:"top",width:"67",children:"YES"})]}),(0,d.jsxs)("tr",{children:[(0,d.jsx)("td",{valign:"top",width:"33",children:"4"}),(0,d.jsx)("td",{valign:"top",width:"515",children:"Must marshal interface pointers between the threads in the same apartment"}),(0,d.jsx)("td",{valign:"top",width:"72",children:"N/A"}),(0,d.jsx)("td",{valign:"top",width:"67",children:"YES"})]}),(0,d.jsxs)("tr",{children:[(0,d.jsx)("td",{valign:"top",width:"33",children:"5"}),(0,d.jsx)("td",{valign:"top",width:"515",children:"Must marshal interface pointers between apartments"}),(0,d.jsx)("td",{valign:"top",width:"72",children:"YES"}),(0,d.jsx)("td",{valign:"top",width:"67",children:"YES"})]}),(0,d.jsxs)("tr",{children:[(0,d.jsx)("td",{valign:"top",width:"33",children:"6"}),(0,d.jsx)("td",{valign:"top",width:"515",children:"Must call Coinitialize() in every thread that uses a COM Service"}),(0,d.jsx)("td",{valign:"top",width:"72",children:"YES"}),(0,d.jsx)("td",{valign:"top",width:"67",children:"YES"})]}),(0,d.jsxs)("tr",{children:[(0,d.jsx)("td",{valign:"top",width:"33",children:"7"}),(0,d.jsx)("td",{valign:"top",width:"515",children:"Performance"}),(0,d.jsx)("td",{valign:"top",width:"72",children:"Slow"}),(0,d.jsx)("td",{valign:"top",width:"67",children:"Fast"})]})]})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"NOTE"}),": ATL object wizard allows you to set the threading model. The values can be"]}),"\n",(0,d.jsx)("table",{border:"1",cellspacing:"0",cellpadding:"0",children:(0,d.jsxs)("tbody",{children:[(0,d.jsxs)("tr",{children:[(0,d.jsx)("td",{valign:"top",width:"272",children:"Threading Model"}),(0,d.jsx)("td",{valign:"top",width:"228",children:"Description"})]}),(0,d.jsxs)("tr",{children:[(0,d.jsx)("td",{valign:"top",width:"272",children:"Single / No Value"}),(0,d.jsx)("td",{valign:"top",width:"228",children:"Object knows nothing about threads"})]}),(0,d.jsxs)("tr",{children:[(0,d.jsx)("td",{valign:"top",width:"272",children:"Apartment"}),(0,d.jsx)("td",{valign:"top",width:"228",children:"STA"})]}),(0,d.jsxs)("tr",{children:[(0,d.jsx)("td",{valign:"top",width:"272",children:"Free"}),(0,d.jsx)("td",{valign:"top",width:"228",children:"MTA"})]}),(0,d.jsxs)("tr",{children:[(0,d.jsx)("td",{valign:"top",width:"272",children:"Both"}),(0,d.jsx)("td",{valign:"top",width:"228",children:"Both STA & MTA"})]})]})})]})}function c(t={}){let{wrapper:n}={...(0,l.a)(),...t.components};return n?(0,d.jsx)(n,{...t,children:(0,d.jsx)(o,{...t})}):o(t)}},50065:function(t,n,e){e.d(n,{Z:()=>s,a:()=>r});var i=e(67294);let d={},l=i.createContext(d);function r(t){let n=i.useContext(l);return i.useMemo(function(){return"function"==typeof t?t(n):{...n,...t}},[n,t])}function s(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(d):t.components||d:r(t.components),i.createElement(l.Provider,{value:n},t.children)}},15619:function(t){t.exports=JSON.parse('{"permalink":"/blog/2012/06/19/threading-modelsapartment-model","source":"@site/blog/2012-06-19-threading-modelsapartment-model.md","title":"COM Threading Models","description":"COM Threading Models / Apartment Model","date":"2012-06-19T00:00:00.000Z","tags":[{"inline":true,"label":"COM","permalink":"/blog/tags/com"}],"readingTime":2.77,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["COM"]},"unlisted":false,"prevItem":{"title":"WPF Basics","permalink":"/blog/2012/07/01/wpf-basics"},"nextItem":{"title":"COM Threading Model vs Win32/MFC Threads","permalink":"/blog/2012/06/18/com-threading-model-vs-win32mfc-threads"}}')}}]);