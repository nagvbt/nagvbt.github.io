"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["4905"],{3483:function(n,e,t){t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var o=t(82304),i=t(85893),r=t(50065);let a={tags:["COM"]},c="COM Containment and Aggregation",s={authorsImageUrls:[]},l=[];function p(n){let e={p:"p",...(0,r.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:"Containment and aggregation are techniques in which one component uses another component. Those two components are outer component, inner component. Outer component contains the inner component."}),"\n",(0,i.jsx)("table",{border:"1",cellspacing:"0",cellpadding:"0",children:(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{valign:"top",width:"343",children:(0,i.jsx)("strong",{children:"Containment"})}),(0,i.jsx)("td",{valign:"top",width:"343",children:(0,i.jsx)("strong",{children:"Aggregation"})})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{valign:"top",width:"343",children:"Outer component re implement the interface say IY of inner component by forwarding calls to the inner component."}),(0,i.jsx)("td",{valign:"top",width:"343",children:"Outer component will not re implement the interface say IY of inner component. Instead the outer component passes the inner component interface pointer say IY directly to the client."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{valign:"top",width:"343",children:"Outer component is client to inner component"}),(0,i.jsx)("td",{valign:"top",width:"343",children:"Inner component will be directly used by the client"})]})]})})]})}function m(n={}){let{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(p,{...n})}):p(n)}},50065:function(n,e,t){t.d(e,{Z:()=>c,a:()=>a});var o=t(67294);let i={},r=o.createContext(i);function a(n){let e=o.useContext(r);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),o.createElement(r.Provider,{value:e},n.children)}},82304:function(n){n.exports=JSON.parse('{"permalink":"/blog/2012/06/17/com-containment-and-aggregation","source":"@site/blog/2012-06-17-com-containment-and-aggregation.md","title":"COM Containment and Aggregation","description":"Containment and aggregation are techniques in which one component uses another component. Those two components are outer component, inner component. Outer component contains the inner component.","date":"2012-06-17T00:00:00.000Z","tags":[{"inline":true,"label":"COM","permalink":"/blog/tags/com"}],"readingTime":0.77,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["COM"]},"unlisted":false,"prevItem":{"title":"Unit Testing Native C++ App with out clr","permalink":"/blog/2012/06/18/unit-testing-nativE-C++"},"nextItem":{"title":"N-Tier Architecture","permalink":"/blog/2012/06/07/n-tier-architecture"}}')}}]);