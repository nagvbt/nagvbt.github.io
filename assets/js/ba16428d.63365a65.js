"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[90018],{65110:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>c,toc:()=>i});var o=t(85893),r=t(11151);const l={tags:["MFC"]},a="MFC Background color of the Dialog",c={permalink:"/blog/2011/09/03/mfcdailogbckcolor",source:"@site/blog/2011-09-03-mfcdailogbckcolor.md",title:"MFC:Fill Background color of the Dialog",description:"MFC Tip: To fill the Background color of the Dialog and get the background of the controls to look correct",date:"2011-09-03T00:00:00.000Z",formattedDate:"September 3, 2011",tags:[{label:"MFC",permalink:"/blog/tags/mfc"}],readingTime:.765,hasTruncateMarker:!1,authors:[],frontMatter:{tags:["MFC"]},unlisted:!1,prevItem:{title:"Obtain a pointer to various objects in MFC",permalink:"/blog/2011/09/03/MFC-pointer"},nextItem:{title:"XAML Auto formatting in Visual Studio 2010",permalink:"/blog/2011/08/24/xaml-auto-formatting-in-visual-studio-2010"}},s={authorsImageUrls:[]},i=[];function d(e){const n={code:"code",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"MFC Tip: To fill the Background color of the Dialog and get the background of the controls to look correct"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Handle the ON_WM_ERASEBKGND Message and write the following code"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:" BOOL CTNV_MFCDialogDemoDlg::OnEraseBkgnd(CDC\\* pDC)\r\n {\r\n CRect r;\r\n //GetClientRect gets the width & height of the client area of the Dialog\r\n GetClientRect(&r);\r\n CBrush br(RGB(0,255,0));\r\n pDC->SelectObject(br);\r\n pDC->FillRect(r,&br);\r\n \r\n //Make sure to return TRUE;\r\n  //return CDialogEx::OnEraseBkgnd(pDC);\r\n return TRUE;\r\n }\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"To \xa0get the background of the controls to look correct Handle the ON_WM_CTLCOLOR Message and write the following code - Make sure to return the Brush Handle which was created same as a color of Dialog Background."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:"HBRUSH CTNV_MFCDialogDemoDlg::OnCtlColor(CDC\\* pDC, CWnd* pWnd, UINT nCtlColor)\r\n{\r\n//HBRUSH hbr = CDialogEx::OnCtlColor(pDC, pWnd, nCtlColor);\r\n//return hbr;\r\n\r\n\r\n//Make sure to return the Brush color should be same as Dialog Background color \r\nCBrush br(RGB(0,255,0));\r\nreturn (HBRUSH)br; \r\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{})})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>a});var o=t(67294);const r={},l=o.createContext(r);function a(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);