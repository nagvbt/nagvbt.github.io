"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[62792],{3905:(n,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>f});var r=a(67294);function t(n,e,a){return e in n?Object.defineProperty(n,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[e]=a,n}function i(n,e){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),a.push.apply(a,r)}return a}function s(n){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){t(n,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(a,e))}))}return n}function o(n,e){if(null==n)return{};var a,r,t=function(n,e){if(null==n)return{};var a,r,t={},i=Object.keys(n);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(t[a]=n[a]);return t}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(n,a)&&(t[a]=n[a])}return t}var l=r.createContext({}),c=function(n){var e=r.useContext(l),a=e;return n&&(a="function"==typeof n?n(e):s(s({},e),n)),a},m=function(n){var e=c(n.components);return r.createElement(l.Provider,{value:e},n.children)},d="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(n,e){var a=n.components,t=n.mdxType,i=n.originalType,l=n.parentName,m=o(n,["components","mdxType","originalType","parentName"]),d=c(a),p=t,f=d["".concat(l,".").concat(p)]||d[p]||u[p]||i;return a?r.createElement(f,s(s({ref:e},m),{},{components:a})):r.createElement(f,s({ref:e},m))}));function f(n,e){var a=arguments,t=e&&e.mdxType;if("string"==typeof n||t){var i=a.length,s=new Array(i);s[0]=p;var o={};for(var l in e)hasOwnProperty.call(e,l)&&(o[l]=e[l]);o.originalType=n,o[d]="string"==typeof n?n:t,s[1]=o;for(var c=2;c<i;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},21782:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=a(87462),t=(a(67294),a(3905));const i={sidebar_position:8},s="Arrays",o={unversionedId:"articles/C/Arrays",id:"articles/C/Arrays",title:"Arrays",description:"1.\tDefine Array ?",source:"@site/docs/articles/C/Arrays.md",sourceDirName:"articles/C",slug:"/articles/C/Arrays",permalink:"/docs/articles/C/Arrays",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Functions",permalink:"/docs/articles/C/Functions"},next:{title:"Structures Unions Enumerations",permalink:"/docs/articles/C/Structures"}},l={},c=[{value:"1.\tDefine Array ?",id:"1define-array-",level:3},{value:"2.\tHow to declare an single dimensional Array and assign values ?",id:"2how-to-declare-an-single-dimensional-array-and-assign-values-",level:3},{value:"3.\tHow to access elements of an array?",id:"3how-to-access-elements-of-an-array",level:3},{value:"4.\tHow to declare an Two dimensional Array and assign values ?",id:"4how-to-declare-an-two-dimensional-array-and-assign-values-",level:3},{value:"7.\tWrite a program to find the Largest Two Numbers in a given Array ?",id:"7write-a-program-to-find-the-largest-two-numbers-in-a-given-array-",level:3},{value:"8. Write a program to find smallest among N numbers ?",id:"8-write-a-program-to-find-smallest-among-n-numbers-",level:3},{value:"9. Find the count of each character in a string ?",id:"9-find-the-count-of-each-character-in-a-string-",level:3},{value:"10. Write a program to count the number of  Vowels in a string/word ?",id:"10-write-a-program-to-count-the-number-of--vowels-in-a-stringword-",level:3}],m={toc:c},d="wrapper";function u(n){let{components:e,...a}=n;return(0,t.kt)(d,(0,r.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"arrays"},"Arrays"),(0,t.kt)("h3",{id:"1define-array-"},"1.\tDefine Array ?"),(0,t.kt)("p",null,"Definition: An Array is a collection of variables of the same data type that are referenced by a common name."),(0,t.kt)("h3",{id:"2how-to-declare-an-single-dimensional-array-and-assign-values-"},"2.\tHow to declare an single dimensional Array and assign values ?"),(0,t.kt)("p",null,"Like any other variable arrays must be declared before they are used. "),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Declaration Syntax:")),"\ndataType arrayName","[size]",";"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Example:"))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-c"},"int num[10];\ndeclares an array of integers of size 10\n\n* Declaration Assigning Values Syntax: *\ndataType arrayName[size] = {comma separated values};\ndataType arrayName[] = {comma separated values};\n      or\narrayname[index] = value;\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Example:"))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-c"},"// siged array\nint num[3] = {11, 12, 13, 14}; \n// unsized array\nint num[] = {11, 12, 13, 14};  \nor\nnum[0] = 11;\nnum[1] = 12;\nnum[2] = 13;\nnum[3] = 14;\n")),(0,t.kt)("h3",{id:"3how-to-access-elements-of-an-array"},"3.\tHow to access elements of an array?"),(0,t.kt)("p",null,"a.\tEntering Data into an array:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-c"},'    for (int i = 0 ; i < size ; i++ ) \n    { \n        printf ( "Enter marks " );\n           /* store data in array */\n        scanf ( "%d", & arrayName [i] );\n    }\n')),(0,t.kt)("p",null,"b.\tReading Data from an array:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-c"},"    for (int i = 0 ; i < size ; i++ ) \n    {\n        /* read data from an array*/\n        int temp = arrayName [i];\n    }\n")),(0,t.kt)("h3",{id:"4how-to-declare-an-two-dimensional-array-and-assign-values-"},"4.\tHow to declare an Two dimensional Array and assign values ?"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Declaration Syntax: *\nint twoDimensional","[rowSize][columnSize]",";")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Example:"))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-c"},'//Declares an array of integer matrix of row size 4 and column size 2\nint matrix[4][2]; \n\n* Declaration Assigning Values Syntax: *\ndataType twoDimensional[rowSize][columnSize] = {comma separated values};\n``\n*  Example: *\n\nint matrix[4][2] = { \n                        {1, 2}, \n                        {3, 4}, \n                        {5, 6}, \n                        {7, 8}\n                    };\n\n### 5.   Write a program to find an average of seven subjects marks using an array?\n```c\n#include <stdio.h>\nint main()\n{ \n    int avg, sum = 0; int i; \n   /* array declaration */\n    int marks[7];\n\n   for ( i = 0 ; i < 7 ; i++ ) \n    { \n        printf ( "Enter marks " );\n        /* store data in array */\n        scanf ( "%d", &marks[i] );\n    }\n    for ( i = 0 ; i < 7 ; i++ ) \n    {\n        /* read data from an array*/\n        sum = sum + marks[i];\n    }\n    avg = sum / 7 ; \n\n   printf ("\\nAverage marks = %d", avg) ;\n   return 0;\n}\n\nOUTPUT:\nEnter marks 1\nEnter marks 2\nEnter marks 3\nEnter marks 4\nEnter marks 5\nEnter marks 6\nEnter marks 7\nAverage marks = 4\n```c\n\n### 6.  How to pass Single-Dimension Arrays to Functions?\n\nIn C, you cannot pass an entire array as an argument to a function. You can, however, pass a pointer to an array by specifying the arrays name without an index as shown in below example printArray(num);\n\nExample:Passing Array to function\n```c\n#include <stdio.h>\nvoid printArray(int x[5]); //function declaration\n\nvoid main()\n{\n /*  int num[5];*/\n\n   int num[5] = {0,1,2,3,4};\n   num[4] = 10;\n\n   printArray(num);\n}\n\n//function Definition\nvoid printArray(int x[5])\n{\n   for(int i = 0; i<5; i++)\n   {\n     printf("%d ",x[i]);\n   }\n}\n\n*OUTPUT: *\n0 1 2 3 10\n')),(0,t.kt)("p",null,"We can write function argument in to three ways pass an array"),(0,t.kt)("p",null,"Sized Array\t:"),(0,t.kt)("p",null,"void printArray(int x","[5]",")\n{\n//Code\n}\t"),(0,t.kt)("p",null,"UnSized Array:"),(0,t.kt)("p",null,"void printArray(int x[])\n{\n//Code\n}\t"),(0,t.kt)("p",null,"Using pointer :"),(0,t.kt)("p",null,"void printArray(int *x)\n{\n//Code\n}"),(0,t.kt)("h3",{id:"7write-a-program-to-find-the-largest-two-numbers-in-a-given-array-"},"7.\tWrite a program to find the Largest Two Numbers in a given Array ?"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#define MAX 4\n \nvoid main()\n{\n    int array[MAX], i, largest1, largest2, temp;\n \n    printf("Enter %d integer numbers \\n", MAX);\n    for (i = 0; i < MAX; i++)\n    {\n        scanf("%d", &array[i]);\n    }\n \n    printf("Input interger are \\n");\n    for (i = 0; i < MAX; i++)\n    {\n      printf("%5d", array[i]);\n    }\n    printf("\\n");\n    /*  assume first element of array is the first larges t*/\n    largest1 = array[0];\n    /*  assume first element of array is the second largest */\n    largest2 = array[1];\n    if (largest1 < largest2)\n    {\n        temp = largest1;\n        largest1 = largest2;\n        largest2 = temp;\n    }\n    for (i = 2; i < 4;  i++)\n    {\n        if (array[i] >= largest1)\n        {\n            largest2 = largest1;\n            largest1 = array[i];\n        }\n        else if (array[i] > largest2)\n        {\n            largest2 = array[i];\n        }\n    }\n    printf("n%d is the first largest \\n", largest1);\n    printf("%d is the second largest \\n", largest2);\n    printf("nAverage of %d and %d = %d \\n", largest1, largest2, (largest1 + largest2) / 2);\n}\n\nOUTPUT: \nEnter 4 integer numbers\n80\n23\n79\n58\nInput interger are\n80   23   79   58\n \n80 is the first largest\n79 is the second largest\n \nAverage of 80 and 79 = 79\n')),(0,t.kt)("h3",{id:"8-write-a-program-to-find-smallest-among-n-numbers-"},"8. Write a program to find smallest among N numbers ?"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h> \nmain() \n{ \n    int a[10], i, small; \n    printf("\\nEnter elements of an array:\\n"); \n    for (i=0; i<=9; i++) \n    scanf("%d", &a[i]); \n    small = a[0]; \n    for (i=0; i<=9; i++) \n    if (a[i] < small) \n    small = a[i]; \n    printf("\\nSmallest number is %d", small); \n}\n')),(0,t.kt)("h3",{id:"9-find-the-count-of-each-character-in-a-string-"},"9. Find the count of each character in a string ?"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>          \n#define LEN 255  //Total ASCII Characterset\nvoid main()\n{\n    int ASCII[LEN];\n    char sentence[100];\n    int count = 0, j = 0;\n    int code;\n\n    //Initialize the ASCII Array with Zero\n    for(int i = 0; i<LEN; i++)\n    {\n        ASCII[i] = 0;\n    }\n\n    printf("Enter the sentence: \\n");\n    for(j = 0; (sentence[j] = getchar())!=\'\\n\'; j++) { }\n    \n    sentence[j] = \'\\0\';\n    count = j;\n\n    //Increment the value of the corresponding ASCII Array\n    //Index (code) represents the ASCII Character\n    for(int idx = 0; idx<count; idx++)\n    {\n        code = sentence [ idx ];\n        ASCII[ code]  = ASCII[ code ]+1;\n    }\n\n    printf("The given sentence is: %s \\n",sentence);\n\n    //Print the Result\n    int TotalChars = 0;\n    for(int ch = 0; ch<LEN; ch++)\n    {\n        if(ASCII[ch] != 0)\n        {\n            int cnt = ASCII[ch];\n            TotalChars = TotalChars + cnt;\n            switch(ch)\n            {\n            case 9:\n                printf("Horizontal Tab - %d\\n", cnt);\n                break;\n            case 11:\n                printf("Vertical Tab - %d\\n", cnt);\n                break;\n            case 32:\n                printf("Space - %d\\n", cnt);\n                break;\n            default:\n                printf("%c - %d\\n",ch, cnt);\n                break;\n            }\n        }\n    }\n    printf("Total Characters - %d\\n", TotalChars);\n}\n')),(0,t.kt)("h3",{id:"10-write-a-program-to-count-the-number-of--vowels-in-a-stringword-"},"10. Write a program to count the number of  Vowels in a string/word ?"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-c"},"#include <stdio.h>\nmain()\n{\n    int i, vowels = 0;\n    char word[20];\n    printf(\"Enter the word\\n\");\n    scanf(\"%s\",word);\n    i = 0;\n\n    while(i<20 && word[i]!='\\0')\n    {\n        switch(word[i])\n        {\n            case 'a': case 'A';\n            case 'e': case 'E';\n            case 'i': case 'I';\n            case 'o': case 'O';\n            case 'u': case 'U';\n                vowels++;\n                break;\n        }\n    i++;\n    }\n    printf(\"The number of Vovels in a word are %d\\n\", vowels);\n}\n")))}u.isMDXComponent=!0}}]);