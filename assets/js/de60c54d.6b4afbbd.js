"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[3610],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),u=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(a),m=n,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||i;return a?r.createElement(f,s(s({ref:t},c),{},{components:a})):r.createElement(f,s({ref:t},c))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:n,s[1]=o;for(var u=2;u<i;u++)s[u]=a[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1108:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=a(7462),n=(a(7294),a(3905));const i={sidebar_position:11},s="Data Structures",o={unversionedId:"articles/C/DataStructures",id:"articles/C/DataStructures",title:"Data Structures",description:"1. What is a Data Structures ?",source:"@site/docs/articles/C/DataStructures.md",sourceDirName:"articles/C",slug:"/articles/C/DataStructures",permalink:"/docs/articles/C/DataStructures",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Pointers",permalink:"/docs/articles/C/Pointers"},next:{title:"CSS",permalink:"/docs/category/css"}},l={},u=[{value:"1. What is a Data Structures ?",id:"1-what-is-a-data-structures-",level:3},{value:"2. What are the types of Data Structures ?",id:"2-what-are-the-types-of-data-structures-",level:3},{value:"3. What are the types of Dynamic Data Structures ?",id:"3-what-are-the-types-of-dynamic-data-structures-",level:3},{value:"4. Define Linear data structures ?",id:"4-define-linear-data-structures-",level:3},{value:"5. What is a Linked  List ?",id:"5-what-is-a-linked--list-",level:3},{value:"6. What is a Stack ?",id:"6-what-is-a-stack-",level:3},{value:"7. What is a Queue ?",id:"7-what-is-a-queue-",level:3},{value:"8. Define Nonlinear data structures ?",id:"8-define-nonlinear-data-structures-",level:3},{value:"9. What is a Binary Tree ?",id:"9-what-is-a-binary-tree-",level:3},{value:"10.\tHow many times the following program would print \u2018Laksgan.com\u2019 ?",id:"10how-many-times-the-following-program-would-print-laksgancom-",level:3}],c={toc:u},d="wrapper";function p(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"data-structures"},"Data Structures"),(0,n.kt)("h3",{id:"1-what-is-a-data-structures-"},"1. What is a Data Structures ?"),(0,n.kt)("p",null,"Data structure is a particular way of storing and organizing data in a computer so that it can be used efficiently."),(0,n.kt)("h3",{id:"2-what-are-the-types-of-data-structures-"},"2. What are the types of Data Structures ?"),(0,n.kt)("p",null,"1.Fixed-Size Data structures: such as one-dimensional arrays, two-dimensional arrays and structs. "),(0,n.kt)("p",null,"2.Dynamic data structures: grow and shrink during execution."),(0,n.kt)("h3",{id:"3-what-are-the-types-of-dynamic-data-structures-"},"3. What are the types of Dynamic Data Structures ?"),(0,n.kt)("p",null,"Linear data structures and Nonlinear data structures"),(0,n.kt)("h3",{id:"4-define-linear-data-structures-"},"4. Define Linear data structures ?"),(0,n.kt)("p",null,"The data items are arranged in a sequential structure. Example "),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Linked lists "),(0,n.kt)("li",{parentName:"ol"},"Stacks "),(0,n.kt)("li",{parentName:"ol"},"Queues")),(0,n.kt)("h3",{id:"5-what-is-a-linked--list-"},"5. What is a Linked  List ?"),(0,n.kt)("p",null,'Linked lists are collections of data items "lined up in a row" insertions and removals are made anywhere in a linked list.'),(0,n.kt)("h3",{id:"6-what-is-a-stack-"},"6. What is a Stack ?"),(0,n.kt)("p",null,"Stacks are important in compilers and operating systems: Insertions and removals are made only at one end of a stackits top."),(0,n.kt)("h3",{id:"7-what-is-a-queue-"},"7. What is a Queue ?"),(0,n.kt)("p",null,"Queues represent waiting lines; insertions are made at the back (also referred to as the tail) of a queue and removals are made from the front (also referred to as the head) of a queue."),(0,n.kt)("h3",{id:"8-define-nonlinear-data-structures-"},"8. Define Nonlinear data structures ?"),(0,n.kt)("p",null,"The data items are not arranged in a sequential structure. Example: Binary Tree"),(0,n.kt)("h3",{id:"9-what-is-a-binary-tree-"},"9. What is a Binary Tree ?"),(0,n.kt)("p",null,"Binary trees facilitate high-speed searching and sorting of data, efficient elimination of duplicate data items, representation of file system directories and compilation of expressions into machine language."),(0,n.kt)("h3",{id:"10how-many-times-the-following-program-would-print-laksgancom-"},"10.\tHow many times the following program would print \u2018Laksgan.com\u2019 ?"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\nmain ()\n{  \n  printf("\\n Laksgan.com");\n  main();\n}\n')),(0,n.kt)("p",null,"Answer: Till the stack doesn\u2019t overflow"))}p.isMDXComponent=!0}}]);