"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[20998],{28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>o});var t=n(96540);const i={},a=t.createContext(i);function r(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:s},e.children)}},75831:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"articles/Cpp/OOPS","title":"OOPS","description":"OOPS FAQ","source":"@site/docs/articles/Cpp/OOPS.md","sourceDirName":"articles/Cpp","slug":"/articles/Cpp/OOPS","permalink":"/docs/articles/Cpp/OOPS","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"C++","permalink":"/docs/category/c-2"},"next":{"title":"Classes","permalink":"/docs/articles/Cpp/Classes"}}');var i=n(74848),a=n(28453);const r={sidebar_position:1},o="OOPS",c={},h=[{value:"OOPS FAQ",id:"oops-faq",level:2},{value:"1.Define OOPS?",id:"1define-oops",level:3},{value:"2.What is Encapsulation ?",id:"2what-is-encapsulation-",level:3},{value:"3.What is Data Abstraction ?",id:"3what-is-data-abstraction-",level:3},{value:"4.What is Polymorphism ?",id:"4what-is-polymorphism-",level:3},{value:"5.What is Inheritance ?",id:"5what-is-inheritance-",level:3},{value:"6.What is Object-Based Language ?",id:"6what-is-object-based-language-",level:3},{value:"7.Why we use Interface ?",id:"7why-we-use-interface-",level:3}];function l(e){const s={em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"oops",children:"OOPS"})}),"\n",(0,i.jsx)(s.h2,{id:"oops-faq",children:"OOPS FAQ"}),"\n",(0,i.jsx)(s.h3,{id:"1define-oops",children:"1.Define OOPS?"}),"\n",(0,i.jsx)(s.p,{children:"Object-Oriented Programming is a programming methodology which offers a new model where data and processes are integrated.\r\ne.g: C++, C#, Java"}),"\n",(0,i.jsx)(s.h3,{id:"2what-is-encapsulation-",children:"2.What is Encapsulation ?"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"Short Answer:"})})," Binds code and data"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"Long Answer:"})})," Encapsulation is the mechanism that binds together the code and data it manipulates into a single unit and keeps them safe from external interference and misuse."]}),"\n",(0,i.jsx)(s.p,{children:"In C++ this is supported by a construct called class."}),"\n",(0,i.jsx)(s.h3,{id:"3what-is-data-abstraction-",children:"3.What is Data Abstraction ?"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"Short Answer:"})})," Hide background details"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"Long Answer:"})})," The technique of creating a new data type that are well suited to an application to be programmed is known as data abstraction."]}),"\n",(0,i.jsx)(s.p,{children:"e.g: Stack \u2013 We can use push & pop without bothering how the push and pop operations performed."}),"\n",(0,i.jsx)(s.p,{children:"The class is a construct in C++ for creating user-defined data types called Abstract Data Types (ADT\u2019s)"}),"\n",(0,i.jsx)(s.h3,{id:"4what-is-polymorphism-",children:"4.What is Polymorphism ?"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"Short Answer:"})})," Polymorphism means the ability to assume several forms."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"Long Answer:"})})," Polymorphism refers to the ability of an entity to refer to objects of various classes at runtime."]}),"\n",(0,i.jsx)(s.h3,{id:"5what-is-inheritance-",children:"5.What is Inheritance ?"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"Short Answer:"})})," Extension & reuse of existing code"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"Long Answer:"})})," Inheritance allows the extension & reuse of existing code (class) without having to rewrite the code from scratch. Inheritance involves the creation of a new class (derived class) from the existing ones (base classes)"]}),"\n",(0,i.jsx)(s.p,{children:"The new derived class inherits the members of the base class and also adds its own."}),"\n",(0,i.jsx)(s.p,{children:"e.g: Child inherits features from their parents refine some of them and add a few of their own."}),"\n",(0,i.jsx)(s.h3,{id:"6what-is-object-based-language-",children:"6.What is Object-Based Language ?"}),"\n",(0,i.jsx)(s.p,{children:"Languages that do not support OOPS featurs like inheritance and polymorphism but only supports objects are called object-based language.\r\ne.g: Visual Basic"}),"\n",(0,i.jsx)(s.h3,{id:"7why-we-use-interface-",children:"7.Why we use Interface ?"}),"\n",(0,i.jsx)(s.p,{children:"Interfaces provides the flexibility to change the Implemenatation with out breaking the existing clients. Interfaces are used in COM, EJB e.t.c"})]})}function d(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);