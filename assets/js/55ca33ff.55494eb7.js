"use strict";(self.webpackChunkNBT=self.webpackChunkNBT||[]).push([["10506"],{8545:function(t,n,e){e.r(n),e.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var o=e(11735),i=e(85893),a=e(50065);let r={tags:["WPF"]},l="XAML Auto formatting in Visual Studio 2010",s={authorsImageUrls:[]},c=[];function m(t){let n={code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"To Auto format XAML code in a readable and organized way"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Open Visual Studio 2010"}),"\n",(0,i.jsx)(n.li,{children:"Go to Menu: Tools->Options"}),"\n",(0,i.jsx)(n.li,{children:"Select Text Editor |->XAML |->Formatting |->Spacing"}),"\n",(0,i.jsx)(n.li,{children:"Set the options 1 & 2 as shown in the below image"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Sample Code:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<Window x:Class="WpfApplication1.MainWindow" xmlns="[http://schemas.microsoft.com/winfx/2006/xaml/presentation"](http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot); xmlns:x="[http://schemas.microsoft.com/winfx/2006/xaml"](http://schemas.microsoft.com/winfx/2006/xaml&quot); Title="MainWindow" Height="350" Width="525"> \r\n<Grid> \x3c!--Before Auto formatting --\x3e \r\n<Button Content="Button" Height="23" HorizontalAlignment="Left" Margin="66,52,0,0" Name="button1" VerticalAlignment="Top" Width="75" /> \x3c!--After Auto formatting --\x3e \r\n<Button Content="Button" Height="23" HorizontalAlignment="Left" Margin="248,68,0,0" Name="button2" VerticalAlignment="Top" Width="75" /> </Grid> \r\n</Window> \n'})})]})}function u(t={}){let{wrapper:n}={...(0,a.a)(),...t.components};return n?(0,i.jsx)(n,{...t,children:(0,i.jsx)(m,{...t})}):m(t)}},50065:function(t,n,e){e.d(n,{Z:()=>l,a:()=>r});var o=e(67294);let i={},a=o.createContext(i);function r(t){let n=o.useContext(a);return o.useMemo(function(){return"function"==typeof t?t(n):{...n,...t}},[n,t])}function l(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:r(t.components),o.createElement(a.Provider,{value:n},t.children)}},11735:function(t){t.exports=JSON.parse('{"permalink":"/blog/2011/08/24/xaml-auto-formatting-in-visual-studio-2010","source":"@site/blog/2011-08-24-xaml-auto-formatting-in-visual-studio-2010.md","title":"XAML Auto formatting in Visual Studio 2010","description":"To Auto format XAML code in a readable and organized way","date":"2011-08-24T00:00:00.000Z","tags":[{"inline":true,"label":"WPF","permalink":"/blog/tags/wpf"}],"readingTime":0.67,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["WPF"]},"unlisted":false,"prevItem":{"title":"MFC:Fill Background color of the Dialog","permalink":"/blog/2011/09/03/mfcdailogbckcolor"},"nextItem":{"title":"LightSwitch 2011","permalink":"/blog/2011/07/27/lightswitch-2011"}}')}}]);