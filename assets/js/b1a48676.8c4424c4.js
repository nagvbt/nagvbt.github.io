"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[83397],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},f="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),f=l(t),d=o,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||i;return t?a.createElement(m,r(r({ref:n},u),{},{components:t})):a.createElement(m,r({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[f]="string"==typeof e?e:o,r[1]=s;for(var l=2;l<i;l++)r[l]=t[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},91735:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=t(87462),o=(t(67294),t(3905));const i={sidebar_position:2},r="Functions",s={unversionedId:"articles/Cpp/Functions",id:"articles/Cpp/Functions",title:"Functions",description:"1.What is the advantage of Pass by reference ?",source:"@site/docs/articles/Cpp/Functions.md",sourceDirName:"articles/Cpp",slug:"/articles/Cpp/Functions",permalink:"/docs/articles/Cpp/Functions",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Classes",permalink:"/docs/articles/Cpp/Classes"},next:{title:"Polymorphism",permalink:"/docs/articles/Cpp/Polymorphism"}},c={},l=[{value:"1.What is the advantage of Pass by reference ?",id:"1what-is-the-advantage-of-pass-by-reference-",level:3},{value:"2.What is the advantage of Inline Functions over Macros ?",id:"2what-is-the-advantage-of-inline-functions-over-macros-",level:3},{value:"3.Define Default Function Arguments?",id:"3define-default-function-arguments",level:3},{value:"4.What is a Friend Function?",id:"4what-is-a-friend-function",level:3},{value:"5.Can a Member functions of one class can be friend functions of another class ?",id:"5can-a-member-functions-of-one-class-can-be-friend-functions-of-another-class-",level:3},{value:"6.How to access global version instead of local version in a function ?",id:"6how-to-access-global-version-instead-of-local-version-in-a-function-",level:3},{value:"7.What is the difference between Static and Constant Member Functions ?",id:"7what-is-the-difference-between-static-and-constant-member-functions-",level:3}],u={toc:l},f="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(f,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"functions"},"Functions"),(0,o.kt)("h3",{id:"1what-is-the-advantage-of-pass-by-reference-"},"1.What is the advantage of Pass by reference ?"),(0,o.kt)("p",null,"Pass by reference is more efficient since it requires to pass only the address of the object and not the entire object."),(0,o.kt)("h3",{id:"2what-is-the-advantage-of-inline-functions-over-macros-"},"2.What is the advantage of Inline Functions over Macros ?"),(0,o.kt)("p",null,"Advantages of Inline Functions:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"It speeds up the program execution and increase efficiency of the program\n"),(0,o.kt)("li",{parentName:"ol"},"It will decrease over head on the computer\n"),(0,o.kt)("li",{parentName:"ol"},"The inline functions are applicable to small functions only")),(0,o.kt)("h3",{id:"3define-default-function-arguments"},"3.Define Default Function Arguments?"),(0,o.kt)("p",null,"C++ allows a function to assign a parameter a default value when no argument corresponding to that parameter is specified in a call to that function."),(0,o.kt)("p",null,"We can also use default parameters in a object constructor."),(0,o.kt)("p",null,"e.g: void myFun(double d, int i = 0)"),(0,o.kt)("h3",{id:"4what-is-a-friend-function"},"4.What is a Friend Function?"),(0,o.kt)("p",null,"Friend Function is not a member variable.  It has full access to the private members of the class. A function declared as a friend is not in the scope of the class to which it has been declared as a friend. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class MyCls {\nprivate:\n    int j;\npublic:\n    MyClass() { j = 12; }\n    friend void fun1(MyCls m);\n};\nvoid fun1(MyCls m) { cout << m.j; }\n\nvoid main() {\n    MyCls obj;\n    fun1(obj);\n}\n\nOutput: 12\n")),(0,o.kt)("h3",{id:"5can-a-member-functions-of-one-class-can-be-friend-functions-of-another-class-"},"5.Can a Member functions of one class can be friend functions of another class ?"),(0,o.kt)("p",null,"Yes ! In such cases they are defined using the scope resolution operator (::)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class C2;\nclass C1 {\n    int No1;\npublic:\n    C1() { No1 = 10; }\n    int Add(C2 b);\n};\nclass C2 {\n    int No2;\npublic:\n    C2() { No2 = 20; }\n    friend int C1::Add(C2 b);\n};\n\nint C1::Add(C2 b) {\n    return No1 + b.No2;\n}\n\nvoid main() {\n    C1 x;\n    C2 y;\n    cout << x.Add(y);\n}\n\nOutput: 30\n")),(0,o.kt)("h3",{id:"6how-to-access-global-version-instead-of-local-version-in-a-function-"},"6.How to access global version instead of local version in a function ?"),(0,o.kt)("p",null,"In order to access global version of \u2018i\u2019 instead of local version of I use scope resolution operator (::)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"int i = 10;\nvoid fun()\n{\n    int i = 5;\n    cout<<::i; //output:10\n    cout<<i;   //output:5\n}\n")),(0,o.kt)("h3",{id:"7what-is-the-difference-between-static-and-constant-member-functions-"},"7.What is the difference between Static and Constant Member Functions ?"),(0,o.kt)("p",null,"Static Member Functions:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"If can have access to only other static members (functions of variables) declared in the same class.\n")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"If can be called using the class name (instead of its objects) as follows."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"        class _name::function name\n\n    \n")))),(0,o.kt)("p",null,"Constant Members Functions:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"If a member function does not alter any data in the class then we may declare it as a constant member function as follows.")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"void (int a, int b)  const { }")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"The complier will generate an error message if such function try to alter the data value.")))}p.isMDXComponent=!0}}]);