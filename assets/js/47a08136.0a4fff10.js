"use strict";(self.webpackChunknagvbt=self.webpackChunknagvbt||[]).push([[73606],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),p=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(u.Provider,{value:n},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=p(t),d=a,f=s["".concat(u,".").concat(d)]||s[d]||m[d]||o;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l[s]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},55127:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const o={tags:["Data Structures","C++"]},i="Simple Queue program in C++",l={permalink:"/blog/2012/04/02/queue",source:"@site/blog/2012-04-02-queue.md",title:"Simple Queue program in C++",description:"Definition:",date:"2012-04-02T00:00:00.000Z",formattedDate:"April 2, 2012",tags:[{label:"Data Structures",permalink:"/blog/tags/data-structures"},{label:"C++",permalink:"/blog/tags/c"}],readingTime:.87,hasTruncateMarker:!1,authors:[],frontMatter:{tags:["Data Structures","C++"]},prevItem:{title:"'Builder' Design Pattern using simple program",permalink:"/blog/2012/04/03/builderdesignpatter"},nextItem:{title:"Simple Stack Program in C++",permalink:"/blog/2012/04/02/stack"}},u={authorsImageUrls:[]},p=[],c={toc:p},s="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(s,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Definition:")),(0,a.kt)("p",null,"A Queue\xa0is a data structure in which addition of new element takes place at the end called ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"rear"))," of Queue and\xa0deletion of existing element takes place at the other end called ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"front"))," of Queue\xa0."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Principle:")),(0,a.kt)("p",null,"Queue\xa0works on the ",(0,a.kt)("strong",{parentName:"p"},"FIFO")," \u2013 ",(0,a.kt)("strong",{parentName:"p"},"F"),"irst\xa0",(0,a.kt)("strong",{parentName:"p"},"I"),"n ",(0,a.kt)("strong",{parentName:"p"},"F"),"irst ",(0,a.kt)("strong",{parentName:"p"},"O"),"ut principle"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include "stdafx.h"\n#include "iostream"\nusing namespace std;\n\n#define MAX 10\n\nclass Queue\n{\nprivate:\n       int arr[MAX];\n       int front, rear;\n\npublic:\n      Queue()\n      {\n            front = -1;\n            rear  = -1;\n\n      }\n\n       void Add(int item)\n      {\n             if(rear == MAX-1)\n            {\n                  cout<<endl<< "Queue is full";\n                   return;\n            }\n\n            rear++;\n            arr[rear] = item;\n\n             if( front == -1 )\n                  front = 0;\n      }\n\n       int Delete()\n      {\n             if(front == -1)\n            {\n                  cout<<endl<< "Queue is empty";\n                   return NULL;\n            }\n\n        int data = arr[front];\n\n             if( front == rear)\n                  front = rear = -1;\n             else\n                  front++;\n\n             return data;\n      }\n};\n\nint main()\n{\n      Queue q;\n\n      q.Add(1);\n      q.Add(2);\n      q.Add(3);\n\n       int i = q.Delete();\n      cout<<endl<< "item="" deleted="<<i<<endl;\n\n      i = q.Delete();\n      cout<<endl<< "Item deleted = "<<i<<endl;\n\n       return 0;\n}\n\n/*\nOUTPUT\n----------------\nItem deleted = 1\n\nItem deleted = 2\n*/\n')))}m.isMDXComponent=!0}}]);